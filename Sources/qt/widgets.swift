class Widgets {
    private static var inited = false
    public static func initModule() {
        if inited { return }
        inited = true
        constructorTable["widgets.QAbstractButton"] = NewQAbstractButtonFromPointer
        constructorTable["widgets.QAbstractGraphicsShapeItem"] = NewQAbstractGraphicsShapeItemFromPointer
        constructorTable["widgets.QAbstractItemDelegate"] = NewQAbstractItemDelegateFromPointer
        constructorTable["widgets.QAbstractItemView"] = NewQAbstractItemViewFromPointer
        constructorTable["widgets.QAbstractScrollArea"] = NewQAbstractScrollAreaFromPointer
        constructorTable["widgets.QAbstractSlider"] = NewQAbstractSliderFromPointer
        constructorTable["widgets.QAbstractSpinBox"] = NewQAbstractSpinBoxFromPointer
        constructorTable["widgets.QAccessibleWidget"] = NewQAccessibleWidgetFromPointer
        constructorTable["widgets.QAction"] = NewQActionFromPointer
        constructorTable["widgets.QActionGroup"] = NewQActionGroupFromPointer
        constructorTable["widgets.QApplication"] = NewQApplicationFromPointer
        constructorTable["widgets.QBoxLayout"] = NewQBoxLayoutFromPointer
        constructorTable["widgets.QButtonGroup"] = NewQButtonGroupFromPointer
        constructorTable["widgets.QCalendarWidget"] = NewQCalendarWidgetFromPointer
        constructorTable["widgets.QCheckBox"] = NewQCheckBoxFromPointer
        constructorTable["widgets.QColorDialog"] = NewQColorDialogFromPointer
        constructorTable["widgets.QColormap"] = NewQColormapFromPointer
        constructorTable["widgets.QColumnView"] = NewQColumnViewFromPointer
        constructorTable["widgets.QComboBox"] = NewQComboBoxFromPointer
        constructorTable["widgets.QCommandLinkButton"] = NewQCommandLinkButtonFromPointer
        constructorTable["widgets.QCommonStyle"] = NewQCommonStyleFromPointer
        constructorTable["widgets.QCompleter"] = NewQCompleterFromPointer
        constructorTable["widgets.QDataWidgetMapper"] = NewQDataWidgetMapperFromPointer
        constructorTable["widgets.QDateEdit"] = NewQDateEditFromPointer
        constructorTable["widgets.QDateTimeEdit"] = NewQDateTimeEditFromPointer
        constructorTable["widgets.QDesktopWidget"] = NewQDesktopWidgetFromPointer
        constructorTable["widgets.QDial"] = NewQDialFromPointer
        constructorTable["widgets.QDialog"] = NewQDialogFromPointer
        constructorTable["widgets.QDialogButtonBox"] = NewQDialogButtonBoxFromPointer
        constructorTable["widgets.QDirModel"] = NewQDirModelFromPointer
        constructorTable["widgets.QDockWidget"] = NewQDockWidgetFromPointer
        constructorTable["widgets.QDoubleSpinBox"] = NewQDoubleSpinBoxFromPointer
        constructorTable["widgets.QErrorMessage"] = NewQErrorMessageFromPointer
        constructorTable["widgets.QFileDialog"] = NewQFileDialogFromPointer
        constructorTable["widgets.QFileIconProvider"] = NewQFileIconProviderFromPointer
        constructorTable["widgets.QFileSystemModel"] = NewQFileSystemModelFromPointer
        constructorTable["widgets.QFocusFrame"] = NewQFocusFrameFromPointer
        constructorTable["widgets.QFontComboBox"] = NewQFontComboBoxFromPointer
        constructorTable["widgets.QFontDialog"] = NewQFontDialogFromPointer
        constructorTable["widgets.QFormLayout"] = NewQFormLayoutFromPointer
        constructorTable["widgets.QFrame"] = NewQFrameFromPointer
        constructorTable["widgets.QGesture"] = NewQGestureFromPointer
        constructorTable["widgets.QGestureEvent"] = NewQGestureEventFromPointer
        constructorTable["widgets.QGestureRecognizer"] = NewQGestureRecognizerFromPointer
        constructorTable["widgets.QGraphicsAnchor"] = NewQGraphicsAnchorFromPointer
        constructorTable["widgets.QGraphicsAnchorLayout"] = NewQGraphicsAnchorLayoutFromPointer
        constructorTable["widgets.QGraphicsBlurEffect"] = NewQGraphicsBlurEffectFromPointer
        constructorTable["widgets.QGraphicsColorizeEffect"] = NewQGraphicsColorizeEffectFromPointer
        constructorTable["widgets.QGraphicsDropShadowEffect"] = NewQGraphicsDropShadowEffectFromPointer
        constructorTable["widgets.QGraphicsEffect"] = NewQGraphicsEffectFromPointer
        constructorTable["widgets.QGraphicsEllipseItem"] = NewQGraphicsEllipseItemFromPointer
        constructorTable["widgets.QGraphicsGridLayout"] = NewQGraphicsGridLayoutFromPointer
        constructorTable["widgets.QGraphicsItem"] = NewQGraphicsItemFromPointer
        constructorTable["widgets.QGraphicsItemAnimation"] = NewQGraphicsItemAnimationFromPointer
        constructorTable["widgets.QGraphicsItemGroup"] = NewQGraphicsItemGroupFromPointer
        constructorTable["widgets.QGraphicsLayout"] = NewQGraphicsLayoutFromPointer
        constructorTable["widgets.QGraphicsLayoutItem"] = NewQGraphicsLayoutItemFromPointer
        constructorTable["widgets.QGraphicsLineItem"] = NewQGraphicsLineItemFromPointer
        constructorTable["widgets.QGraphicsLinearLayout"] = NewQGraphicsLinearLayoutFromPointer
        constructorTable["widgets.QGraphicsObject"] = NewQGraphicsObjectFromPointer
        constructorTable["widgets.QGraphicsOpacityEffect"] = NewQGraphicsOpacityEffectFromPointer
        constructorTable["widgets.QGraphicsPathItem"] = NewQGraphicsPathItemFromPointer
        constructorTable["widgets.QGraphicsPixmapItem"] = NewQGraphicsPixmapItemFromPointer
        constructorTable["widgets.QGraphicsPolygonItem"] = NewQGraphicsPolygonItemFromPointer
        constructorTable["widgets.QGraphicsProxyWidget"] = NewQGraphicsProxyWidgetFromPointer
        constructorTable["widgets.QGraphicsRectItem"] = NewQGraphicsRectItemFromPointer
        constructorTable["widgets.QGraphicsRotation"] = NewQGraphicsRotationFromPointer
        constructorTable["widgets.QGraphicsScale"] = NewQGraphicsScaleFromPointer
        constructorTable["widgets.QGraphicsScene"] = NewQGraphicsSceneFromPointer
        constructorTable["widgets.QGraphicsSceneContextMenuEvent"] = NewQGraphicsSceneContextMenuEventFromPointer
        constructorTable["widgets.QGraphicsSceneDragDropEvent"] = NewQGraphicsSceneDragDropEventFromPointer
        constructorTable["widgets.QGraphicsSceneEvent"] = NewQGraphicsSceneEventFromPointer
        constructorTable["widgets.QGraphicsSceneHelpEvent"] = NewQGraphicsSceneHelpEventFromPointer
        constructorTable["widgets.QGraphicsSceneHoverEvent"] = NewQGraphicsSceneHoverEventFromPointer
        constructorTable["widgets.QGraphicsSceneMouseEvent"] = NewQGraphicsSceneMouseEventFromPointer
        constructorTable["widgets.QGraphicsSceneMoveEvent"] = NewQGraphicsSceneMoveEventFromPointer
        constructorTable["widgets.QGraphicsSceneResizeEvent"] = NewQGraphicsSceneResizeEventFromPointer
        constructorTable["widgets.QGraphicsSceneWheelEvent"] = NewQGraphicsSceneWheelEventFromPointer
        constructorTable["widgets.QGraphicsSimpleTextItem"] = NewQGraphicsSimpleTextItemFromPointer
        constructorTable["widgets.QGraphicsTextItem"] = NewQGraphicsTextItemFromPointer
        constructorTable["widgets.QGraphicsTransform"] = NewQGraphicsTransformFromPointer
        constructorTable["widgets.QGraphicsView"] = NewQGraphicsViewFromPointer
        constructorTable["widgets.QGraphicsWidget"] = NewQGraphicsWidgetFromPointer
        constructorTable["widgets.QGridLayout"] = NewQGridLayoutFromPointer
        constructorTable["widgets.QGroupBox"] = NewQGroupBoxFromPointer
        constructorTable["widgets.QHBoxLayout"] = NewQHBoxLayoutFromPointer
        constructorTable["widgets.QHeaderView"] = NewQHeaderViewFromPointer
        constructorTable["widgets.QInputDialog"] = NewQInputDialogFromPointer
        constructorTable["widgets.QItemDelegate"] = NewQItemDelegateFromPointer
        constructorTable["widgets.QItemEditorCreatorBase"] = NewQItemEditorCreatorBaseFromPointer
        constructorTable["widgets.QItemEditorFactory"] = NewQItemEditorFactoryFromPointer
        constructorTable["widgets.QKeyEventTransition"] = NewQKeyEventTransitionFromPointer
        constructorTable["widgets.QKeySequenceEdit"] = NewQKeySequenceEditFromPointer
        constructorTable["widgets.QLCDNumber"] = NewQLCDNumberFromPointer
        constructorTable["widgets.QLabel"] = NewQLabelFromPointer
        constructorTable["widgets.QLayout"] = NewQLayoutFromPointer
        constructorTable["widgets.QLayoutItem"] = NewQLayoutItemFromPointer
        constructorTable["widgets.QLineEdit"] = NewQLineEditFromPointer
        constructorTable["widgets.QListView"] = NewQListViewFromPointer
        constructorTable["widgets.QListWidget"] = NewQListWidgetFromPointer
        constructorTable["widgets.QListWidgetItem"] = NewQListWidgetItemFromPointer
        constructorTable["widgets.QMainWindow"] = NewQMainWindowFromPointer
        constructorTable["widgets.QMdiArea"] = NewQMdiAreaFromPointer
        constructorTable["widgets.QMdiSubWindow"] = NewQMdiSubWindowFromPointer
        constructorTable["widgets.QMenu"] = NewQMenuFromPointer
        constructorTable["widgets.QMenuBar"] = NewQMenuBarFromPointer
        constructorTable["widgets.QMessageBox"] = NewQMessageBoxFromPointer
        constructorTable["widgets.QMouseEventTransition"] = NewQMouseEventTransitionFromPointer
        constructorTable["widgets.QOpenGLWidget"] = NewQOpenGLWidgetFromPointer
        constructorTable["widgets.QPanGesture"] = NewQPanGestureFromPointer
        constructorTable["widgets.QPinchGesture"] = NewQPinchGestureFromPointer
        constructorTable["widgets.QPlainTextDocumentLayout"] = NewQPlainTextDocumentLayoutFromPointer
        constructorTable["widgets.QPlainTextEdit"] = NewQPlainTextEditFromPointer
        constructorTable["widgets.QProgressBar"] = NewQProgressBarFromPointer
        constructorTable["widgets.QProgressDialog"] = NewQProgressDialogFromPointer
        constructorTable["widgets.QProxyStyle"] = NewQProxyStyleFromPointer
        constructorTable["widgets.QPushButton"] = NewQPushButtonFromPointer
        constructorTable["widgets.QRadioButton"] = NewQRadioButtonFromPointer
        constructorTable["widgets.QRubberBand"] = NewQRubberBandFromPointer
        constructorTable["widgets.QScrollArea"] = NewQScrollAreaFromPointer
        constructorTable["widgets.QScrollBar"] = NewQScrollBarFromPointer
        constructorTable["widgets.QScroller"] = NewQScrollerFromPointer
        constructorTable["widgets.QScrollerProperties"] = NewQScrollerPropertiesFromPointer
        constructorTable["widgets.QShortcut"] = NewQShortcutFromPointer
        constructorTable["widgets.QSizeGrip"] = NewQSizeGripFromPointer
        constructorTable["widgets.QSizePolicy"] = NewQSizePolicyFromPointer
        constructorTable["widgets.QSlider"] = NewQSliderFromPointer
        constructorTable["widgets.QSpacerItem"] = NewQSpacerItemFromPointer
        constructorTable["widgets.QSpinBox"] = NewQSpinBoxFromPointer
        constructorTable["widgets.QSplashScreen"] = NewQSplashScreenFromPointer
        constructorTable["widgets.QSplitter"] = NewQSplitterFromPointer
        constructorTable["widgets.QSplitterHandle"] = NewQSplitterHandleFromPointer
        constructorTable["widgets.QStackedLayout"] = NewQStackedLayoutFromPointer
        constructorTable["widgets.QStackedWidget"] = NewQStackedWidgetFromPointer
        constructorTable["widgets.QStatusBar"] = NewQStatusBarFromPointer
        constructorTable["widgets.QStyle"] = NewQStyleFromPointer
        constructorTable["widgets.QStyleFactory"] = NewQStyleFactoryFromPointer
        constructorTable["widgets.QStyleHintReturn"] = NewQStyleHintReturnFromPointer
        constructorTable["widgets.QStyleHintReturnMask"] = NewQStyleHintReturnMaskFromPointer
        constructorTable["widgets.QStyleHintReturnVariant"] = NewQStyleHintReturnVariantFromPointer
        constructorTable["widgets.QStyleOption"] = NewQStyleOptionFromPointer
        constructorTable["widgets.QStyleOptionButton"] = NewQStyleOptionButtonFromPointer
        constructorTable["widgets.QStyleOptionComboBox"] = NewQStyleOptionComboBoxFromPointer
        constructorTable["widgets.QStyleOptionComplex"] = NewQStyleOptionComplexFromPointer
        constructorTable["widgets.QStyleOptionDockWidget"] = NewQStyleOptionDockWidgetFromPointer
        constructorTable["widgets.QStyleOptionFocusRect"] = NewQStyleOptionFocusRectFromPointer
        constructorTable["widgets.QStyleOptionFrame"] = NewQStyleOptionFrameFromPointer
        constructorTable["widgets.QStyleOptionGraphicsItem"] = NewQStyleOptionGraphicsItemFromPointer
        constructorTable["widgets.QStyleOptionGroupBox"] = NewQStyleOptionGroupBoxFromPointer
        constructorTable["widgets.QStyleOptionHeader"] = NewQStyleOptionHeaderFromPointer
        constructorTable["widgets.QStyleOptionMenuItem"] = NewQStyleOptionMenuItemFromPointer
        constructorTable["widgets.QStyleOptionProgressBar"] = NewQStyleOptionProgressBarFromPointer
        constructorTable["widgets.QStyleOptionRubberBand"] = NewQStyleOptionRubberBandFromPointer
        constructorTable["widgets.QStyleOptionSizeGrip"] = NewQStyleOptionSizeGripFromPointer
        constructorTable["widgets.QStyleOptionSlider"] = NewQStyleOptionSliderFromPointer
        constructorTable["widgets.QStyleOptionSpinBox"] = NewQStyleOptionSpinBoxFromPointer
        constructorTable["widgets.QStyleOptionTab"] = NewQStyleOptionTabFromPointer
        constructorTable["widgets.QStyleOptionTabBarBase"] = NewQStyleOptionTabBarBaseFromPointer
        constructorTable["widgets.QStyleOptionTabWidgetFrame"] = NewQStyleOptionTabWidgetFrameFromPointer
        constructorTable["widgets.QStyleOptionTitleBar"] = NewQStyleOptionTitleBarFromPointer
        constructorTable["widgets.QStyleOptionToolBar"] = NewQStyleOptionToolBarFromPointer
        constructorTable["widgets.QStyleOptionToolBox"] = NewQStyleOptionToolBoxFromPointer
        constructorTable["widgets.QStyleOptionToolButton"] = NewQStyleOptionToolButtonFromPointer
        constructorTable["widgets.QStyleOptionViewItem"] = NewQStyleOptionViewItemFromPointer
        constructorTable["widgets.QStylePainter"] = NewQStylePainterFromPointer
        constructorTable["widgets.QStylePlugin"] = NewQStylePluginFromPointer
        constructorTable["widgets.QStyledItemDelegate"] = NewQStyledItemDelegateFromPointer
        constructorTable["widgets.QSwipeGesture"] = NewQSwipeGestureFromPointer
        constructorTable["widgets.QSystemTrayIcon"] = NewQSystemTrayIconFromPointer
        constructorTable["widgets.QTabBar"] = NewQTabBarFromPointer
        constructorTable["widgets.QTabWidget"] = NewQTabWidgetFromPointer
        constructorTable["widgets.QTableView"] = NewQTableViewFromPointer
        constructorTable["widgets.QTableWidget"] = NewQTableWidgetFromPointer
        constructorTable["widgets.QTableWidgetItem"] = NewQTableWidgetItemFromPointer
        constructorTable["widgets.QTableWidgetSelectionRange"] = NewQTableWidgetSelectionRangeFromPointer
        constructorTable["widgets.QTapAndHoldGesture"] = NewQTapAndHoldGestureFromPointer
        constructorTable["widgets.QTapGesture"] = NewQTapGestureFromPointer
        constructorTable["widgets.QTextBrowser"] = NewQTextBrowserFromPointer
        constructorTable["widgets.QTextEdit"] = NewQTextEditFromPointer
        constructorTable["widgets.QTileRules"] = NewQTileRulesFromPointer
        constructorTable["widgets.QTimeEdit"] = NewQTimeEditFromPointer
        constructorTable["widgets.QToolBar"] = NewQToolBarFromPointer
        constructorTable["widgets.QToolBox"] = NewQToolBoxFromPointer
        constructorTable["widgets.QToolButton"] = NewQToolButtonFromPointer
        constructorTable["widgets.QToolTip"] = NewQToolTipFromPointer
        constructorTable["widgets.QTreeView"] = NewQTreeViewFromPointer
        constructorTable["widgets.QTreeWidget"] = NewQTreeWidgetFromPointer
        constructorTable["widgets.QTreeWidgetItem"] = NewQTreeWidgetItemFromPointer
        constructorTable["widgets.QUndoCommand"] = NewQUndoCommandFromPointer
        constructorTable["widgets.QUndoGroup"] = NewQUndoGroupFromPointer
        constructorTable["widgets.QUndoStack"] = NewQUndoStackFromPointer
        constructorTable["widgets.QUndoView"] = NewQUndoViewFromPointer
        constructorTable["widgets.QVBoxLayout"] = NewQVBoxLayoutFromPointer
        constructorTable["widgets.QWhatsThis"] = NewQWhatsThisFromPointer
        constructorTable["widgets.QWidget"] = NewQWidgetFromPointer
        constructorTable["widgets.QWidgetAction"] = NewQWidgetActionFromPointer
        constructorTable["widgets.QWidgetItem"] = NewQWidgetItemFromPointer
        constructorTable["widgets.QWizard"] = NewQWizardFromPointer
        constructorTable["widgets.QWizardPage"] = NewQWizardPageFromPointer

        Init()
        Core.initModule()
        Gui.initModule()
    }
}

public protocol QAbstractButton_ITF: QWidget_ITF {
    func QAbstractButton_PTR() -> QAbstractButton
}

public class QAbstractButton: QWidget, QAbstractButton_ITF {
    public func QAbstractButton_PTR() -> QAbstractButton { callLocalFunction(l: ["", Pointer(), ___className, "QAbstractButton_PTR"]) as! QAbstractButton }
    public func ConnectAnimateClick(f: @escaping (_ msec: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectAnimateClick", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectAnimateClick() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectAnimateClick"]) }
    public func AnimateClick(msec: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AnimateClick", msec as Any]) }
    public func AnimateClickDefault(msec: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AnimateClickDefault", msec as Any]) }
    public func AutoExclusive() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "AutoExclusive"]) as! Bool }
    public func AutoRepeat() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "AutoRepeat"]) as! Bool }
    public func AutoRepeatDelay() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "AutoRepeatDelay"]) as! Float) }
    public func AutoRepeatInterval() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "AutoRepeatInterval"]) as! Float) }
    public func ConnectCheckStateSet(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCheckStateSet", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectCheckStateSet() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCheckStateSet"]) }
    public func CheckStateSet() { _ = callLocalFunction(l: ["", Pointer(), ___className, "CheckStateSet"]) }
    public func CheckStateSetDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "CheckStateSetDefault"]) }
    public func ConnectClick(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectClick", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectClick() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectClick"]) }
    public func Click() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Click"]) }
    public func ClickDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClickDefault"]) }
    public func ConnectClicked(f: @escaping (_ checked: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectClicked", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectClicked() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectClicked"]) }
    public func Clicked(checked: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Clicked", checked as Any]) }
    public func Group() -> QButtonGroup { callLocalFunction(l: ["", Pointer(), ___className, "Group"]) as! QButtonGroup }
    public func ConnectHitButton(f: @escaping (_ pos: QPoint) -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHitButton", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPoint) } as Any) }
    public func DisconnectHitButton() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHitButton"]) }
    public func HitButton(pos: QPoint_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "HitButton", pos as Any]) as! Bool }
    public func HitButtonDefault(pos: QPoint_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "HitButtonDefault", pos as Any]) as! Bool }
    public func Icon() -> QIcon { callLocalFunction(l: ["", Pointer(), ___className, "Icon"]) as! QIcon }
    public func IconSize() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "IconSize"]) as! QSize }
    public func IsCheckable() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsCheckable"]) as! Bool }
    public func IsChecked() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsChecked"]) as! Bool }
    public func IsDown() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsDown"]) as! Bool }
    public func ConnectNextCheckState(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectNextCheckState", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectNextCheckState() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectNextCheckState"]) }
    public func NextCheckState() { _ = callLocalFunction(l: ["", Pointer(), ___className, "NextCheckState"]) }
    public func NextCheckStateDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "NextCheckStateDefault"]) }
    override public func ConnectPaintEvent(f: @escaping (_ e: QPaintEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPaintEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPaintEvent) } as Any) }
    override public func DisconnectPaintEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPaintEvent"]) }
    override public func PaintEvent(event: QPaintEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "PaintEvent", event as Any]) }
    public func ConnectPressed(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPressed", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectPressed() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPressed"]) }
    public func Pressed() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Pressed"]) }
    public func ConnectReleased(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectReleased", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectReleased() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectReleased"]) }
    public func Released() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Released"]) }
    public func SetAutoExclusive(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAutoExclusive", vbo as Any]) }
    public func SetAutoRepeat(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAutoRepeat", vbo as Any]) }
    public func SetAutoRepeatDelay(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAutoRepeatDelay", vi as Any]) }
    public func SetAutoRepeatInterval(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAutoRepeatInterval", vi as Any]) }
    public func SetCheckable(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCheckable", vbo as Any]) }
    public func ConnectSetChecked(f: @escaping (_ vbo: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetChecked", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectSetChecked() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetChecked"]) }
    public func SetChecked(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetChecked", vbo as Any]) }
    public func SetCheckedDefault(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCheckedDefault", vbo as Any]) }
    public func SetDown(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDown", vbo as Any]) }
    public func SetIcon(icon: QIcon_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIcon", icon as Any]) }
    public func ConnectSetIconSize(f: @escaping (_ size: QSize) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetIconSize", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QSize) } as Any) }
    public func DisconnectSetIconSize() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetIconSize"]) }
    public func SetIconSize(size: QSize_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIconSize", size as Any]) }
    public func SetIconSizeDefault(size: QSize_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIconSizeDefault", size as Any]) }
    public func SetShortcut(key: QKeySequence_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetShortcut", key as Any]) }
    public func SetText(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetText", text as Any]) }
    public func Shortcut() -> QKeySequence { callLocalFunction(l: ["", Pointer(), ___className, "Shortcut"]) as! QKeySequence }
    public func Text() -> String { callLocalFunction(l: ["", Pointer(), ___className, "Text"]) as! String }
    public func ConnectToggle(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectToggle", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectToggle() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectToggle"]) }
    public func Toggle() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Toggle"]) }
    public func ToggleDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ToggleDefault"]) }
    public func ConnectToggled(f: @escaping (_ checked: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectToggled", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectToggled() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectToggled"]) }
    public func Toggled(checked: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Toggled", checked as Any]) }
    public func ConnectDestroyQAbstractButton(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQAbstractButton", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQAbstractButton() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQAbstractButton"]) }
    public func DestroyQAbstractButton() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQAbstractButton"]) }
    public func DestroyQAbstractButtonDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQAbstractButtonDefault"]) }
}

public func NewQAbstractButtonFromPointer(ptr: String) -> QAbstractButton { let r = QAbstractButton(); r.initFrom(p: ptr, n: "widgets.QAbstractButton"); return r }
public func NewQAbstractButton(parent: QWidget_ITF? = nil) -> QAbstractButton { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQAbstractButton", "", parent as Any]) as! QAbstractButton }
public protocol QAbstractGraphicsShapeItem_ITF: QGraphicsItem_ITF {
    func QAbstractGraphicsShapeItem_PTR() -> QAbstractGraphicsShapeItem
}

public class QAbstractGraphicsShapeItem: QGraphicsItem, QAbstractGraphicsShapeItem_ITF {
    public func QAbstractGraphicsShapeItem_PTR() -> QAbstractGraphicsShapeItem { callLocalFunction(l: ["", Pointer(), ___className, "QAbstractGraphicsShapeItem_PTR"]) as! QAbstractGraphicsShapeItem }
    public func Brush() -> QBrush { callLocalFunction(l: ["", Pointer(), ___className, "Brush"]) as! QBrush }
    public func Pen() -> QPen { callLocalFunction(l: ["", Pointer(), ___className, "Pen"]) as! QPen }
    public func SetBrush(brush: QBrush_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetBrush", brush as Any]) }
    public func SetPen(pen: QPen_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPen", pen as Any]) }
    public func ConnectDestroyQAbstractGraphicsShapeItem(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQAbstractGraphicsShapeItem", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQAbstractGraphicsShapeItem() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQAbstractGraphicsShapeItem"]) }
    public func DestroyQAbstractGraphicsShapeItem() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQAbstractGraphicsShapeItem"]) }
    public func DestroyQAbstractGraphicsShapeItemDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQAbstractGraphicsShapeItemDefault"]) }
    override public func BoundingRect() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "BoundingRect"]) as! QRectF }
    public func BoundingRectDefault() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "BoundingRectDefault"]) as! QRectF }
    override public func Paint(painter: QPainter_ITF? = nil, option: QStyleOptionGraphicsItem_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Paint", painter as Any, option as Any, widget as Any]) }
    public func PaintDefault(painter: QPainter_ITF? = nil, option: QStyleOptionGraphicsItem_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "PaintDefault", painter as Any, option as Any, widget as Any]) }
}

public func NewQAbstractGraphicsShapeItemFromPointer(ptr: String) -> QAbstractGraphicsShapeItem { let r = QAbstractGraphicsShapeItem(); r.initFrom(p: ptr, n: "widgets.QAbstractGraphicsShapeItem"); return r }
public func NewQAbstractGraphicsShapeItem(parent: QGraphicsItem_ITF? = nil) -> QAbstractGraphicsShapeItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQAbstractGraphicsShapeItem", "", parent as Any]) as! QAbstractGraphicsShapeItem }
public protocol QAbstractItemDelegate_ITF: QObject_ITF {
    func QAbstractItemDelegate_PTR() -> QAbstractItemDelegate
}

public class QAbstractItemDelegate: QObject, QAbstractItemDelegate_ITF {
    public func QAbstractItemDelegate_PTR() -> QAbstractItemDelegate { callLocalFunction(l: ["", Pointer(), ___className, "QAbstractItemDelegate_PTR"]) as! QAbstractItemDelegate }
    public func ConnectCloseEditor(f: @escaping (_ editor: QWidget, _ hint: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCloseEditor", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QWidget, Int(inp[1] as! Float)) } as Any) }
    public func DisconnectCloseEditor() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCloseEditor"]) }
    public func CloseEditor(editor: QWidget_ITF? = nil, hint: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CloseEditor", editor as Any, hint as Any]) }
    public func ConnectCommitData(f: @escaping (_ editor: QWidget) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCommitData", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QWidget) } as Any) }
    public func DisconnectCommitData() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCommitData"]) }
    public func CommitData(editor: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CommitData", editor as Any]) }
    public func ConnectCreateEditor(f: @escaping (_ parent: QWidget, _ option: QStyleOptionViewItem, _ index: QModelIndex) -> QWidget) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCreateEditor", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QWidget, inp[1] as! QStyleOptionViewItem, inp[2] as! QModelIndex) } as Any) }
    public func DisconnectCreateEditor() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCreateEditor"]) }
    public func CreateEditor(parent: QWidget_ITF? = nil, option: QStyleOptionViewItem_ITF? = nil, index: QModelIndex_ITF? = nil) -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "CreateEditor", parent as Any, option as Any, index as Any]) as! QWidget }
    public func CreateEditorDefault(parent: QWidget_ITF? = nil, option: QStyleOptionViewItem_ITF? = nil, index: QModelIndex_ITF? = nil) -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "CreateEditorDefault", parent as Any, option as Any, index as Any]) as! QWidget }
    public func ConnectDestroyEditor(f: @escaping (_ editor: QWidget, _ index: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyEditor", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QWidget, inp[1] as! QModelIndex) } as Any) }
    public func DisconnectDestroyEditor() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyEditor"]) }
    public func DestroyEditor(editor: QWidget_ITF? = nil, index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyEditor", editor as Any, index as Any]) }
    public func DestroyEditorDefault(editor: QWidget_ITF? = nil, index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyEditorDefault", editor as Any, index as Any]) }
    public func ConnectEditorEvent(f: @escaping (_ event: QEvent, _ model: QAbstractItemModel, _ option: QStyleOptionViewItem, _ index: QModelIndex) -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectEditorEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QEvent, inp[1] as! QAbstractItemModel, inp[2] as! QStyleOptionViewItem, inp[3] as! QModelIndex) } as Any) }
    public func DisconnectEditorEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectEditorEvent"]) }
    public func EditorEvent(event: QEvent_ITF? = nil, model: QAbstractItemModel_ITF? = nil, option: QStyleOptionViewItem_ITF? = nil, index: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EditorEvent", event as Any, model as Any, option as Any, index as Any]) as! Bool }
    public func EditorEventDefault(event: QEvent_ITF? = nil, model: QAbstractItemModel_ITF? = nil, option: QStyleOptionViewItem_ITF? = nil, index: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EditorEventDefault", event as Any, model as Any, option as Any, index as Any]) as! Bool }
    public func ConnectHelpEvent(f: @escaping (_ event: QHelpEvent, _ view: QAbstractItemView, _ option: QStyleOptionViewItem, _ index: QModelIndex) -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHelpEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QHelpEvent, inp[1] as! QAbstractItemView, inp[2] as! QStyleOptionViewItem, inp[3] as! QModelIndex) } as Any) }
    public func DisconnectHelpEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHelpEvent"]) }
    public func HelpEvent(event: QHelpEvent_ITF? = nil, view: QAbstractItemView_ITF? = nil, option: QStyleOptionViewItem_ITF? = nil, index: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "HelpEvent", event as Any, view as Any, option as Any, index as Any]) as! Bool }
    public func HelpEventDefault(event: QHelpEvent_ITF? = nil, view: QAbstractItemView_ITF? = nil, option: QStyleOptionViewItem_ITF? = nil, index: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "HelpEventDefault", event as Any, view as Any, option as Any, index as Any]) as! Bool }
    public func ConnectPaint(f: @escaping (_ painter: QPainter, _ option: QStyleOptionViewItem, _ index: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPaint", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainter, inp[1] as! QStyleOptionViewItem, inp[2] as! QModelIndex) } as Any) }
    public func DisconnectPaint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPaint"]) }
    public func Paint(painter: QPainter_ITF? = nil, option: QStyleOptionViewItem_ITF? = nil, index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Paint", painter as Any, option as Any, index as Any]) }
    public func ConnectSetEditorData(f: @escaping (_ editor: QWidget, _ index: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetEditorData", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QWidget, inp[1] as! QModelIndex) } as Any) }
    public func DisconnectSetEditorData() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetEditorData"]) }
    public func SetEditorData(editor: QWidget_ITF? = nil, index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetEditorData", editor as Any, index as Any]) }
    public func SetEditorDataDefault(editor: QWidget_ITF? = nil, index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetEditorDataDefault", editor as Any, index as Any]) }
    public func ConnectSetModelData(f: @escaping (_ editor: QWidget, _ model: QAbstractItemModel, _ index: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetModelData", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QWidget, inp[1] as! QAbstractItemModel, inp[2] as! QModelIndex) } as Any) }
    public func DisconnectSetModelData() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetModelData"]) }
    public func SetModelData(editor: QWidget_ITF? = nil, model: QAbstractItemModel_ITF? = nil, index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetModelData", editor as Any, model as Any, index as Any]) }
    public func SetModelDataDefault(editor: QWidget_ITF? = nil, model: QAbstractItemModel_ITF? = nil, index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetModelDataDefault", editor as Any, model as Any, index as Any]) }
    public func ConnectSizeHint(f: @escaping (_ option: QStyleOptionViewItem, _ index: QModelIndex) -> QSize) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSizeHint", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QStyleOptionViewItem, inp[1] as! QModelIndex) } as Any) }
    public func DisconnectSizeHint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSizeHint"]) }
    public func SizeHint(option: QStyleOptionViewItem_ITF? = nil, index: QModelIndex_ITF? = nil) -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "SizeHint", option as Any, index as Any]) as! QSize }
    public func ConnectSizeHintChanged(f: @escaping (_ index: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSizeHintChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    public func DisconnectSizeHintChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSizeHintChanged"]) }
    public func SizeHintChanged(index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SizeHintChanged", index as Any]) }
    public func ConnectUpdateEditorGeometry(f: @escaping (_ editor: QWidget, _ option: QStyleOptionViewItem, _ index: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectUpdateEditorGeometry", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QWidget, inp[1] as! QStyleOptionViewItem, inp[2] as! QModelIndex) } as Any) }
    public func DisconnectUpdateEditorGeometry() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectUpdateEditorGeometry"]) }
    public func UpdateEditorGeometry(editor: QWidget_ITF? = nil, option: QStyleOptionViewItem_ITF? = nil, index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "UpdateEditorGeometry", editor as Any, option as Any, index as Any]) }
    public func UpdateEditorGeometryDefault(editor: QWidget_ITF? = nil, option: QStyleOptionViewItem_ITF? = nil, index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "UpdateEditorGeometryDefault", editor as Any, option as Any, index as Any]) }
    public func ConnectDestroyQAbstractItemDelegate(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQAbstractItemDelegate", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQAbstractItemDelegate() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQAbstractItemDelegate"]) }
    public func DestroyQAbstractItemDelegate() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQAbstractItemDelegate"]) }
    public func DestroyQAbstractItemDelegateDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQAbstractItemDelegateDefault"]) }
    override public func ChildEventDefault(event: QChildEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ChildEventDefault", event as Any]) }
    override public func ConnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ConnectNotifyDefault", sign as Any]) }
    override public func CustomEventDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CustomEventDefault", event as Any]) }
    override public func DeleteLaterDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DeleteLaterDefault"]) }
    override public func DisconnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DisconnectNotifyDefault", sign as Any]) }
    override public func EventDefault(e: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventDefault", e as Any]) as! Bool }
    override public func EventFilterDefault(watched: QObject_ITF? = nil, event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventFilterDefault", watched as Any, event as Any]) as! Bool }
    override public func MetaObjectDefault() -> QMetaObject { callLocalFunction(l: ["", Pointer(), ___className, "MetaObjectDefault"]) as! QMetaObject }
    override public func TimerEventDefault(event: QTimerEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TimerEventDefault", event as Any]) }
}

public func NewQAbstractItemDelegateFromPointer(ptr: String) -> QAbstractItemDelegate { let r = QAbstractItemDelegate(); r.initFrom(p: ptr, n: "widgets.QAbstractItemDelegate"); return r }
public func NewQAbstractItemDelegate(parent: QObject_ITF? = nil) -> QAbstractItemDelegate { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQAbstractItemDelegate", "", parent as Any]) as! QAbstractItemDelegate }
public protocol QAbstractItemView_ITF: QAbstractScrollArea_ITF {
    func QAbstractItemView_PTR() -> QAbstractItemView
}

public class QAbstractItemView: QAbstractScrollArea, QAbstractItemView_ITF {
    public func QAbstractItemView_PTR() -> QAbstractItemView { callLocalFunction(l: ["", Pointer(), ___className, "QAbstractItemView_PTR"]) as! QAbstractItemView }
    public func ConnectActivated(f: @escaping (_ index: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectActivated", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    public func DisconnectActivated() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectActivated"]) }
    public func Activated(index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Activated", index as Any]) }
    public func AlternatingRowColors() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "AlternatingRowColors"]) as! Bool }
    public func AutoScrollMargin() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "AutoScrollMargin"]) as! Float) }
    public func ConnectClearSelection(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectClearSelection", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectClearSelection() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectClearSelection"]) }
    public func ClearSelection() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearSelection"]) }
    public func ClearSelectionDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearSelectionDefault"]) }
    public func ConnectClicked(f: @escaping (_ index: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectClicked", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    public func DisconnectClicked() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectClicked"]) }
    public func Clicked(index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Clicked", index as Any]) }
    public func ConnectCloseEditor(f: @escaping (_ editor: QWidget, _ hint: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCloseEditor", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QWidget, Int(inp[1] as! Float)) } as Any) }
    public func DisconnectCloseEditor() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCloseEditor"]) }
    public func CloseEditor(editor: QWidget_ITF? = nil, hint: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CloseEditor", editor as Any, hint as Any]) }
    public func CloseEditorDefault(editor: QWidget_ITF? = nil, hint: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CloseEditorDefault", editor as Any, hint as Any]) }
    public func ClosePersistentEditor(index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClosePersistentEditor", index as Any]) }
    public func ConnectCommitData(f: @escaping (_ editor: QWidget) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCommitData", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QWidget) } as Any) }
    public func DisconnectCommitData() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCommitData"]) }
    public func CommitData(editor: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CommitData", editor as Any]) }
    public func CommitDataDefault(editor: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CommitDataDefault", editor as Any]) }
    public func ConnectCurrentChanged(f: @escaping (_ current: QModelIndex, _ previous: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCurrentChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex, inp[1] as! QModelIndex) } as Any) }
    public func DisconnectCurrentChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCurrentChanged"]) }
    public func CurrentChanged(current: QModelIndex_ITF? = nil, previous: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CurrentChanged", current as Any, previous as Any]) }
    public func CurrentChangedDefault(current: QModelIndex_ITF? = nil, previous: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CurrentChangedDefault", current as Any, previous as Any]) }
    public func CurrentIndex() -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "CurrentIndex"]) as! QModelIndex }
    public func ConnectDataChanged(f: @escaping (_ topLeft: QModelIndex, _ bottomRight: QModelIndex, _ roles: [Int]) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDataChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex, inp[1] as! QModelIndex, inp[2] as! [Int]) } as Any) }
    public func DisconnectDataChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDataChanged"]) }
    public func DataChanged(topLeft: QModelIndex_ITF? = nil, bottomRight: QModelIndex_ITF? = nil, roles: [Int]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DataChanged", topLeft as Any, bottomRight as Any, roles as Any]) }
    public func DataChangedDefault(topLeft: QModelIndex_ITF? = nil, bottomRight: QModelIndex_ITF? = nil, roles: [Int]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DataChangedDefault", topLeft as Any, bottomRight as Any, roles as Any]) }
    public func DefaultDropAction() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "DefaultDropAction"]) as! Float) }
    public func DirtyRegionOffset() -> QPoint { callLocalFunction(l: ["", Pointer(), ___className, "DirtyRegionOffset"]) as! QPoint }
    public func ConnectDoubleClicked(f: @escaping (_ index: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDoubleClicked", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    public func DisconnectDoubleClicked() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDoubleClicked"]) }
    public func DoubleClicked(index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DoubleClicked", index as Any]) }
    public func DragDropMode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "DragDropMode"]) as! Float) }
    public func DragDropOverwriteMode() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "DragDropOverwriteMode"]) as! Bool }
    public func DragEnabled() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "DragEnabled"]) as! Bool }
    public func DropIndicatorPosition() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "DropIndicatorPosition"]) as! Float) }
    public func ConnectEdit(f: @escaping (_ index: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectEdit", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    public func DisconnectEdit() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectEdit"]) }
    public func Edit(index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Edit", index as Any]) }
    public func EditDefault(index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "EditDefault", index as Any]) }
    public func ConnectEdit2(f: @escaping (_ index: QModelIndex, _ trigger: Int, _ event: QEvent) -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectEdit2", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex, Int(inp[1] as! Float), inp[2] as! QEvent) } as Any) }
    public func DisconnectEdit2() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectEdit2"]) }
    public func Edit2(index: QModelIndex_ITF? = nil, trigger: Int, event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "Edit2", index as Any, trigger as Any, event as Any]) as! Bool }
    public func Edit2Default(index: QModelIndex_ITF? = nil, trigger: Int, event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "Edit2Default", index as Any, trigger as Any, event as Any]) as! Bool }
    public func EditTriggers() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "EditTriggers"]) as! Float) }
    public func ConnectEditorDestroyed(f: @escaping (_ editor: QObject) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectEditorDestroyed", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QObject) } as Any) }
    public func DisconnectEditorDestroyed() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectEditorDestroyed"]) }
    public func EditorDestroyed(editor: QObject_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "EditorDestroyed", editor as Any]) }
    public func EditorDestroyedDefault(editor: QObject_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "EditorDestroyedDefault", editor as Any]) }
    public func ConnectEntered(f: @escaping (_ index: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectEntered", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    public func DisconnectEntered() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectEntered"]) }
    public func Entered(index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Entered", index as Any]) }
    public func ExecuteDelayedItemsLayout() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ExecuteDelayedItemsLayout"]) }
    public func HasAutoScroll() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "HasAutoScroll"]) as! Bool }
    public func ConnectHorizontalOffset(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHorizontalOffset", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectHorizontalOffset() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHorizontalOffset"]) }
    public func HorizontalOffset() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "HorizontalOffset"]) as! Float) }
    public func HorizontalScrollMode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "HorizontalScrollMode"]) as! Float) }
    public func IconSize() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "IconSize"]) as! QSize }
    public func ConnectIconSizeChanged(f: @escaping (_ size: QSize) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectIconSizeChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QSize) } as Any) }
    public func DisconnectIconSizeChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectIconSizeChanged"]) }
    public func IconSizeChanged(size: QSize_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "IconSizeChanged", size as Any]) }
    public func ConnectIndexAt(f: @escaping (_ point: QPoint) -> QModelIndex) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectIndexAt", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPoint) } as Any) }
    public func DisconnectIndexAt() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectIndexAt"]) }
    public func IndexAt(point: QPoint_ITF? = nil) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "IndexAt", point as Any]) as! QModelIndex }
    public func IndexWidget(index: QModelIndex_ITF? = nil) -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "IndexWidget", index as Any]) as! QWidget }
    public func ConnectIsIndexHidden(f: @escaping (_ index: QModelIndex) -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectIsIndexHidden", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    public func DisconnectIsIndexHidden() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectIsIndexHidden"]) }
    public func IsIndexHidden(index: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsIndexHidden", index as Any]) as! Bool }
    public func IsPersistentEditorOpen(index: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsPersistentEditorOpen", index as Any]) as! Bool }
    public func ItemDelegate() -> QAbstractItemDelegate { callLocalFunction(l: ["", Pointer(), ___className, "ItemDelegate"]) as! QAbstractItemDelegate }
    public func ItemDelegate2(index: QModelIndex_ITF? = nil) -> QAbstractItemDelegate { callLocalFunction(l: ["", Pointer(), ___className, "ItemDelegate2", index as Any]) as! QAbstractItemDelegate }
    public func ItemDelegateForColumn(column: Int) -> QAbstractItemDelegate { callLocalFunction(l: ["", Pointer(), ___className, "ItemDelegateForColumn", column as Any]) as! QAbstractItemDelegate }
    public func ItemDelegateForRow(row: Int) -> QAbstractItemDelegate { callLocalFunction(l: ["", Pointer(), ___className, "ItemDelegateForRow", row as Any]) as! QAbstractItemDelegate }
    public func ConnectKeyboardSearch(f: @escaping (_ search: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectKeyboardSearch", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectKeyboardSearch() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectKeyboardSearch"]) }
    public func KeyboardSearch(search: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "KeyboardSearch", search as Any]) }
    public func KeyboardSearchDefault(search: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "KeyboardSearchDefault", search as Any]) }
    public func Model() -> QAbstractItemModel { callLocalFunction(l: ["", Pointer(), ___className, "Model"]) as! QAbstractItemModel }
    public func ConnectMoveCursor(f: @escaping (_ cursorAction: Int, _ modifiers: Int) -> QModelIndex) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMoveCursor", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float)) } as Any) }
    public func DisconnectMoveCursor() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMoveCursor"]) }
    public func MoveCursor(cursorAction: Int, modifiers: Int) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "MoveCursor", cursorAction as Any, modifiers as Any]) as! QModelIndex }
    public func OpenPersistentEditor(index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "OpenPersistentEditor", index as Any]) }
    public func ConnectPressed(f: @escaping (_ index: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPressed", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    public func DisconnectPressed() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPressed"]) }
    public func Pressed(index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Pressed", index as Any]) }
    public func ConnectReset(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectReset", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectReset() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectReset"]) }
    public func Reset() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Reset"]) }
    public func ResetDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResetDefault"]) }
    public func ResetHorizontalScrollMode() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResetHorizontalScrollMode"]) }
    public func ResetVerticalScrollMode() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResetVerticalScrollMode"]) }
    public func RootIndex() -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "RootIndex"]) as! QModelIndex }
    public func ConnectRowsAboutToBeRemoved(f: @escaping (_ parent: QModelIndex, _ start: Int, _ end: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRowsAboutToBeRemoved", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex, Int(inp[1] as! Float), Int(inp[2] as! Float)) } as Any) }
    public func DisconnectRowsAboutToBeRemoved() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRowsAboutToBeRemoved"]) }
    public func RowsAboutToBeRemoved(parent: QModelIndex_ITF? = nil, start: Int, end: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RowsAboutToBeRemoved", parent as Any, start as Any, end as Any]) }
    public func RowsAboutToBeRemovedDefault(parent: QModelIndex_ITF? = nil, start: Int, end: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RowsAboutToBeRemovedDefault", parent as Any, start as Any, end as Any]) }
    public func ConnectRowsInserted(f: @escaping (_ parent: QModelIndex, _ start: Int, _ end: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRowsInserted", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex, Int(inp[1] as! Float), Int(inp[2] as! Float)) } as Any) }
    public func DisconnectRowsInserted() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRowsInserted"]) }
    public func RowsInserted(parent: QModelIndex_ITF? = nil, start: Int, end: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RowsInserted", parent as Any, start as Any, end as Any]) }
    public func RowsInsertedDefault(parent: QModelIndex_ITF? = nil, start: Int, end: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RowsInsertedDefault", parent as Any, start as Any, end as Any]) }
    public func ScheduleDelayedItemsLayout() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ScheduleDelayedItemsLayout"]) }
    public func ScrollDirtyRegion(dx: Int, dy: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ScrollDirtyRegion", dx as Any, dy as Any]) }
    public func ConnectScrollTo(f: @escaping (_ index: QModelIndex, _ hint: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectScrollTo", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex, Int(inp[1] as! Float)) } as Any) }
    public func DisconnectScrollTo() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectScrollTo"]) }
    public func ScrollTo(index: QModelIndex_ITF? = nil, hint: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ScrollTo", index as Any, hint as Any]) }
    public func ConnectScrollToBottom(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectScrollToBottom", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectScrollToBottom() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectScrollToBottom"]) }
    public func ScrollToBottom() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ScrollToBottom"]) }
    public func ScrollToBottomDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ScrollToBottomDefault"]) }
    public func ConnectScrollToTop(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectScrollToTop", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectScrollToTop() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectScrollToTop"]) }
    public func ScrollToTop() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ScrollToTop"]) }
    public func ScrollToTopDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ScrollToTopDefault"]) }
    public func ConnectSelectAll(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSelectAll", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectSelectAll() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSelectAll"]) }
    public func SelectAll() { _ = callLocalFunction(l: ["", Pointer(), ___className, "SelectAll"]) }
    public func SelectAllDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "SelectAllDefault"]) }
    public func ConnectSelectedIndexes(f: @escaping () -> [QModelIndex]) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSelectedIndexes", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectSelectedIndexes() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSelectedIndexes"]) }
    public func SelectedIndexes() -> [QModelIndex] { callLocalFunction(l: ["", Pointer(), ___className, "SelectedIndexes"]) as! [QModelIndex] }
    public func SelectedIndexesDefault() -> [QModelIndex] { callLocalFunction(l: ["", Pointer(), ___className, "SelectedIndexesDefault"]) as! [QModelIndex] }
    public func SelectionBehavior() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SelectionBehavior"]) as! Float) }
    public func ConnectSelectionChanged(f: @escaping (_ selected: QItemSelection, _ deselected: QItemSelection) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSelectionChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QItemSelection, inp[1] as! QItemSelection) } as Any) }
    public func DisconnectSelectionChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSelectionChanged"]) }
    public func SelectionChanged(selected: QItemSelection_ITF? = nil, deselected: QItemSelection_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SelectionChanged", selected as Any, deselected as Any]) }
    public func SelectionChangedDefault(selected: QItemSelection_ITF? = nil, deselected: QItemSelection_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SelectionChangedDefault", selected as Any, deselected as Any]) }
    public func ConnectSelectionCommand(f: @escaping (_ index: QModelIndex, _ event: QEvent) -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSelectionCommand", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex, inp[1] as! QEvent) } as Any) }
    public func DisconnectSelectionCommand() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSelectionCommand"]) }
    public func SelectionCommand(index: QModelIndex_ITF? = nil, event: QEvent_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SelectionCommand", index as Any, event as Any]) as! Float) }
    public func SelectionCommandDefault(index: QModelIndex_ITF? = nil, event: QEvent_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SelectionCommandDefault", index as Any, event as Any]) as! Float) }
    public func SelectionMode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SelectionMode"]) as! Float) }
    public func SelectionModel() -> QItemSelectionModel { callLocalFunction(l: ["", Pointer(), ___className, "SelectionModel"]) as! QItemSelectionModel }
    public func SetAlternatingRowColors(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAlternatingRowColors", enable as Any]) }
    public func SetAutoScroll(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAutoScroll", enable as Any]) }
    public func SetAutoScrollMargin(margi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAutoScrollMargin", margi as Any]) }
    public func ConnectSetCurrentIndex(f: @escaping (_ index: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetCurrentIndex", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    public func DisconnectSetCurrentIndex() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetCurrentIndex"]) }
    public func SetCurrentIndex(index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentIndex", index as Any]) }
    public func SetCurrentIndexDefault(index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentIndexDefault", index as Any]) }
    public func SetDefaultDropAction(dropAction: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDefaultDropAction", dropAction as Any]) }
    public func SetDirtyRegion(region: QRegion_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDirtyRegion", region as Any]) }
    public func SetDragDropMode(behavior: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDragDropMode", behavior as Any]) }
    public func SetDragDropOverwriteMode(overwrite: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDragDropOverwriteMode", overwrite as Any]) }
    public func SetDragEnabled(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDragEnabled", enable as Any]) }
    public func SetDropIndicatorShown(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDropIndicatorShown", enable as Any]) }
    public func SetEditTriggers(triggers: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetEditTriggers", triggers as Any]) }
    public func SetHorizontalScrollMode(mode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetHorizontalScrollMode", mode as Any]) }
    public func SetIconSize(size: QSize_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIconSize", size as Any]) }
    public func SetIndexWidget(index: QModelIndex_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIndexWidget", index as Any, widget as Any]) }
    public func SetItemDelegate(delegate: QAbstractItemDelegate_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetItemDelegate", delegate as Any]) }
    public func SetItemDelegateForColumn(column: Int, delegate: QAbstractItemDelegate_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetItemDelegateForColumn", column as Any, delegate as Any]) }
    public func SetItemDelegateForRow(row: Int, delegate: QAbstractItemDelegate_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetItemDelegateForRow", row as Any, delegate as Any]) }
    public func ConnectSetModel(f: @escaping (_ model: QAbstractItemModel) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetModel", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QAbstractItemModel) } as Any) }
    public func DisconnectSetModel() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetModel"]) }
    public func SetModel(model: QAbstractItemModel_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetModel", model as Any]) }
    public func SetModelDefault(model: QAbstractItemModel_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetModelDefault", model as Any]) }
    public func ConnectSetRootIndex(f: @escaping (_ index: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetRootIndex", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    public func DisconnectSetRootIndex() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetRootIndex"]) }
    public func SetRootIndex(index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRootIndex", index as Any]) }
    public func SetRootIndexDefault(index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRootIndexDefault", index as Any]) }
    public func ConnectSetSelection(f: @escaping (_ rect: QRect, _ flags: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetSelection", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QRect, Int(inp[1] as! Float)) } as Any) }
    public func DisconnectSetSelection() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetSelection"]) }
    public func SetSelection(rect: QRect_ITF? = nil, flags: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSelection", rect as Any, flags as Any]) }
    public func SetSelectionBehavior(behavior: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSelectionBehavior", behavior as Any]) }
    public func SetSelectionMode(mode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSelectionMode", mode as Any]) }
    public func ConnectSetSelectionModel(f: @escaping (_ selectionModel: QItemSelectionModel) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetSelectionModel", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QItemSelectionModel) } as Any) }
    public func DisconnectSetSelectionModel() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetSelectionModel"]) }
    public func SetSelectionModel(selectionModel: QItemSelectionModel_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSelectionModel", selectionModel as Any]) }
    public func SetSelectionModelDefault(selectionModel: QItemSelectionModel_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSelectionModelDefault", selectionModel as Any]) }
    public func SetState(state: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetState", state as Any]) }
    public func SetTabKeyNavigation(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabKeyNavigation", enable as Any]) }
    public func SetTextElideMode(mode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTextElideMode", mode as Any]) }
    public func SetVerticalScrollMode(mode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetVerticalScrollMode", mode as Any]) }
    public func ShowDropIndicator() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "ShowDropIndicator"]) as! Bool }
    public func ConnectSizeHintForColumn(f: @escaping (_ column: Int) -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSizeHintForColumn", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSizeHintForColumn() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSizeHintForColumn"]) }
    public func SizeHintForColumn(column: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SizeHintForColumn", column as Any]) as! Float) }
    public func SizeHintForColumnDefault(column: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SizeHintForColumnDefault", column as Any]) as! Float) }
    public func SizeHintForIndex(index: QModelIndex_ITF? = nil) -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "SizeHintForIndex", index as Any]) as! QSize }
    public func ConnectSizeHintForRow(f: @escaping (_ row: Int) -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSizeHintForRow", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSizeHintForRow() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSizeHintForRow"]) }
    public func SizeHintForRow(row: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SizeHintForRow", row as Any]) as! Float) }
    public func SizeHintForRowDefault(row: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SizeHintForRowDefault", row as Any]) as! Float) }
    public func ConnectStartDrag(f: @escaping (_ supportedActions: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectStartDrag", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectStartDrag() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectStartDrag"]) }
    public func StartDrag(supportedActions: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "StartDrag", supportedActions as Any]) }
    public func StartDragDefault(supportedActions: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "StartDragDefault", supportedActions as Any]) }
    public func State() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "State"]) as! Float) }
    public func TabKeyNavigation() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "TabKeyNavigation"]) as! Bool }
    public func TextElideMode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TextElideMode"]) as! Float) }
    public func ConnectUpdate_QFrame(f: @escaping (_ index: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectUpdate", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    public func DisconnectUpdate_QFrame() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectUpdate"]) }
    public func Update_QFrame(index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Update", index as Any]) }
    public func UpdateDefault_QFrame(index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "UpdateDefault", index as Any]) }
    public func ConnectUpdateGeometries(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectUpdateGeometries", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectUpdateGeometries() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectUpdateGeometries"]) }
    public func UpdateGeometries() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UpdateGeometries"]) }
    public func UpdateGeometriesDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UpdateGeometriesDefault"]) }
    public func ConnectVerticalOffset(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectVerticalOffset", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectVerticalOffset() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectVerticalOffset"]) }
    public func VerticalOffset() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "VerticalOffset"]) as! Float) }
    public func VerticalScrollMode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "VerticalScrollMode"]) as! Float) }
    public func ConnectViewOptions(f: @escaping () -> QStyleOptionViewItem) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectViewOptions", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectViewOptions() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectViewOptions"]) }
    public func ViewOptions() -> QStyleOptionViewItem { callLocalFunction(l: ["", Pointer(), ___className, "ViewOptions"]) as! QStyleOptionViewItem }
    public func ViewOptionsDefault() -> QStyleOptionViewItem { callLocalFunction(l: ["", Pointer(), ___className, "ViewOptionsDefault"]) as! QStyleOptionViewItem }
    public func ConnectViewportEntered(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectViewportEntered", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectViewportEntered() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectViewportEntered"]) }
    public func ViewportEntered() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ViewportEntered"]) }
    public func ConnectVisualRect(f: @escaping (_ index: QModelIndex) -> QRect) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectVisualRect", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    public func DisconnectVisualRect() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectVisualRect"]) }
    public func VisualRect(index: QModelIndex_ITF? = nil) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "VisualRect", index as Any]) as! QRect }
    public func ConnectVisualRegionForSelection(f: @escaping (_ selection: QItemSelection) -> QRegion) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectVisualRegionForSelection", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QItemSelection) } as Any) }
    public func DisconnectVisualRegionForSelection() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectVisualRegionForSelection"]) }
    public func VisualRegionForSelection(selection: QItemSelection_ITF? = nil) -> QRegion { callLocalFunction(l: ["", Pointer(), ___className, "VisualRegionForSelection", selection as Any]) as! QRegion }
    public func ConnectDestroyQAbstractItemView(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQAbstractItemView", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQAbstractItemView() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQAbstractItemView"]) }
    public func DestroyQAbstractItemView() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQAbstractItemView"]) }
    public func DestroyQAbstractItemViewDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQAbstractItemViewDefault"]) }
}

public func NewQAbstractItemViewFromPointer(ptr: String) -> QAbstractItemView { let r = QAbstractItemView(); r.initFrom(p: ptr, n: "widgets.QAbstractItemView"); return r }
public func NewQAbstractItemView(parent: QWidget_ITF? = nil) -> QAbstractItemView { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQAbstractItemView", "", parent as Any]) as! QAbstractItemView }
public protocol QAbstractScrollArea_ITF: QFrame_ITF {
    func QAbstractScrollArea_PTR() -> QAbstractScrollArea
}

public class QAbstractScrollArea: QFrame, QAbstractScrollArea_ITF {
    public func QAbstractScrollArea_PTR() -> QAbstractScrollArea { callLocalFunction(l: ["", Pointer(), ___className, "QAbstractScrollArea_PTR"]) as! QAbstractScrollArea }
    public func AddScrollBarWidget(widget: QWidget_ITF? = nil, alignment: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddScrollBarWidget", widget as Any, alignment as Any]) }
    public func CornerWidget() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "CornerWidget"]) as! QWidget }
    public func HorizontalScrollBar() -> QScrollBar { callLocalFunction(l: ["", Pointer(), ___className, "HorizontalScrollBar"]) as! QScrollBar }
    public func HorizontalScrollBarPolicy() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "HorizontalScrollBarPolicy"]) as! Float) }
    public func MaximumViewportSize() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "MaximumViewportSize"]) as! QSize }
    public func ScrollBarWidgets(alignment: Int) -> [QWidget] { callLocalFunction(l: ["", Pointer(), ___className, "ScrollBarWidgets", alignment as Any]) as! [QWidget] }
    public func ConnectScrollContentsBy(f: @escaping (_ dx: Int, _ dy: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectScrollContentsBy", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float)) } as Any) }
    public func DisconnectScrollContentsBy() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectScrollContentsBy"]) }
    public func ScrollContentsBy(dx: Int, dy: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ScrollContentsBy", dx as Any, dy as Any]) }
    public func ScrollContentsByDefault(dx: Int, dy: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ScrollContentsByDefault", dx as Any, dy as Any]) }
    public func SetCornerWidget(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCornerWidget", widget as Any]) }
    public func SetHorizontalScrollBar(scrollBar: QScrollBar_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetHorizontalScrollBar", scrollBar as Any]) }
    public func SetHorizontalScrollBarPolicy(vqt: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetHorizontalScrollBarPolicy", vqt as Any]) }
    public func SetSizeAdjustPolicy(policy: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSizeAdjustPolicy", policy as Any]) }
    public func SetVerticalScrollBar(scrollBar: QScrollBar_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetVerticalScrollBar", scrollBar as Any]) }
    public func SetVerticalScrollBarPolicy(vqt: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetVerticalScrollBarPolicy", vqt as Any]) }
    public func SetViewport(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetViewport", widget as Any]) }
    public func SetViewportMargins(left: Int, top: Int, right: Int, bottom: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetViewportMargins", left as Any, top as Any, right as Any, bottom as Any]) }
    public func SetViewportMargins2(margins: QMargins_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetViewportMargins2", margins as Any]) }
    public func ConnectSetupViewport(f: @escaping (_ viewport: QWidget) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetupViewport", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QWidget) } as Any) }
    public func DisconnectSetupViewport() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetupViewport"]) }
    public func SetupViewport(viewport: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetupViewport", viewport as Any]) }
    public func SetupViewportDefault(viewport: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetupViewportDefault", viewport as Any]) }
    public func SizeAdjustPolicy() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SizeAdjustPolicy"]) as! Float) }
    public func VerticalScrollBar() -> QScrollBar { callLocalFunction(l: ["", Pointer(), ___className, "VerticalScrollBar"]) as! QScrollBar }
    public func VerticalScrollBarPolicy() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "VerticalScrollBarPolicy"]) as! Float) }
    public func Viewport() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "Viewport"]) as! QWidget }
    public func ConnectViewportEvent(f: @escaping (_ event: QEvent) -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectViewportEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QEvent) } as Any) }
    public func DisconnectViewportEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectViewportEvent"]) }
    public func ViewportEvent(event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "ViewportEvent", event as Any]) as! Bool }
    public func ViewportEventDefault(event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "ViewportEventDefault", event as Any]) as! Bool }
    public func ViewportMargins() -> QMargins { callLocalFunction(l: ["", Pointer(), ___className, "ViewportMargins"]) as! QMargins }
    public func ConnectViewportSizeHint(f: @escaping () -> QSize) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectViewportSizeHint", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectViewportSizeHint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectViewportSizeHint"]) }
    public func ViewportSizeHint() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "ViewportSizeHint"]) as! QSize }
    public func ViewportSizeHintDefault() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "ViewportSizeHintDefault"]) as! QSize }
    public func ConnectDestroyQAbstractScrollArea(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQAbstractScrollArea", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQAbstractScrollArea() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQAbstractScrollArea"]) }
    public func DestroyQAbstractScrollArea() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQAbstractScrollArea"]) }
    public func DestroyQAbstractScrollAreaDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQAbstractScrollAreaDefault"]) }
}

public func NewQAbstractScrollAreaFromPointer(ptr: String) -> QAbstractScrollArea { let r = QAbstractScrollArea(); r.initFrom(p: ptr, n: "widgets.QAbstractScrollArea"); return r }
public func NewQAbstractScrollArea(parent: QWidget_ITF? = nil) -> QAbstractScrollArea { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQAbstractScrollArea", "", parent as Any]) as! QAbstractScrollArea }
public protocol QAbstractSlider_ITF: QWidget_ITF {
    func QAbstractSlider_PTR() -> QAbstractSlider
}

public class QAbstractSlider: QWidget, QAbstractSlider_ITF {
    public func QAbstractSlider_PTR() -> QAbstractSlider { callLocalFunction(l: ["", Pointer(), ___className, "QAbstractSlider_PTR"]) as! QAbstractSlider }
    public func ConnectActionTriggered(f: @escaping (_ action: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectActionTriggered", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectActionTriggered() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectActionTriggered"]) }
    public func ActionTriggered(action: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ActionTriggered", action as Any]) }
    public func HasTracking() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "HasTracking"]) as! Bool }
    public func InvertedAppearance() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "InvertedAppearance"]) as! Bool }
    public func InvertedControls() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "InvertedControls"]) as! Bool }
    public func IsSliderDown() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsSliderDown"]) as! Bool }
    public func Maximum() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Maximum"]) as! Float) }
    public func Minimum() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Minimum"]) as! Float) }
    public func Orientation() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Orientation"]) as! Float) }
    public func PageStep() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "PageStep"]) as! Float) }
    public func ConnectRangeChanged(f: @escaping (_ mi: Int, _ max: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRangeChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float)) } as Any) }
    public func DisconnectRangeChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRangeChanged"]) }
    public func RangeChanged(mi: Int, max: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RangeChanged", mi as Any, max as Any]) }
    public func RepeatAction() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "RepeatAction"]) as! Float) }
    public func SetInvertedAppearance(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetInvertedAppearance", vbo as Any]) }
    public func SetInvertedControls(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetInvertedControls", vbo as Any]) }
    public func SetMaximum(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMaximum", vi as Any]) }
    public func SetMinimum(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMinimum", vi as Any]) }
    public func ConnectSetOrientation(f: @escaping (_ vqt: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetOrientation", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSetOrientation() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetOrientation"]) }
    public func SetOrientation(vqt: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOrientation", vqt as Any]) }
    public func SetOrientationDefault(vqt: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOrientationDefault", vqt as Any]) }
    public func SetPageStep(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPageStep", vi as Any]) }
    public func ConnectSetRange(f: @escaping (_ mi: Int, _ max: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetRange", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float)) } as Any) }
    public func DisconnectSetRange() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetRange"]) }
    public func SetRange(mi: Int, max: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRange", mi as Any, max as Any]) }
    public func SetRangeDefault(mi: Int, max: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRangeDefault", mi as Any, max as Any]) }
    public func SetRepeatAction(action: Int, thresholdTime: Int, repeatTime: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRepeatAction", action as Any, thresholdTime as Any, repeatTime as Any]) }
    public func SetSingleStep(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSingleStep", vi as Any]) }
    public func SetSliderDown(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSliderDown", vbo as Any]) }
    public func SetSliderPosition(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSliderPosition", vi as Any]) }
    public func SetTracking(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTracking", enable as Any]) }
    public func ConnectSetValue(f: @escaping (_ vi: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetValue", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSetValue() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetValue"]) }
    public func SetValue(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetValue", vi as Any]) }
    public func SetValueDefault(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetValueDefault", vi as Any]) }
    public func SingleStep() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SingleStep"]) as! Float) }
    public func ConnectSliderChange(f: @escaping (_ change: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSliderChange", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSliderChange() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSliderChange"]) }
    public func SliderChange(change: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SliderChange", change as Any]) }
    public func SliderChangeDefault(change: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SliderChangeDefault", change as Any]) }
    public func ConnectSliderMoved(f: @escaping (_ value: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSliderMoved", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSliderMoved() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSliderMoved"]) }
    public func SliderMoved(value: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SliderMoved", value as Any]) }
    public func SliderPosition() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SliderPosition"]) as! Float) }
    public func ConnectSliderPressed(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSliderPressed", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectSliderPressed() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSliderPressed"]) }
    public func SliderPressed() { _ = callLocalFunction(l: ["", Pointer(), ___className, "SliderPressed"]) }
    public func ConnectSliderReleased(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSliderReleased", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectSliderReleased() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSliderReleased"]) }
    public func SliderReleased() { _ = callLocalFunction(l: ["", Pointer(), ___className, "SliderReleased"]) }
    public func TriggerAction(action: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TriggerAction", action as Any]) }
    public func Value() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Value"]) as! Float) }
    public func ConnectValueChanged(f: @escaping (_ value: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectValueChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectValueChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectValueChanged"]) }
    public func ValueChanged(value: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ValueChanged", value as Any]) }
    public func ConnectDestroyQAbstractSlider(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQAbstractSlider", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQAbstractSlider() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQAbstractSlider"]) }
    public func DestroyQAbstractSlider() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQAbstractSlider"]) }
    public func DestroyQAbstractSliderDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQAbstractSliderDefault"]) }
}

public func NewQAbstractSliderFromPointer(ptr: String) -> QAbstractSlider { let r = QAbstractSlider(); r.initFrom(p: ptr, n: "widgets.QAbstractSlider"); return r }
public func NewQAbstractSlider(parent: QWidget_ITF? = nil) -> QAbstractSlider { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQAbstractSlider", "", parent as Any]) as! QAbstractSlider }
public protocol QAbstractSpinBox_ITF: QWidget_ITF {
    func QAbstractSpinBox_PTR() -> QAbstractSpinBox
}

public class QAbstractSpinBox: QWidget, QAbstractSpinBox_ITF {
    public func QAbstractSpinBox_PTR() -> QAbstractSpinBox { callLocalFunction(l: ["", Pointer(), ___className, "QAbstractSpinBox_PTR"]) as! QAbstractSpinBox }
    public func Alignment() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Alignment"]) as! Float) }
    public func ButtonSymbols() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ButtonSymbols"]) as! Float) }
    public func ConnectClear(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectClear", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectClear() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectClear"]) }
    public func Clear() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Clear"]) }
    public func ClearDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearDefault"]) }
    public func CorrectionMode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CorrectionMode"]) as! Float) }
    public func ConnectEditingFinished(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectEditingFinished", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectEditingFinished() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectEditingFinished"]) }
    public func EditingFinished() { _ = callLocalFunction(l: ["", Pointer(), ___className, "EditingFinished"]) }
    public func ConnectFixup(f: @escaping (_ input: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectFixup", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectFixup() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectFixup"]) }
    public func Fixup(input: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Fixup", input as Any]) }
    public func FixupDefault(input: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "FixupDefault", input as Any]) }
    public func HasAcceptableInput() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "HasAcceptableInput"]) as! Bool }
    public func HasFrame() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "HasFrame"]) as! Bool }
    public func InitStyleOption(option: QStyleOptionSpinBox_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InitStyleOption", option as Any]) }
    public func InterpretText() { _ = callLocalFunction(l: ["", Pointer(), ___className, "InterpretText"]) }
    public func IsAccelerated() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsAccelerated"]) as! Bool }
    public func IsGroupSeparatorShown() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsGroupSeparatorShown"]) as! Bool }
    public func IsReadOnly() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsReadOnly"]) as! Bool }
    public func KeyboardTracking() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "KeyboardTracking"]) as! Bool }
    public func LineEdit() -> QLineEdit { callLocalFunction(l: ["", Pointer(), ___className, "LineEdit"]) as! QLineEdit }
    public func ConnectSelectAll(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSelectAll", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectSelectAll() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSelectAll"]) }
    public func SelectAll() { _ = callLocalFunction(l: ["", Pointer(), ___className, "SelectAll"]) }
    public func SelectAllDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "SelectAllDefault"]) }
    public func SetAccelerated(on: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAccelerated", on as Any]) }
    public func SetAlignment(flag: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAlignment", flag as Any]) }
    public func SetButtonSymbols(bs: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetButtonSymbols", bs as Any]) }
    public func SetCorrectionMode(cm: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCorrectionMode", cm as Any]) }
    public func SetFrame(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFrame", vbo as Any]) }
    public func SetGroupSeparatorShown(shown: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetGroupSeparatorShown", shown as Any]) }
    public func SetKeyboardTracking(kt: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetKeyboardTracking", kt as Any]) }
    public func SetLineEdit(lineEdit: QLineEdit_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetLineEdit", lineEdit as Any]) }
    public func SetReadOnly(r: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetReadOnly", r as Any]) }
    public func SetSpecialValueText(txt: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSpecialValueText", txt as Any]) }
    public func SetWrapping(w: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWrapping", w as Any]) }
    public func SpecialValueText() -> String { callLocalFunction(l: ["", Pointer(), ___className, "SpecialValueText"]) as! String }
    public func ConnectStepBy(f: @escaping (_ steps: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectStepBy", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectStepBy() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectStepBy"]) }
    public func StepBy(steps: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "StepBy", steps as Any]) }
    public func StepByDefault(steps: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "StepByDefault", steps as Any]) }
    public func ConnectStepDown(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectStepDown", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectStepDown() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectStepDown"]) }
    public func StepDown() { _ = callLocalFunction(l: ["", Pointer(), ___className, "StepDown"]) }
    public func StepDownDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "StepDownDefault"]) }
    public func ConnectStepEnabled(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectStepEnabled", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectStepEnabled() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectStepEnabled"]) }
    public func StepEnabled() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "StepEnabled"]) as! Float) }
    public func StepEnabledDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "StepEnabledDefault"]) as! Float) }
    public func ConnectStepUp(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectStepUp", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectStepUp() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectStepUp"]) }
    public func StepUp() { _ = callLocalFunction(l: ["", Pointer(), ___className, "StepUp"]) }
    public func StepUpDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "StepUpDefault"]) }
    public func Text() -> String { callLocalFunction(l: ["", Pointer(), ___className, "Text"]) as! String }
    public func ConnectValidate(f: @escaping (_ input: String, _ pos: Int) -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectValidate", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String, Int(inp[1] as! Float)) } as Any) }
    public func DisconnectValidate() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectValidate"]) }
    public func Validate(input: String, pos: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Validate", input as Any, pos as Any]) as! Float) }
    public func ValidateDefault(input: String, pos: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ValidateDefault", input as Any, pos as Any]) as! Float) }
    public func Wrapping() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "Wrapping"]) as! Bool }
    public func ConnectDestroyQAbstractSpinBox(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQAbstractSpinBox", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQAbstractSpinBox() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQAbstractSpinBox"]) }
    public func DestroyQAbstractSpinBox() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQAbstractSpinBox"]) }
    public func DestroyQAbstractSpinBoxDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQAbstractSpinBoxDefault"]) }
}

public func NewQAbstractSpinBoxFromPointer(ptr: String) -> QAbstractSpinBox { let r = QAbstractSpinBox(); r.initFrom(p: ptr, n: "widgets.QAbstractSpinBox"); return r }
public func NewQAbstractSpinBox(parent: QWidget_ITF? = nil) -> QAbstractSpinBox { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQAbstractSpinBox", "", parent as Any]) as! QAbstractSpinBox }
public protocol QAccessibleWidget_ITF: QAccessibleActionInterface_ITF {
    func QAccessibleWidget_PTR() -> QAccessibleWidget
    func QAccessibleObject_PTR() -> QAccessibleObject
}

public class QAccessibleWidget: QAccessibleActionInterface, QAccessibleWidget_ITF {
    public func QAccessibleObject_PTR() -> QAccessibleObject { callLocalFunction(l: ["", Pointer(), ___className, "QAccessibleObject_PTR"]) as! QAccessibleObject }
    public func QAccessibleWidget_PTR() -> QAccessibleWidget { callLocalFunction(l: ["", Pointer(), ___className, "QAccessibleWidget_PTR"]) as! QAccessibleWidget }
    override public func ConnectActionNames(f: @escaping () -> [String]) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectActionNames", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectActionNames() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectActionNames"]) }
    override public func ActionNames() -> [String] { callLocalFunction(l: ["", Pointer(), ___className, "ActionNames"]) as! [String] }
    public func ActionNamesDefault() -> [String] { callLocalFunction(l: ["", Pointer(), ___className, "ActionNamesDefault"]) as! [String] }
    public func AddControllingSignal(sign: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddControllingSignal", sign as Any]) }
    public func ConnectBackgroundColor(f: @escaping () -> QColor) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectBackgroundColor", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectBackgroundColor() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectBackgroundColor"]) }
    public func BackgroundColor() -> QColor { callLocalFunction(l: ["", Pointer(), ___className, "BackgroundColor"]) as! QColor }
    public func BackgroundColorDefault() -> QColor { callLocalFunction(l: ["", Pointer(), ___className, "BackgroundColorDefault"]) as! QColor }
    public func ConnectChild(f: @escaping (_ index: Int) -> QAccessibleInterface) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectChild", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectChild() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectChild"]) }
    public func Child(index: Int) -> QAccessibleInterface { callLocalFunction(l: ["", Pointer(), ___className, "Child", index as Any]) as! QAccessibleInterface }
    public func ChildDefault(index: Int) -> QAccessibleInterface { callLocalFunction(l: ["", Pointer(), ___className, "ChildDefault", index as Any]) as! QAccessibleInterface }
    public func ConnectChildCount(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectChildCount", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectChildCount() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectChildCount"]) }
    public func ChildCount() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ChildCount"]) as! Float) }
    public func ChildCountDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ChildCountDefault"]) as! Float) }
    override public func ConnectDoAction(f: @escaping (_ actionName: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDoAction", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    override public func DisconnectDoAction() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDoAction"]) }
    override public func DoAction(actionName: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DoAction", actionName as Any]) }
    public func DoActionDefault(actionName: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DoActionDefault", actionName as Any]) }
    public func ConnectFocusChild(f: @escaping () -> QAccessibleInterface) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectFocusChild", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectFocusChild() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectFocusChild"]) }
    public func FocusChild() -> QAccessibleInterface { callLocalFunction(l: ["", Pointer(), ___className, "FocusChild"]) as! QAccessibleInterface }
    public func FocusChildDefault() -> QAccessibleInterface { callLocalFunction(l: ["", Pointer(), ___className, "FocusChildDefault"]) as! QAccessibleInterface }
    public func ConnectForegroundColor(f: @escaping () -> QColor) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectForegroundColor", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectForegroundColor() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectForegroundColor"]) }
    public func ForegroundColor() -> QColor { callLocalFunction(l: ["", Pointer(), ___className, "ForegroundColor"]) as! QColor }
    public func ForegroundColorDefault() -> QColor { callLocalFunction(l: ["", Pointer(), ___className, "ForegroundColorDefault"]) as! QColor }
    public func ConnectIndexOfChild(f: @escaping (_ child: QAccessibleInterface) -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectIndexOfChild", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QAccessibleInterface) } as Any) }
    public func DisconnectIndexOfChild() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectIndexOfChild"]) }
    public func IndexOfChild(child: QAccessibleInterface_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "IndexOfChild", child as Any]) as! Float) }
    public func IndexOfChildDefault(child: QAccessibleInterface_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "IndexOfChildDefault", child as Any]) as! Float) }
    public func ConnectInterface_cast(f: @escaping (_ t: Int) -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectInterface_cast", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectInterface_cast() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectInterface_cast"]) }
    public func Interface_cast(t: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Interface_cast", t as Any]) as! Float) }
    public func Interface_castDefault(t: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Interface_castDefault", t as Any]) as! Float) }
    public func ConnectIsValid(f: @escaping () -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectIsValid", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectIsValid() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectIsValid"]) }
    public func IsValid() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsValid"]) as! Bool }
    public func IsValidDefault() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsValidDefault"]) as! Bool }
    override public func ConnectKeyBindingsForAction(f: @escaping (_ actionName: String) -> [String]) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectKeyBindingsForAction", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    override public func DisconnectKeyBindingsForAction() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectKeyBindingsForAction"]) }
    override public func KeyBindingsForAction(actionName: String) -> [String] { callLocalFunction(l: ["", Pointer(), ___className, "KeyBindingsForAction", actionName as Any]) as! [String] }
    public func KeyBindingsForActionDefault(actionName: String) -> [String] { callLocalFunction(l: ["", Pointer(), ___className, "KeyBindingsForActionDefault", actionName as Any]) as! [String] }
    public func ConnectParent(f: @escaping () -> QAccessibleInterface) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectParent", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectParent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectParent"]) }
    public func Parent() -> QAccessibleInterface { callLocalFunction(l: ["", Pointer(), ___className, "Parent"]) as! QAccessibleInterface }
    public func ParentDefault() -> QAccessibleInterface { callLocalFunction(l: ["", Pointer(), ___className, "ParentDefault"]) as! QAccessibleInterface }
    public func ParentObject() -> QObject { callLocalFunction(l: ["", Pointer(), ___className, "ParentObject"]) as! QObject }
    public func ConnectRect(f: @escaping () -> QRect) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRect", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectRect() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRect"]) }
    public func Rect() -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "Rect"]) as! QRect }
    public func RectDefault() -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "RectDefault"]) as! QRect }
    public func ConnectRole(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRole", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectRole() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRole"]) }
    public func Role() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Role"]) as! Float) }
    public func RoleDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "RoleDefault"]) as! Float) }
    public func ConnectText(f: @escaping (_ t: Int) -> String) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectText", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectText() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectText"]) }
    public func Text(t: Int) -> String { callLocalFunction(l: ["", Pointer(), ___className, "Text", t as Any]) as! String }
    public func TextDefault(t: Int) -> String { callLocalFunction(l: ["", Pointer(), ___className, "TextDefault", t as Any]) as! String }
    public func Widget() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "Widget"]) as! QWidget }
    public func ConnectWindow(f: @escaping () -> QWindow) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectWindow", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectWindow() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectWindow"]) }
    public func Window() -> QWindow { callLocalFunction(l: ["", Pointer(), ___className, "Window"]) as! QWindow }
    public func WindowDefault() -> QWindow { callLocalFunction(l: ["", Pointer(), ___className, "WindowDefault"]) as! QWindow }
    public func ConnectDestroyQAccessibleWidget(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQAccessibleWidget", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQAccessibleWidget() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQAccessibleWidget"]) }
    public func DestroyQAccessibleWidget() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQAccessibleWidget"]) }
    public func DestroyQAccessibleWidgetDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQAccessibleWidgetDefault"]) }
    public func ChildAt(x: Int, y: Int) -> QAccessibleInterface { callLocalFunction(l: ["", Pointer(), ___className, "ChildAt", x as Any, y as Any]) as! QAccessibleInterface }
    public func ChildAtDefault(x: Int, y: Int) -> QAccessibleInterface { callLocalFunction(l: ["", Pointer(), ___className, "ChildAtDefault", x as Any, y as Any]) as! QAccessibleInterface }
    public func Object() -> QObject { callLocalFunction(l: ["", Pointer(), ___className, "Object"]) as! QObject }
    public func ObjectDefault() -> QObject { callLocalFunction(l: ["", Pointer(), ___className, "ObjectDefault"]) as! QObject }
    public func SetText(t: Int, text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetText", t as Any, text as Any]) }
    public func SetTextDefault(t: Int, text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTextDefault", t as Any, text as Any]) }
    override public func LocalizedActionDescription(actionName: String) -> String { callLocalFunction(l: ["", Pointer(), ___className, "LocalizedActionDescription", actionName as Any]) as! String }
    override public func LocalizedActionDescriptionDefault(actionName: String) -> String { callLocalFunction(l: ["", Pointer(), ___className, "LocalizedActionDescriptionDefault", actionName as Any]) as! String }
    override public func LocalizedActionName(actionName: String) -> String { callLocalFunction(l: ["", Pointer(), ___className, "LocalizedActionName", actionName as Any]) as! String }
    override public func LocalizedActionNameDefault(actionName: String) -> String { callLocalFunction(l: ["", Pointer(), ___className, "LocalizedActionNameDefault", actionName as Any]) as! String }
}

public func NewQAccessibleWidgetFromPointer(ptr: String) -> QAccessibleWidget { let r = QAccessibleWidget(); r.initFrom(p: ptr, n: "widgets.QAccessibleWidget"); return r }
public protocol QAction_ITF: QObject_ITF {
    func QAction_PTR() -> QAction
}

public class QAction: QObject, QAction_ITF {
    public func QAction_PTR() -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "QAction_PTR"]) as! QAction }
    public func ActionGroup() -> QActionGroup { callLocalFunction(l: ["", Pointer(), ___className, "ActionGroup"]) as! QActionGroup }
    public func Activate(event: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Activate", event as Any]) }
    public func AssociatedGraphicsWidgets() -> [QGraphicsWidget] { callLocalFunction(l: ["", Pointer(), ___className, "AssociatedGraphicsWidgets"]) as! [QGraphicsWidget] }
    public func AssociatedWidgets() -> [QWidget] { callLocalFunction(l: ["", Pointer(), ___className, "AssociatedWidgets"]) as! [QWidget] }
    public func AutoRepeat() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "AutoRepeat"]) as! Bool }
    public func ConnectChanged(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectChanged", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectChanged"]) }
    public func Changed() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Changed"]) }
    public func Data() -> QVariant { callLocalFunction(l: ["", Pointer(), ___className, "Data"]) as! QVariant }
    override public func EventDefault(e: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventDefault", e as Any]) as! Bool }
    public func Font() -> QFont { callLocalFunction(l: ["", Pointer(), ___className, "Font"]) as! QFont }
    public func ConnectHover(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHover", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectHover() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHover"]) }
    public func Hover() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Hover"]) }
    public func HoverDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "HoverDefault"]) }
    public func ConnectHovered(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHovered", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectHovered() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHovered"]) }
    public func Hovered() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Hovered"]) }
    public func Icon() -> QIcon { callLocalFunction(l: ["", Pointer(), ___className, "Icon"]) as! QIcon }
    public func IconText() -> String { callLocalFunction(l: ["", Pointer(), ___className, "IconText"]) as! String }
    public func IsCheckable() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsCheckable"]) as! Bool }
    public func IsChecked() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsChecked"]) as! Bool }
    public func IsEnabled() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsEnabled"]) as! Bool }
    public func IsIconVisibleInMenu() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsIconVisibleInMenu"]) as! Bool }
    public func IsSeparator() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsSeparator"]) as! Bool }
    public func IsShortcutVisibleInContextMenu() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsShortcutVisibleInContextMenu"]) as! Bool }
    public func IsVisible() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsVisible"]) as! Bool }
    public func Menu() -> QMenu { callLocalFunction(l: ["", Pointer(), ___className, "Menu"]) as! QMenu }
    public func MenuRole() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "MenuRole"]) as! Float) }
    public func ParentWidget() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "ParentWidget"]) as! QWidget }
    public func Priority() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Priority"]) as! Float) }
    public func SetActionGroup(group: QActionGroup_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetActionGroup", group as Any]) }
    public func SetAutoRepeat(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAutoRepeat", vbo as Any]) }
    public func SetCheckable(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCheckable", vbo as Any]) }
    public func ConnectSetChecked(f: @escaping (_ vbo: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetChecked", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectSetChecked() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetChecked"]) }
    public func SetChecked(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetChecked", vbo as Any]) }
    public func SetCheckedDefault(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCheckedDefault", vbo as Any]) }
    public func SetData(userData: QVariant_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetData", userData as Any]) }
    public func ConnectSetDisabled(f: @escaping (_ b: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetDisabled", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectSetDisabled() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetDisabled"]) }
    public func SetDisabled(b: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDisabled", b as Any]) }
    public func SetDisabledDefault(b: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDisabledDefault", b as Any]) }
    public func ConnectSetEnabled(f: @escaping (_ vbo: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetEnabled", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectSetEnabled() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetEnabled"]) }
    public func SetEnabled(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetEnabled", vbo as Any]) }
    public func SetEnabledDefault(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetEnabledDefault", vbo as Any]) }
    public func SetFont(font: QFont_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFont", font as Any]) }
    public func SetIcon(icon: QIcon_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIcon", icon as Any]) }
    public func SetIconText(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIconText", text as Any]) }
    public func SetIconVisibleInMenu(visible: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIconVisibleInMenu", visible as Any]) }
    public func SetMenu(menu: QMenu_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMenu", menu as Any]) }
    public func SetMenuRole(menuRole: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMenuRole", menuRole as Any]) }
    public func SetPriority(priority: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPriority", priority as Any]) }
    public func SetSeparator(b: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSeparator", b as Any]) }
    public func SetShortcut(shortcut: QKeySequence_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetShortcut", shortcut as Any]) }
    public func SetShortcutContext(context: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetShortcutContext", context as Any]) }
    public func SetShortcutVisibleInContextMenu(show: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetShortcutVisibleInContextMenu", show as Any]) }
    public func SetShortcuts(shortcuts: [QKeySequence]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetShortcuts", shortcuts as Any]) }
    public func SetShortcuts2(key: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetShortcuts2", key as Any]) }
    public func SetStatusTip(statusTip: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStatusTip", statusTip as Any]) }
    public func SetText(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetText", text as Any]) }
    public func SetToolTip(tip: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetToolTip", tip as Any]) }
    public func ConnectSetVisible(f: @escaping (_ vbo: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetVisible", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectSetVisible() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetVisible"]) }
    public func SetVisible(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetVisible", vbo as Any]) }
    public func SetVisibleDefault(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetVisibleDefault", vbo as Any]) }
    public func SetWhatsThis(what: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWhatsThis", what as Any]) }
    public func Shortcut() -> QKeySequence { callLocalFunction(l: ["", Pointer(), ___className, "Shortcut"]) as! QKeySequence }
    public func ShortcutContext() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ShortcutContext"]) as! Float) }
    public func Shortcuts() -> [QKeySequence] { callLocalFunction(l: ["", Pointer(), ___className, "Shortcuts"]) as! [QKeySequence] }
    public func ShowStatusText(widget: QWidget_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "ShowStatusText", widget as Any]) as! Bool }
    public func StatusTip() -> String { callLocalFunction(l: ["", Pointer(), ___className, "StatusTip"]) as! String }
    public func Text() -> String { callLocalFunction(l: ["", Pointer(), ___className, "Text"]) as! String }
    public func ConnectToggle(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectToggle", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectToggle() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectToggle"]) }
    public func Toggle() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Toggle"]) }
    public func ToggleDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ToggleDefault"]) }
    public func ConnectToggled(f: @escaping (_ checked: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectToggled", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectToggled() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectToggled"]) }
    public func Toggled(checked: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Toggled", checked as Any]) }
    public func ToolTip() -> String { callLocalFunction(l: ["", Pointer(), ___className, "ToolTip"]) as! String }
    public func ConnectTrigger(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTrigger", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectTrigger() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTrigger"]) }
    public func Trigger() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Trigger"]) }
    public func TriggerDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "TriggerDefault"]) }
    public func ConnectTriggered(f: @escaping (_ checked: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTriggered", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectTriggered() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTriggered"]) }
    public func Triggered(checked: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Triggered", checked as Any]) }
    public func WhatsThis() -> String { callLocalFunction(l: ["", Pointer(), ___className, "WhatsThis"]) as! String }
    public func ConnectDestroyQAction(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQAction", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQAction() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQAction"]) }
    public func DestroyQAction() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQAction"]) }
    public func DestroyQActionDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQActionDefault"]) }
    override public func ChildEventDefault(event: QChildEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ChildEventDefault", event as Any]) }
    override public func ConnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ConnectNotifyDefault", sign as Any]) }
    override public func CustomEventDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CustomEventDefault", event as Any]) }
    override public func DeleteLaterDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DeleteLaterDefault"]) }
    override public func DisconnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DisconnectNotifyDefault", sign as Any]) }
    override public func EventFilterDefault(watched: QObject_ITF? = nil, event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventFilterDefault", watched as Any, event as Any]) as! Bool }
    override public func MetaObjectDefault() -> QMetaObject { callLocalFunction(l: ["", Pointer(), ___className, "MetaObjectDefault"]) as! QMetaObject }
    override public func TimerEventDefault(event: QTimerEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TimerEventDefault", event as Any]) }
}

public func NewQActionFromPointer(ptr: String) -> QAction { let r = QAction(); r.initFrom(p: ptr, n: "widgets.QAction"); return r }
public func NewQAction(parent: QObject_ITF? = nil) -> QAction { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQAction", "", parent as Any]) as! QAction }
public func NewQAction2(text: String, parent: QObject_ITF? = nil) -> QAction { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQAction2", "", text as Any, parent as Any]) as! QAction }
public func NewQAction3(icon: QIcon_ITF? = nil, text: String, parent: QObject_ITF? = nil) -> QAction { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQAction3", "", icon as Any, text as Any, parent as Any]) as! QAction }
public protocol QActionGroup_ITF: QObject_ITF {
    func QActionGroup_PTR() -> QActionGroup
}

public class QActionGroup: QObject, QActionGroup_ITF {
    public func QActionGroup_PTR() -> QActionGroup { callLocalFunction(l: ["", Pointer(), ___className, "QActionGroup_PTR"]) as! QActionGroup }
    public func Actions() -> [QAction] { callLocalFunction(l: ["", Pointer(), ___className, "Actions"]) as! [QAction] }
    public func AddAction(action: QAction_ITF? = nil) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "AddAction", action as Any]) as! QAction }
    public func AddAction2(text: String) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "AddAction2", text as Any]) as! QAction }
    public func AddAction3(icon: QIcon_ITF? = nil, text: String) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "AddAction3", icon as Any, text as Any]) as! QAction }
    public func CheckedAction() -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "CheckedAction"]) as! QAction }
    public func ConnectHovered(f: @escaping (_ action: QAction) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHovered", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QAction) } as Any) }
    public func DisconnectHovered() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHovered"]) }
    public func Hovered(action: QAction_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Hovered", action as Any]) }
    public func IsEnabled() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsEnabled"]) as! Bool }
    public func IsExclusive() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsExclusive"]) as! Bool }
    public func IsVisible() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsVisible"]) as! Bool }
    public func RemoveAction(action: QAction_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveAction", action as Any]) }
    public func ConnectSetDisabled(f: @escaping (_ b: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetDisabled", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectSetDisabled() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetDisabled"]) }
    public func SetDisabled(b: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDisabled", b as Any]) }
    public func SetDisabledDefault(b: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDisabledDefault", b as Any]) }
    public func ConnectSetEnabled(f: @escaping (_ vbo: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetEnabled", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectSetEnabled() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetEnabled"]) }
    public func SetEnabled(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetEnabled", vbo as Any]) }
    public func SetEnabledDefault(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetEnabledDefault", vbo as Any]) }
    public func ConnectSetExclusive(f: @escaping (_ vbo: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetExclusive", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectSetExclusive() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetExclusive"]) }
    public func SetExclusive(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetExclusive", vbo as Any]) }
    public func SetExclusiveDefault(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetExclusiveDefault", vbo as Any]) }
    public func ConnectSetVisible(f: @escaping (_ vbo: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetVisible", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectSetVisible() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetVisible"]) }
    public func SetVisible(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetVisible", vbo as Any]) }
    public func SetVisibleDefault(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetVisibleDefault", vbo as Any]) }
    public func ConnectTriggered(f: @escaping (_ action: QAction) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTriggered", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QAction) } as Any) }
    public func DisconnectTriggered() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTriggered"]) }
    public func Triggered(action: QAction_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Triggered", action as Any]) }
    public func ConnectDestroyQActionGroup(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQActionGroup", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQActionGroup() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQActionGroup"]) }
    public func DestroyQActionGroup() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQActionGroup"]) }
    public func DestroyQActionGroupDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQActionGroupDefault"]) }
    override public func ChildEventDefault(event: QChildEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ChildEventDefault", event as Any]) }
    override public func ConnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ConnectNotifyDefault", sign as Any]) }
    override public func CustomEventDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CustomEventDefault", event as Any]) }
    override public func DeleteLaterDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DeleteLaterDefault"]) }
    override public func DisconnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DisconnectNotifyDefault", sign as Any]) }
    override public func EventDefault(e: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventDefault", e as Any]) as! Bool }
    override public func EventFilterDefault(watched: QObject_ITF? = nil, event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventFilterDefault", watched as Any, event as Any]) as! Bool }
    override public func MetaObjectDefault() -> QMetaObject { callLocalFunction(l: ["", Pointer(), ___className, "MetaObjectDefault"]) as! QMetaObject }
    override public func TimerEventDefault(event: QTimerEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TimerEventDefault", event as Any]) }
}

public func NewQActionGroupFromPointer(ptr: String) -> QActionGroup { let r = QActionGroup(); r.initFrom(p: ptr, n: "widgets.QActionGroup"); return r }
public func NewQActionGroup(parent: QObject_ITF? = nil) -> QActionGroup { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQActionGroup", "", parent as Any]) as! QActionGroup }
public protocol QApplication_ITF: QGuiApplication_ITF {
    func QApplication_PTR() -> QApplication
}

public class QApplication: QGuiApplication, QApplication_ITF {
    public func QApplication_PTR() -> QApplication { callLocalFunction(l: ["", Pointer(), ___className, "QApplication_PTR"]) as! QApplication }
    public func ConnectAboutQt(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectAboutQt", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectAboutQt() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectAboutQt"]) }
    public func AboutQt() { _ = callLocalFunction(l: ["", Pointer(), ___className, "AboutQt"]) }
    public func AboutQtDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "AboutQtDefault"]) }
    public func ActiveModalWidget() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "ActiveModalWidget"]) as! QWidget }
    public func ActivePopupWidget() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "ActivePopupWidget"]) as! QWidget }
    public func ActiveWindow() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "ActiveWindow"]) as! QWidget }
    public func Alert(widget: QWidget_ITF? = nil, msec: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Alert", widget as Any, msec as Any]) }
    public func AllWidgets() -> [QWidget] { callLocalFunction(l: ["", Pointer(), ___className, "AllWidgets"]) as! [QWidget] }
    public func ConnectAutoSipEnabled(f: @escaping () -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectAutoSipEnabled", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectAutoSipEnabled() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectAutoSipEnabled"]) }
    public func AutoSipEnabled() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "AutoSipEnabled"]) as! Bool }
    public func AutoSipEnabledDefault() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "AutoSipEnabledDefault"]) as! Bool }
    public func Beep() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Beep"]) }
    public func ConnectCloseAllWindows(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCloseAllWindows", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectCloseAllWindows() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCloseAllWindows"]) }
    public func CloseAllWindows() { _ = callLocalFunction(l: ["", Pointer(), ___className, "CloseAllWindows"]) }
    public func CloseAllWindowsDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "CloseAllWindowsDefault"]) }
    public func CursorFlashTime() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CursorFlashTime"]) as! Float) }
    public func Desktop() -> QDesktopWidget { callLocalFunction(l: ["", Pointer(), ___className, "Desktop"]) as! QDesktopWidget }
    public func DoubleClickInterval() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "DoubleClickInterval"]) as! Float) }
    override public func EventDefault(e: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventDefault", e as Any]) as! Bool }
    override public func Exec() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Exec"]) as! Float) }
    public func ConnectFocusChanged(f: @escaping (_ old: QWidget, _ now: QWidget) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectFocusChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QWidget, inp[1] as! QWidget) } as Any) }
    public func DisconnectFocusChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectFocusChanged"]) }
    public func FocusChanged(old: QWidget_ITF? = nil, now: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "FocusChanged", old as Any, now as Any]) }
    public func FocusWidget() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "FocusWidget"]) as! QWidget }
    override public func Font() -> QFont { callLocalFunction(l: ["", Pointer(), ___className, "Font"]) as! QFont }
    public func Font2(widget: QWidget_ITF? = nil) -> QFont { callLocalFunction(l: ["", Pointer(), ___className, "Font2", widget as Any]) as! QFont }
    public func Font3(className: String) -> QFont { callLocalFunction(l: ["", Pointer(), ___className, "Font3", className as Any]) as! QFont }
    public func FontMetrics() -> QFontMetrics { callLocalFunction(l: ["", Pointer(), ___className, "FontMetrics"]) as! QFontMetrics }
    public func GlobalStrut() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "GlobalStrut"]) as! QSize }
    public func IsEffectEnabled(effect: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsEffectEnabled", effect as Any]) as! Bool }
    public func KeyboardInputInterval() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "KeyboardInputInterval"]) as! Float) }
    public func NavigationMode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "NavigationMode"]) as! Float) }
    public func Palette_QApplication(widget: QWidget_ITF? = nil) -> QPalette { callLocalFunction(l: ["", Pointer(), ___className, "Palette", widget as Any]) as! QPalette }
    public func Palette2(className: String) -> QPalette { callLocalFunction(l: ["", Pointer(), ___className, "Palette2", className as Any]) as! QPalette }
    public func SetActiveWindow(active: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetActiveWindow", active as Any]) }
    public func ConnectSetAutoSipEnabled(f: @escaping (_ enabled: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetAutoSipEnabled", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectSetAutoSipEnabled() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetAutoSipEnabled"]) }
    public func SetAutoSipEnabled(enabled: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAutoSipEnabled", enabled as Any]) }
    public func SetAutoSipEnabledDefault(enabled: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAutoSipEnabledDefault", enabled as Any]) }
    public func SetCursorFlashTime(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCursorFlashTime", vi as Any]) }
    public func SetDoubleClickInterval(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDoubleClickInterval", vi as Any]) }
    public func SetEffectEnabled(effect: Int, enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetEffectEnabled", effect as Any, enable as Any]) }
    public func SetFont_QApplication(font: QFont_ITF? = nil, className: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFont", font as Any, className as Any]) }
    public func SetGlobalStrut(vqs: QSize_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetGlobalStrut", vqs as Any]) }
    public func SetKeyboardInputInterval(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetKeyboardInputInterval", vi as Any]) }
    public func SetNavigationMode(mode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetNavigationMode", mode as Any]) }
    public func SetPalette_QApplication(palette: QPalette_ITF? = nil, className: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPalette", palette as Any, className as Any]) }
    public func SetStartDragDistance(l: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStartDragDistance", l as Any]) }
    public func SetStartDragTime(ms: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStartDragTime", ms as Any]) }
    public func SetStyle(style: QStyle_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStyle", style as Any]) }
    public func SetStyle2(style: String) -> QStyle { callLocalFunction(l: ["", Pointer(), ___className, "SetStyle2", style as Any]) as! QStyle }
    public func ConnectSetStyleSheet(f: @escaping (_ sheet: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetStyleSheet", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectSetStyleSheet() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetStyleSheet"]) }
    public func SetStyleSheet(sheet: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStyleSheet", sheet as Any]) }
    public func SetStyleSheetDefault(sheet: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStyleSheetDefault", sheet as Any]) }
    public func SetWheelScrollLines(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWheelScrollLines", vi as Any]) }
    override public func SetWindowIcon(icon: QIcon_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWindowIcon", icon as Any]) }
    public func StartDragDistance() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "StartDragDistance"]) as! Float) }
    public func StartDragTime() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "StartDragTime"]) as! Float) }
    public func Style() -> QStyle { callLocalFunction(l: ["", Pointer(), ___className, "Style"]) as! QStyle }
    public func StyleSheet() -> String { callLocalFunction(l: ["", Pointer(), ___className, "StyleSheet"]) as! String }
    public func TopLevelAt_QApplication(point: QPoint_ITF? = nil) -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "TopLevelAt", point as Any]) as! QWidget }
    public func TopLevelAt2(x: Int, y: Int) -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "TopLevelAt2", x as Any, y as Any]) as! QWidget }
    public func TopLevelWidgets() -> [QWidget] { callLocalFunction(l: ["", Pointer(), ___className, "TopLevelWidgets"]) as! [QWidget] }
    public func WheelScrollLines() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "WheelScrollLines"]) as! Float) }
    public func WidgetAt(point: QPoint_ITF? = nil) -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "WidgetAt", point as Any]) as! QWidget }
    public func WidgetAt2(x: Int, y: Int) -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "WidgetAt2", x as Any, y as Any]) as! QWidget }
    override public func WindowIcon() -> QIcon { callLocalFunction(l: ["", Pointer(), ___className, "WindowIcon"]) as! QIcon }
    public func ConnectDestroyQApplication(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQApplication", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQApplication() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQApplication"]) }
    public func DestroyQApplication() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQApplication"]) }
    public func DestroyQApplicationDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQApplicationDefault"]) }
    override public func QuitDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "QuitDefault"]) }
    override public func ChildEventDefault(event: QChildEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ChildEventDefault", event as Any]) }
    override public func ConnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ConnectNotifyDefault", sign as Any]) }
    override public func CustomEventDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CustomEventDefault", event as Any]) }
    override public func DeleteLaterDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DeleteLaterDefault"]) }
    override public func DisconnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DisconnectNotifyDefault", sign as Any]) }
    override public func EventFilterDefault(watched: QObject_ITF? = nil, event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventFilterDefault", watched as Any, event as Any]) as! Bool }
    override public func MetaObjectDefault() -> QMetaObject { callLocalFunction(l: ["", Pointer(), ___className, "MetaObjectDefault"]) as! QMetaObject }
    override public func TimerEventDefault(event: QTimerEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TimerEventDefault", event as Any]) }
}

public func NewQApplicationFromPointer(ptr: String) -> QApplication { let r = QApplication(); r.initFrom(p: ptr, n: "widgets.QApplication"); return r }
public func NewQApplication(argc: Int, argv: [String]) -> QApplication { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQApplication", "", argc as Any, argv as Any]) as! QApplication }
public func QApplication_ActiveModalWidget() -> QWidget { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QApplication_ActiveModalWidget", ""]) as! QWidget }
public func QApplication_ActivePopupWidget() -> QWidget { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QApplication_ActivePopupWidget", ""]) as! QWidget }
public func QApplication_ActiveWindow() -> QWidget { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QApplication_ActiveWindow", ""]) as! QWidget }
public func QApplication_Alert(widget: QWidget_ITF? = nil, msec: Int) { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QApplication_Alert", "", widget as Any, msec as Any]) }
public func QApplication_AllWidgets() -> [QWidget] { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QApplication_AllWidgets", ""]) as! [QWidget] }
public func QApplication_Beep() { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QApplication_Beep", ""]) }
public func QApplication_CursorFlashTime() -> Int { Widgets.initModule(); return Int(callLocalFunction(l: ["", "", "widgets.QApplication_CursorFlashTime", ""]) as! Float) }
public func QApplication_Desktop() -> QDesktopWidget { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QApplication_Desktop", ""]) as! QDesktopWidget }
public func QApplication_DoubleClickInterval() -> Int { Widgets.initModule(); return Int(callLocalFunction(l: ["", "", "widgets.QApplication_DoubleClickInterval", ""]) as! Float) }
public func QApplication_Exec() -> Int { Widgets.initModule(); return Int(callLocalFunction(l: ["", "", "widgets.QApplication_Exec", ""]) as! Float) }
public func QApplication_FocusWidget() -> QWidget { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QApplication_FocusWidget", ""]) as! QWidget }
public func QApplication_Font() -> QFont { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QApplication_Font", ""]) as! QFont }
public func QApplication_Font2(widget: QWidget_ITF? = nil) -> QFont { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QApplication_Font2", "", widget as Any]) as! QFont }
public func QApplication_Font3(className: String) -> QFont { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QApplication_Font3", "", className as Any]) as! QFont }
public func QApplication_FontMetrics() -> QFontMetrics { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QApplication_FontMetrics", ""]) as! QFontMetrics }
public func QApplication_GlobalStrut() -> QSize { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QApplication_GlobalStrut", ""]) as! QSize }
public func QApplication_IsEffectEnabled(effect: Int) -> Bool { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QApplication_IsEffectEnabled", "", effect as Any]) as! Bool }
public func QApplication_KeyboardInputInterval() -> Int { Widgets.initModule(); return Int(callLocalFunction(l: ["", "", "widgets.QApplication_KeyboardInputInterval", ""]) as! Float) }
public func QApplication_NavigationMode() -> Int { Widgets.initModule(); return Int(callLocalFunction(l: ["", "", "widgets.QApplication_NavigationMode", ""]) as! Float) }
public func QApplication_Palette(widget: QWidget_ITF? = nil) -> QPalette { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QApplication_Palette", "", widget as Any]) as! QPalette }
public func QApplication_Palette2(className: String) -> QPalette { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QApplication_Palette2", "", className as Any]) as! QPalette }
public func QApplication_SetActiveWindow(active: QWidget_ITF? = nil) { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QApplication_SetActiveWindow", "", active as Any]) }
public func QApplication_SetCursorFlashTime(vi: Int) { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QApplication_SetCursorFlashTime", "", vi as Any]) }
public func QApplication_SetDoubleClickInterval(vi: Int) { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QApplication_SetDoubleClickInterval", "", vi as Any]) }
public func QApplication_SetEffectEnabled(effect: Int, enable: Bool) { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QApplication_SetEffectEnabled", "", effect as Any, enable as Any]) }
public func QApplication_SetFont(font: QFont_ITF? = nil, className: String) { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QApplication_SetFont", "", font as Any, className as Any]) }
public func QApplication_SetGlobalStrut(vqs: QSize_ITF? = nil) { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QApplication_SetGlobalStrut", "", vqs as Any]) }
public func QApplication_SetKeyboardInputInterval(vi: Int) { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QApplication_SetKeyboardInputInterval", "", vi as Any]) }
public func QApplication_SetNavigationMode(mode: Int) { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QApplication_SetNavigationMode", "", mode as Any]) }
public func QApplication_SetPalette(palette: QPalette_ITF? = nil, className: String) { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QApplication_SetPalette", "", palette as Any, className as Any]) }
public func QApplication_SetStartDragDistance(l: Int) { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QApplication_SetStartDragDistance", "", l as Any]) }
public func QApplication_SetStartDragTime(ms: Int) { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QApplication_SetStartDragTime", "", ms as Any]) }
public func QApplication_SetStyle(style: QStyle_ITF? = nil) { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QApplication_SetStyle", "", style as Any]) }
public func QApplication_SetStyle2(style: String) -> QStyle { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QApplication_SetStyle2", "", style as Any]) as! QStyle }
public func QApplication_SetWheelScrollLines(vi: Int) { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QApplication_SetWheelScrollLines", "", vi as Any]) }
public func QApplication_SetWindowIcon(icon: QIcon_ITF? = nil) { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QApplication_SetWindowIcon", "", icon as Any]) }
public func QApplication_StartDragDistance() -> Int { Widgets.initModule(); return Int(callLocalFunction(l: ["", "", "widgets.QApplication_StartDragDistance", ""]) as! Float) }
public func QApplication_StartDragTime() -> Int { Widgets.initModule(); return Int(callLocalFunction(l: ["", "", "widgets.QApplication_StartDragTime", ""]) as! Float) }
public func QApplication_Style() -> QStyle { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QApplication_Style", ""]) as! QStyle }
public func QApplication_TopLevelAt(point: QPoint_ITF? = nil) -> QWidget { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QApplication_TopLevelAt", "", point as Any]) as! QWidget }
public func QApplication_TopLevelAt2(x: Int, y: Int) -> QWidget { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QApplication_TopLevelAt2", "", x as Any, y as Any]) as! QWidget }
public func QApplication_TopLevelWidgets() -> [QWidget] { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QApplication_TopLevelWidgets", ""]) as! [QWidget] }
public func QApplication_WheelScrollLines() -> Int { Widgets.initModule(); return Int(callLocalFunction(l: ["", "", "widgets.QApplication_WheelScrollLines", ""]) as! Float) }
public func QApplication_WidgetAt(point: QPoint_ITF? = nil) -> QWidget { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QApplication_WidgetAt", "", point as Any]) as! QWidget }
public func QApplication_WidgetAt2(x: Int, y: Int) -> QWidget { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QApplication_WidgetAt2", "", x as Any, y as Any]) as! QWidget }
public func QApplication_WindowIcon() -> QIcon { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QApplication_WindowIcon", ""]) as! QIcon }
public protocol QBoxLayout_ITF: QLayout_ITF {
    func QBoxLayout_PTR() -> QBoxLayout
}

public class QBoxLayout: QLayout, QBoxLayout_ITF {
    public func QBoxLayout_PTR() -> QBoxLayout { callLocalFunction(l: ["", Pointer(), ___className, "QBoxLayout_PTR"]) as! QBoxLayout }
    override public func ConnectAddItem(f: @escaping (_ item: QLayoutItem) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectAddItem", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QLayoutItem) } as Any) }
    override public func DisconnectAddItem() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectAddItem"]) }
    override public func AddItem(item: QLayoutItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddItem", item as Any]) }
    public func AddItemDefault(item: QLayoutItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddItemDefault", item as Any]) }
    public func AddLayout(layout: QLayout_ITF? = nil, stretch: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddLayout", layout as Any, stretch as Any]) }
    public func AddSpacerItem(spacerItem: QSpacerItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddSpacerItem", spacerItem as Any]) }
    public func AddSpacing(size: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddSpacing", size as Any]) }
    public func AddStretch(stretch: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddStretch", stretch as Any]) }
    public func AddStrut(size: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddStrut", size as Any]) }
    public func AddWidget_QBoxLayout(widget: QWidget_ITF? = nil, stretch: Int, alignment: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddWidget", widget as Any, stretch as Any, alignment as Any]) }
    override public func ConnectCount(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCount", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectCount() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCount"]) }
    override public func Count() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Count"]) as! Float) }
    public func CountDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CountDefault"]) as! Float) }
    public func Direction() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Direction"]) as! Float) }
    public func InsertItem(index: Int, item: QLayoutItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertItem", index as Any, item as Any]) }
    public func InsertLayout(index: Int, layout: QLayout_ITF? = nil, stretch: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertLayout", index as Any, layout as Any, stretch as Any]) }
    public func InsertSpacerItem(index: Int, spacerItem: QSpacerItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertSpacerItem", index as Any, spacerItem as Any]) }
    public func InsertSpacing(index: Int, size: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertSpacing", index as Any, size as Any]) }
    public func InsertStretch(index: Int, stretch: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertStretch", index as Any, stretch as Any]) }
    public func InsertWidget(index: Int, widget: QWidget_ITF? = nil, stretch: Int, alignment: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertWidget", index as Any, widget as Any, stretch as Any, alignment as Any]) }
    override public func ConnectItemAt(f: @escaping (_ index: Int) -> QLayoutItem) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectItemAt", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    override public func DisconnectItemAt() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectItemAt"]) }
    override public func ItemAt(index: Int) -> QLayoutItem { callLocalFunction(l: ["", Pointer(), ___className, "ItemAt", index as Any]) as! QLayoutItem }
    public func ItemAtDefault(index: Int) -> QLayoutItem { callLocalFunction(l: ["", Pointer(), ___className, "ItemAtDefault", index as Any]) as! QLayoutItem }
    public func SetDirection(direction: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDirection", direction as Any]) }
    public func SetStretch(index: Int, stretch: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStretch", index as Any, stretch as Any]) }
    public func SetStretchFactor(widget: QWidget_ITF? = nil, stretch: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "SetStretchFactor", widget as Any, stretch as Any]) as! Bool }
    public func SetStretchFactor2(layout: QLayout_ITF? = nil, stretch: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "SetStretchFactor2", layout as Any, stretch as Any]) as! Bool }
    override public func ConnectSizeHint(f: @escaping () -> QSize) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSizeHint", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectSizeHint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSizeHint"]) }
    override public func SizeHint() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "SizeHint"]) as! QSize }
    override public func SizeHintDefault() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "SizeHintDefault"]) as! QSize }
    public func Stretch(index: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Stretch", index as Any]) as! Float) }
    override public func ConnectTakeAt(f: @escaping (_ index: Int) -> QLayoutItem) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTakeAt", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    override public func DisconnectTakeAt() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTakeAt"]) }
    override public func TakeAt(index: Int) -> QLayoutItem { callLocalFunction(l: ["", Pointer(), ___className, "TakeAt", index as Any]) as! QLayoutItem }
    public func TakeAtDefault(index: Int) -> QLayoutItem { callLocalFunction(l: ["", Pointer(), ___className, "TakeAtDefault", index as Any]) as! QLayoutItem }
    public func ConnectDestroyQBoxLayout(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQBoxLayout", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQBoxLayout() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQBoxLayout"]) }
    public func DestroyQBoxLayout() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQBoxLayout"]) }
    public func DestroyQBoxLayoutDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQBoxLayoutDefault"]) }
}

public func NewQBoxLayoutFromPointer(ptr: String) -> QBoxLayout { let r = QBoxLayout(); r.initFrom(p: ptr, n: "widgets.QBoxLayout"); return r }
public func NewQBoxLayout(dir: Int, parent: QWidget_ITF? = nil) -> QBoxLayout { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQBoxLayout", "", dir as Any, parent as Any]) as! QBoxLayout }
public protocol QButtonGroup_ITF: QObject_ITF {
    func QButtonGroup_PTR() -> QButtonGroup
}

public class QButtonGroup: QObject, QButtonGroup_ITF {
    public func QButtonGroup_PTR() -> QButtonGroup { callLocalFunction(l: ["", Pointer(), ___className, "QButtonGroup_PTR"]) as! QButtonGroup }
    public func AddButton(button: QAbstractButton_ITF? = nil, id: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddButton", button as Any, id as Any]) }
    public func Button(id: Int) -> QAbstractButton { callLocalFunction(l: ["", Pointer(), ___className, "Button", id as Any]) as! QAbstractButton }
    public func ConnectButtonClicked(f: @escaping (_ button: QAbstractButton) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectButtonClicked", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QAbstractButton) } as Any) }
    public func DisconnectButtonClicked() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectButtonClicked"]) }
    public func ButtonClicked(button: QAbstractButton_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ButtonClicked", button as Any]) }
    public func ConnectButtonClicked2(f: @escaping (_ id: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectButtonClicked2", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectButtonClicked2() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectButtonClicked2"]) }
    public func ButtonClicked2(id: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ButtonClicked2", id as Any]) }
    public func ConnectButtonPressed(f: @escaping (_ button: QAbstractButton) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectButtonPressed", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QAbstractButton) } as Any) }
    public func DisconnectButtonPressed() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectButtonPressed"]) }
    public func ButtonPressed(button: QAbstractButton_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ButtonPressed", button as Any]) }
    public func ConnectButtonPressed2(f: @escaping (_ id: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectButtonPressed2", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectButtonPressed2() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectButtonPressed2"]) }
    public func ButtonPressed2(id: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ButtonPressed2", id as Any]) }
    public func ConnectButtonReleased(f: @escaping (_ button: QAbstractButton) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectButtonReleased", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QAbstractButton) } as Any) }
    public func DisconnectButtonReleased() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectButtonReleased"]) }
    public func ButtonReleased(button: QAbstractButton_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ButtonReleased", button as Any]) }
    public func ConnectButtonReleased2(f: @escaping (_ id: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectButtonReleased2", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectButtonReleased2() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectButtonReleased2"]) }
    public func ButtonReleased2(id: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ButtonReleased2", id as Any]) }
    public func ConnectButtonToggled(f: @escaping (_ button: QAbstractButton, _ checked: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectButtonToggled", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QAbstractButton, inp[1] as! Bool) } as Any) }
    public func DisconnectButtonToggled() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectButtonToggled"]) }
    public func ButtonToggled(button: QAbstractButton_ITF? = nil, checked: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ButtonToggled", button as Any, checked as Any]) }
    public func ConnectButtonToggled2(f: @escaping (_ id: Int, _ checked: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectButtonToggled2", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! Bool) } as Any) }
    public func DisconnectButtonToggled2() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectButtonToggled2"]) }
    public func ButtonToggled2(id: Int, checked: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ButtonToggled2", id as Any, checked as Any]) }
    public func Buttons() -> [QAbstractButton] { callLocalFunction(l: ["", Pointer(), ___className, "Buttons"]) as! [QAbstractButton] }
    public func CheckedButton() -> QAbstractButton { callLocalFunction(l: ["", Pointer(), ___className, "CheckedButton"]) as! QAbstractButton }
    public func CheckedId() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CheckedId"]) as! Float) }
    public func Exclusive() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "Exclusive"]) as! Bool }
    public func Id(button: QAbstractButton_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Id", button as Any]) as! Float) }
    public func RemoveButton(button: QAbstractButton_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveButton", button as Any]) }
    public func SetExclusive(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetExclusive", vbo as Any]) }
    public func SetId(button: QAbstractButton_ITF? = nil, id: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetId", button as Any, id as Any]) }
    public func ConnectDestroyQButtonGroup(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQButtonGroup", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQButtonGroup() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQButtonGroup"]) }
    public func DestroyQButtonGroup() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQButtonGroup"]) }
    public func DestroyQButtonGroupDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQButtonGroupDefault"]) }
    override public func ChildEventDefault(event: QChildEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ChildEventDefault", event as Any]) }
    override public func ConnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ConnectNotifyDefault", sign as Any]) }
    override public func CustomEventDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CustomEventDefault", event as Any]) }
    override public func DeleteLaterDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DeleteLaterDefault"]) }
    override public func DisconnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DisconnectNotifyDefault", sign as Any]) }
    override public func EventDefault(e: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventDefault", e as Any]) as! Bool }
    override public func EventFilterDefault(watched: QObject_ITF? = nil, event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventFilterDefault", watched as Any, event as Any]) as! Bool }
    override public func MetaObjectDefault() -> QMetaObject { callLocalFunction(l: ["", Pointer(), ___className, "MetaObjectDefault"]) as! QMetaObject }
    override public func TimerEventDefault(event: QTimerEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TimerEventDefault", event as Any]) }
}

public func NewQButtonGroupFromPointer(ptr: String) -> QButtonGroup { let r = QButtonGroup(); r.initFrom(p: ptr, n: "widgets.QButtonGroup"); return r }
public func NewQButtonGroup(parent: QObject_ITF? = nil) -> QButtonGroup { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQButtonGroup", "", parent as Any]) as! QButtonGroup }
public protocol QCalendarWidget_ITF: QWidget_ITF {
    func QCalendarWidget_PTR() -> QCalendarWidget
}

public class QCalendarWidget: QWidget, QCalendarWidget_ITF {
    public func QCalendarWidget_PTR() -> QCalendarWidget { callLocalFunction(l: ["", Pointer(), ___className, "QCalendarWidget_PTR"]) as! QCalendarWidget }
    public func ConnectActivated(f: @escaping (_ date: QDate) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectActivated", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QDate) } as Any) }
    public func DisconnectActivated() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectActivated"]) }
    public func Activated(date: QDate_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Activated", date as Any]) }
    public func ConnectClicked(f: @escaping (_ date: QDate) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectClicked", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QDate) } as Any) }
    public func DisconnectClicked() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectClicked"]) }
    public func Clicked(date: QDate_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Clicked", date as Any]) }
    public func ConnectCurrentPageChanged(f: @escaping (_ year: Int, _ month: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCurrentPageChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float)) } as Any) }
    public func DisconnectCurrentPageChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCurrentPageChanged"]) }
    public func CurrentPageChanged(year: Int, month: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CurrentPageChanged", year as Any, month as Any]) }
    public func DateEditAcceptDelay() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "DateEditAcceptDelay"]) as! Float) }
    // TODO: public func DateTextFormat()->[QDate:QTextCharFormat]{ return callLocalFunction(l:["",Pointer(),___className,"DateTextFormat"]) as! [QDate:QTextCharFormat]; };
    public func DateTextFormat2(date: QDate_ITF? = nil) -> QTextCharFormat { callLocalFunction(l: ["", Pointer(), ___className, "DateTextFormat2", date as Any]) as! QTextCharFormat }
    public func FirstDayOfWeek() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "FirstDayOfWeek"]) as! Float) }
    public func HeaderTextFormat() -> QTextCharFormat { callLocalFunction(l: ["", Pointer(), ___className, "HeaderTextFormat"]) as! QTextCharFormat }
    public func HorizontalHeaderFormat() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "HorizontalHeaderFormat"]) as! Float) }
    public func IsDateEditEnabled() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsDateEditEnabled"]) as! Bool }
    public func IsGridVisible() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsGridVisible"]) as! Bool }
    public func IsNavigationBarVisible() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsNavigationBarVisible"]) as! Bool }
    public func MaximumDate() -> QDate { callLocalFunction(l: ["", Pointer(), ___className, "MaximumDate"]) as! QDate }
    public func MinimumDate() -> QDate { callLocalFunction(l: ["", Pointer(), ___className, "MinimumDate"]) as! QDate }
    public func MonthShown() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "MonthShown"]) as! Float) }
    public func ConnectPaintCell(f: @escaping (_ painter: QPainter, _ rect: QRect, _ date: QDate) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPaintCell", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainter, inp[1] as! QRect, inp[2] as! QDate) } as Any) }
    public func DisconnectPaintCell() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPaintCell"]) }
    public func PaintCell(painter: QPainter_ITF? = nil, rect: QRect_ITF? = nil, date: QDate_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "PaintCell", painter as Any, rect as Any, date as Any]) }
    public func PaintCellDefault(painter: QPainter_ITF? = nil, rect: QRect_ITF? = nil, date: QDate_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "PaintCellDefault", painter as Any, rect as Any, date as Any]) }
    public func SelectedDate() -> QDate { callLocalFunction(l: ["", Pointer(), ___className, "SelectedDate"]) as! QDate }
    public func ConnectSelectionChanged(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSelectionChanged", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectSelectionChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSelectionChanged"]) }
    public func SelectionChanged() { _ = callLocalFunction(l: ["", Pointer(), ___className, "SelectionChanged"]) }
    public func SelectionMode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SelectionMode"]) as! Float) }
    public func ConnectSetCurrentPage(f: @escaping (_ year: Int, _ month: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetCurrentPage", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float)) } as Any) }
    public func DisconnectSetCurrentPage() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetCurrentPage"]) }
    public func SetCurrentPage(year: Int, month: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentPage", year as Any, month as Any]) }
    public func SetCurrentPageDefault(year: Int, month: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentPageDefault", year as Any, month as Any]) }
    public func SetDateEditAcceptDelay(delay: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDateEditAcceptDelay", delay as Any]) }
    public func SetDateEditEnabled(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDateEditEnabled", enable as Any]) }
    public func ConnectSetDateRange(f: @escaping (_ mi: QDate, _ max: QDate) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetDateRange", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QDate, inp[1] as! QDate) } as Any) }
    public func DisconnectSetDateRange() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetDateRange"]) }
    public func SetDateRange(mi: QDate_ITF? = nil, max: QDate_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDateRange", mi as Any, max as Any]) }
    public func SetDateRangeDefault(mi: QDate_ITF? = nil, max: QDate_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDateRangeDefault", mi as Any, max as Any]) }
    public func SetDateTextFormat(date: QDate_ITF? = nil, format: QTextCharFormat_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDateTextFormat", date as Any, format as Any]) }
    public func SetFirstDayOfWeek(dayOfWeek: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFirstDayOfWeek", dayOfWeek as Any]) }
    public func ConnectSetGridVisible(f: @escaping (_ show: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetGridVisible", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectSetGridVisible() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetGridVisible"]) }
    public func SetGridVisible(show: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetGridVisible", show as Any]) }
    public func SetGridVisibleDefault(show: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetGridVisibleDefault", show as Any]) }
    public func SetHeaderTextFormat(format: QTextCharFormat_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetHeaderTextFormat", format as Any]) }
    public func SetHorizontalHeaderFormat(format: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetHorizontalHeaderFormat", format as Any]) }
    public func SetMaximumDate(date: QDate_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMaximumDate", date as Any]) }
    public func SetMinimumDate(date: QDate_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMinimumDate", date as Any]) }
    public func ConnectSetNavigationBarVisible(f: @escaping (_ visible: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetNavigationBarVisible", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectSetNavigationBarVisible() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetNavigationBarVisible"]) }
    public func SetNavigationBarVisible(visible: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetNavigationBarVisible", visible as Any]) }
    public func SetNavigationBarVisibleDefault(visible: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetNavigationBarVisibleDefault", visible as Any]) }
    public func ConnectSetSelectedDate(f: @escaping (_ date: QDate) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetSelectedDate", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QDate) } as Any) }
    public func DisconnectSetSelectedDate() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetSelectedDate"]) }
    public func SetSelectedDate(date: QDate_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSelectedDate", date as Any]) }
    public func SetSelectedDateDefault(date: QDate_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSelectedDateDefault", date as Any]) }
    public func SetSelectionMode(mode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSelectionMode", mode as Any]) }
    public func SetVerticalHeaderFormat(format: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetVerticalHeaderFormat", format as Any]) }
    public func SetWeekdayTextFormat(dayOfWeek: Int, format: QTextCharFormat_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWeekdayTextFormat", dayOfWeek as Any, format as Any]) }
    public func ConnectShowNextMonth(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectShowNextMonth", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectShowNextMonth() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectShowNextMonth"]) }
    public func ShowNextMonth() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowNextMonth"]) }
    public func ShowNextMonthDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowNextMonthDefault"]) }
    public func ConnectShowNextYear(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectShowNextYear", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectShowNextYear() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectShowNextYear"]) }
    public func ShowNextYear() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowNextYear"]) }
    public func ShowNextYearDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowNextYearDefault"]) }
    public func ConnectShowPreviousMonth(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectShowPreviousMonth", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectShowPreviousMonth() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectShowPreviousMonth"]) }
    public func ShowPreviousMonth() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowPreviousMonth"]) }
    public func ShowPreviousMonthDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowPreviousMonthDefault"]) }
    public func ConnectShowPreviousYear(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectShowPreviousYear", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectShowPreviousYear() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectShowPreviousYear"]) }
    public func ShowPreviousYear() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowPreviousYear"]) }
    public func ShowPreviousYearDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowPreviousYearDefault"]) }
    public func ConnectShowSelectedDate(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectShowSelectedDate", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectShowSelectedDate() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectShowSelectedDate"]) }
    public func ShowSelectedDate() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowSelectedDate"]) }
    public func ShowSelectedDateDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowSelectedDateDefault"]) }
    public func ConnectShowToday(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectShowToday", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectShowToday() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectShowToday"]) }
    public func ShowToday() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowToday"]) }
    public func ShowTodayDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowTodayDefault"]) }
    public func UpdateCell(date: QDate_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "UpdateCell", date as Any]) }
    public func UpdateCells() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UpdateCells"]) }
    public func VerticalHeaderFormat() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "VerticalHeaderFormat"]) as! Float) }
    public func WeekdayTextFormat(dayOfWeek: Int) -> QTextCharFormat { callLocalFunction(l: ["", Pointer(), ___className, "WeekdayTextFormat", dayOfWeek as Any]) as! QTextCharFormat }
    public func YearShown() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "YearShown"]) as! Float) }
    public func ConnectDestroyQCalendarWidget(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQCalendarWidget", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQCalendarWidget() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQCalendarWidget"]) }
    public func DestroyQCalendarWidget() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQCalendarWidget"]) }
    public func DestroyQCalendarWidgetDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQCalendarWidgetDefault"]) }
}

public func NewQCalendarWidgetFromPointer(ptr: String) -> QCalendarWidget { let r = QCalendarWidget(); r.initFrom(p: ptr, n: "widgets.QCalendarWidget"); return r }
public func NewQCalendarWidget(parent: QWidget_ITF? = nil) -> QCalendarWidget { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQCalendarWidget", "", parent as Any]) as! QCalendarWidget }
public protocol QCheckBox_ITF: QAbstractButton_ITF {
    func QCheckBox_PTR() -> QCheckBox
}

public class QCheckBox: QAbstractButton, QCheckBox_ITF {
    public func QCheckBox_PTR() -> QCheckBox { callLocalFunction(l: ["", Pointer(), ___className, "QCheckBox_PTR"]) as! QCheckBox }
    public func CheckState() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CheckState"]) as! Float) }
    public func InitStyleOption(option: QStyleOptionButton_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InitStyleOption", option as Any]) }
    public func IsTristate() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsTristate"]) as! Bool }
    override public func ConnectPaintEvent(f: @escaping (_ vqp: QPaintEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPaintEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPaintEvent) } as Any) }
    override public func DisconnectPaintEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPaintEvent"]) }
    override public func PaintEvent(event: QPaintEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "PaintEvent", event as Any]) }
    public func PaintEventDefault(vqp: QPaintEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "PaintEventDefault", vqp as Any]) }
    public func SetCheckState(state: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCheckState", state as Any]) }
    public func SetTristate(y: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTristate", y as Any]) }
    public func ConnectStateChanged(f: @escaping (_ state: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectStateChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectStateChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectStateChanged"]) }
    public func StateChanged(state: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "StateChanged", state as Any]) }
    public func ConnectDestroyQCheckBox(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQCheckBox", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQCheckBox() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQCheckBox"]) }
    public func DestroyQCheckBox() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQCheckBox"]) }
    public func DestroyQCheckBoxDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQCheckBoxDefault"]) }
}

public func NewQCheckBoxFromPointer(ptr: String) -> QCheckBox { let r = QCheckBox(); r.initFrom(p: ptr, n: "widgets.QCheckBox"); return r }
public func NewQCheckBox(parent: QWidget_ITF? = nil) -> QCheckBox { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQCheckBox", "", parent as Any]) as! QCheckBox }
public func NewQCheckBox2(text: String, parent: QWidget_ITF? = nil) -> QCheckBox { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQCheckBox2", "", text as Any, parent as Any]) as! QCheckBox }
public protocol QColorDialog_ITF: QDialog_ITF {
    func QColorDialog_PTR() -> QColorDialog
}

public class QColorDialog: QDialog, QColorDialog_ITF {
    public func QColorDialog_PTR() -> QColorDialog { callLocalFunction(l: ["", Pointer(), ___className, "QColorDialog_PTR"]) as! QColorDialog }
    public func ConnectColorSelected(f: @escaping (_ color: QColor) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectColorSelected", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QColor) } as Any) }
    public func DisconnectColorSelected() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectColorSelected"]) }
    public func ColorSelected(color: QColor_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ColorSelected", color as Any]) }
    public func CurrentColor() -> QColor { callLocalFunction(l: ["", Pointer(), ___className, "CurrentColor"]) as! QColor }
    public func ConnectCurrentColorChanged(f: @escaping (_ color: QColor) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCurrentColorChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QColor) } as Any) }
    public func DisconnectCurrentColorChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCurrentColorChanged"]) }
    public func CurrentColorChanged(color: QColor_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CurrentColorChanged", color as Any]) }
    public func CustomColor(index: Int) -> QColor { callLocalFunction(l: ["", Pointer(), ___className, "CustomColor", index as Any]) as! QColor }
    public func CustomCount() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CustomCount"]) as! Float) }
    override public func ConnectDone(f: @escaping (_ result: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDone", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    override public func DisconnectDone() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDone"]) }
    override public func Done(r: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Done", r as Any]) }
    override public func DoneDefault(r: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DoneDefault", r as Any]) }
    public func GetColor(initial: QColor_ITF? = nil, parent: QWidget_ITF? = nil, title: String, options: Int) -> QColor { callLocalFunction(l: ["", Pointer(), ___className, "GetColor", initial as Any, parent as Any, title as Any, options as Any]) as! QColor }
    public func Open_QColorDialog(receiver: QObject_ITF? = nil, member: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Open", receiver as Any, member as Any]) }
    public func Options() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Options"]) as! Float) }
    public func SelectedColor() -> QColor { callLocalFunction(l: ["", Pointer(), ___className, "SelectedColor"]) as! QColor }
    public func SetCurrentColor(color: QColor_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentColor", color as Any]) }
    public func SetCustomColor(index: Int, color: QColor_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCustomColor", index as Any, color as Any]) }
    public func SetOption(option: Int, on: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOption", option as Any, on as Any]) }
    public func SetOptions(options: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOptions", options as Any]) }
    public func SetStandardColor(index: Int, color: QColor_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStandardColor", index as Any, color as Any]) }
    public func StandardColor(index: Int) -> QColor { callLocalFunction(l: ["", Pointer(), ___className, "StandardColor", index as Any]) as! QColor }
    public func TestOption(option: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "TestOption", option as Any]) as! Bool }
    public func ConnectDestroyQColorDialog(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQColorDialog", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQColorDialog() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQColorDialog"]) }
    public func DestroyQColorDialog() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQColorDialog"]) }
    public func DestroyQColorDialogDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQColorDialogDefault"]) }
}

public func NewQColorDialogFromPointer(ptr: String) -> QColorDialog { let r = QColorDialog(); r.initFrom(p: ptr, n: "widgets.QColorDialog"); return r }
public func NewQColorDialog(parent: QWidget_ITF? = nil) -> QColorDialog { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQColorDialog", "", parent as Any]) as! QColorDialog }
public func NewQColorDialog2(initial: QColor_ITF? = nil, parent: QWidget_ITF? = nil) -> QColorDialog { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQColorDialog2", "", initial as Any, parent as Any]) as! QColorDialog }
public func QColorDialog_CustomColor(index: Int) -> QColor { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QColorDialog_CustomColor", "", index as Any]) as! QColor }
public func QColorDialog_CustomCount() -> Int { Widgets.initModule(); return Int(callLocalFunction(l: ["", "", "widgets.QColorDialog_CustomCount", ""]) as! Float) }
public func QColorDialog_GetColor(initial: QColor_ITF? = nil, parent: QWidget_ITF? = nil, title: String, options: Int) -> QColor { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QColorDialog_GetColor", "", initial as Any, parent as Any, title as Any, options as Any]) as! QColor }
public func QColorDialog_SetCustomColor(index: Int, color: QColor_ITF? = nil) { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QColorDialog_SetCustomColor", "", index as Any, color as Any]) }
public func QColorDialog_SetStandardColor(index: Int, color: QColor_ITF? = nil) { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QColorDialog_SetStandardColor", "", index as Any, color as Any]) }
public func QColorDialog_StandardColor(index: Int) -> QColor { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QColorDialog_StandardColor", "", index as Any]) as! QColor }
public protocol QColormap_ITF {
    func QColormap_PTR() -> QColormap
}

public class QColormap: Internal, QColormap_ITF {
    public func QColormap_PTR() -> QColormap { callLocalFunction(l: ["", Pointer(), ___className, "QColormap_PTR"]) as! QColormap }
    public func ColorAt(pixel: Int) -> QColor { callLocalFunction(l: ["", Pointer(), ___className, "ColorAt", pixel as Any]) as! QColor }
    public func Colormap() -> [QColor] { callLocalFunction(l: ["", Pointer(), ___className, "Colormap"]) as! [QColor] }
    public func Depth() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Depth"]) as! Float) }
    public func Instance(screen: Int) -> QColormap { callLocalFunction(l: ["", Pointer(), ___className, "Instance", screen as Any]) as! QColormap }
    public func Mode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Mode"]) as! Float) }
    public func Pixel(color: QColor_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Pixel", color as Any]) as! Float) }
    public func Size() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Size"]) as! Float) }
    public func DestroyQColormap() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQColormap"]) }
}

public func NewQColormapFromPointer(ptr: String) -> QColormap { let r = QColormap(); r.initFrom(p: ptr, n: "widgets.QColormap"); return r }
public func NewQColormap(colormap: QColormap_ITF? = nil) -> QColormap { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQColormap", "", colormap as Any]) as! QColormap }
public func QColormap_Instance(screen: Int) -> QColormap { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QColormap_Instance", "", screen as Any]) as! QColormap }
public protocol QColumnView_ITF: QAbstractItemView_ITF {
    func QColumnView_PTR() -> QColumnView
}

public class QColumnView: QAbstractItemView, QColumnView_ITF {
    public func QColumnView_PTR() -> QColumnView { callLocalFunction(l: ["", Pointer(), ___className, "QColumnView_PTR"]) as! QColumnView }
    public func ColumnWidths() -> [Int] { callLocalFunction(l: ["", Pointer(), ___className, "ColumnWidths"]) as! [Int] }
    public func ConnectCreateColumn(f: @escaping (_ index: QModelIndex) -> QAbstractItemView) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCreateColumn", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    public func DisconnectCreateColumn() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCreateColumn"]) }
    public func CreateColumn(index: QModelIndex_ITF? = nil) -> QAbstractItemView { callLocalFunction(l: ["", Pointer(), ___className, "CreateColumn", index as Any]) as! QAbstractItemView }
    public func CreateColumnDefault(index: QModelIndex_ITF? = nil) -> QAbstractItemView { callLocalFunction(l: ["", Pointer(), ___className, "CreateColumnDefault", index as Any]) as! QAbstractItemView }
    override public func ConnectCurrentChanged(f: @escaping (_ current: QModelIndex, _ previous: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCurrentChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex, inp[1] as! QModelIndex) } as Any) }
    override public func DisconnectCurrentChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCurrentChanged"]) }
    override public func CurrentChanged(current: QModelIndex_ITF? = nil, previous: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CurrentChanged", current as Any, previous as Any]) }
    override public func CurrentChangedDefault(current: QModelIndex_ITF? = nil, previous: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CurrentChangedDefault", current as Any, previous as Any]) }
    override public func ConnectHorizontalOffset(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHorizontalOffset", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectHorizontalOffset() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHorizontalOffset"]) }
    override public func HorizontalOffset() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "HorizontalOffset"]) as! Float) }
    public func HorizontalOffsetDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "HorizontalOffsetDefault"]) as! Float) }
    override public func ConnectIndexAt(f: @escaping (_ point: QPoint) -> QModelIndex) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectIndexAt", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPoint) } as Any) }
    override public func DisconnectIndexAt() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectIndexAt"]) }
    override public func IndexAt(point: QPoint_ITF? = nil) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "IndexAt", point as Any]) as! QModelIndex }
    public func IndexAtDefault(point: QPoint_ITF? = nil) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "IndexAtDefault", point as Any]) as! QModelIndex }
    public func InitializeColumn(column: QAbstractItemView_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InitializeColumn", column as Any]) }
    override public func ConnectIsIndexHidden(f: @escaping (_ index: QModelIndex) -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectIsIndexHidden", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    override public func DisconnectIsIndexHidden() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectIsIndexHidden"]) }
    override public func IsIndexHidden(index: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsIndexHidden", index as Any]) as! Bool }
    public func IsIndexHiddenDefault(index: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsIndexHiddenDefault", index as Any]) as! Bool }
    override public func ConnectMoveCursor(f: @escaping (_ cursorAction: Int, _ modifiers: Int) -> QModelIndex) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMoveCursor", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float)) } as Any) }
    override public func DisconnectMoveCursor() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMoveCursor"]) }
    override public func MoveCursor(cursorAction: Int, modifiers: Int) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "MoveCursor", cursorAction as Any, modifiers as Any]) as! QModelIndex }
    public func MoveCursorDefault(cursorAction: Int, modifiers: Int) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "MoveCursorDefault", cursorAction as Any, modifiers as Any]) as! QModelIndex }
    public func PreviewWidget() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "PreviewWidget"]) as! QWidget }
    public func ResizeGripsVisible() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "ResizeGripsVisible"]) as! Bool }
    override public func ConnectRowsInserted(f: @escaping (_ parent: QModelIndex, _ start: Int, _ end: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRowsInserted", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex, Int(inp[1] as! Float), Int(inp[2] as! Float)) } as Any) }
    override public func DisconnectRowsInserted() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRowsInserted"]) }
    override public func RowsInserted(parent: QModelIndex_ITF? = nil, start: Int, end: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RowsInserted", parent as Any, start as Any, end as Any]) }
    override public func RowsInsertedDefault(parent: QModelIndex_ITF? = nil, start: Int, end: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RowsInsertedDefault", parent as Any, start as Any, end as Any]) }
    override public func ConnectScrollTo(f: @escaping (_ index: QModelIndex, _ hint: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectScrollTo", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex, Int(inp[1] as! Float)) } as Any) }
    override public func DisconnectScrollTo() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectScrollTo"]) }
    override public func ScrollTo(index: QModelIndex_ITF? = nil, hint: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ScrollTo", index as Any, hint as Any]) }
    public func ScrollToDefault(index: QModelIndex_ITF? = nil, hint: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ScrollToDefault", index as Any, hint as Any]) }
    override public func ConnectSelectAll(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSelectAll", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectSelectAll() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSelectAll"]) }
    override public func SelectAll() { _ = callLocalFunction(l: ["", Pointer(), ___className, "SelectAll"]) }
    override public func SelectAllDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "SelectAllDefault"]) }
    public func SetColumnWidths(list: [Int]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetColumnWidths", list as Any]) }
    public func SetPreviewWidget(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPreviewWidget", widget as Any]) }
    public func SetResizeGripsVisible(visible: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetResizeGripsVisible", visible as Any]) }
    override public func ConnectSetRootIndex(f: @escaping (_ index: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetRootIndex", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    override public func DisconnectSetRootIndex() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetRootIndex"]) }
    override public func SetRootIndex(index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRootIndex", index as Any]) }
    override public func SetRootIndexDefault(index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRootIndexDefault", index as Any]) }
    override public func ConnectSetSelection(f: @escaping (_ rect: QRect, _ command: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetSelection", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QRect, Int(inp[1] as! Float)) } as Any) }
    override public func DisconnectSetSelection() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetSelection"]) }
    override public func SetSelection(rect: QRect_ITF? = nil, flags: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSelection", rect as Any, flags as Any]) }
    public func SetSelectionDefault(rect: QRect_ITF? = nil, command: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSelectionDefault", rect as Any, command as Any]) }
    public func ConnectUpdatePreviewWidget(f: @escaping (_ index: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectUpdatePreviewWidget", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    public func DisconnectUpdatePreviewWidget() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectUpdatePreviewWidget"]) }
    public func UpdatePreviewWidget(index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "UpdatePreviewWidget", index as Any]) }
    override public func ConnectVerticalOffset(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectVerticalOffset", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectVerticalOffset() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectVerticalOffset"]) }
    override public func VerticalOffset() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "VerticalOffset"]) as! Float) }
    public func VerticalOffsetDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "VerticalOffsetDefault"]) as! Float) }
    override public func ConnectVisualRect(f: @escaping (_ index: QModelIndex) -> QRect) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectVisualRect", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    override public func DisconnectVisualRect() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectVisualRect"]) }
    override public func VisualRect(index: QModelIndex_ITF? = nil) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "VisualRect", index as Any]) as! QRect }
    public func VisualRectDefault(index: QModelIndex_ITF? = nil) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "VisualRectDefault", index as Any]) as! QRect }
    override public func ConnectVisualRegionForSelection(f: @escaping (_ selection: QItemSelection) -> QRegion) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectVisualRegionForSelection", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QItemSelection) } as Any) }
    override public func DisconnectVisualRegionForSelection() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectVisualRegionForSelection"]) }
    override public func VisualRegionForSelection(selection: QItemSelection_ITF? = nil) -> QRegion { callLocalFunction(l: ["", Pointer(), ___className, "VisualRegionForSelection", selection as Any]) as! QRegion }
    public func VisualRegionForSelectionDefault(selection: QItemSelection_ITF? = nil) -> QRegion { callLocalFunction(l: ["", Pointer(), ___className, "VisualRegionForSelectionDefault", selection as Any]) as! QRegion }
    public func ConnectDestroyQColumnView(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQColumnView", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQColumnView() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQColumnView"]) }
    public func DestroyQColumnView() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQColumnView"]) }
    public func DestroyQColumnViewDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQColumnViewDefault"]) }
}

public func NewQColumnViewFromPointer(ptr: String) -> QColumnView { let r = QColumnView(); r.initFrom(p: ptr, n: "widgets.QColumnView"); return r }
public func NewQColumnView(parent: QWidget_ITF? = nil) -> QColumnView { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQColumnView", "", parent as Any]) as! QColumnView }
public protocol QComboBox_ITF: QWidget_ITF {
    func QComboBox_PTR() -> QComboBox
}

public class QComboBox: QWidget, QComboBox_ITF {
    public func QComboBox_PTR() -> QComboBox { callLocalFunction(l: ["", Pointer(), ___className, "QComboBox_PTR"]) as! QComboBox }
    public func ConnectActivated(f: @escaping (_ index: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectActivated", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectActivated() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectActivated"]) }
    public func Activated(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Activated", index as Any]) }
    public func ConnectActivated2(f: @escaping (_ text: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectActivated2", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectActivated2() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectActivated2"]) }
    public func Activated2(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Activated2", text as Any]) }
    public func AddItem(text: String, userData: QVariant_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddItem", text as Any, userData as Any]) }
    public func AddItem2(icon: QIcon_ITF? = nil, text: String, userData: QVariant_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddItem2", icon as Any, text as Any, userData as Any]) }
    public func AddItems(texts: [String]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddItems", texts as Any]) }
    public func ConnectClear(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectClear", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectClear() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectClear"]) }
    public func Clear() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Clear"]) }
    public func ClearDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearDefault"]) }
    public func ConnectClearEditText(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectClearEditText", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectClearEditText() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectClearEditText"]) }
    public func ClearEditText() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearEditText"]) }
    public func ClearEditTextDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearEditTextDefault"]) }
    public func Completer() -> QCompleter { callLocalFunction(l: ["", Pointer(), ___className, "Completer"]) as! QCompleter }
    public func Count() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Count"]) as! Float) }
    public func CurrentData(role: Int) -> QVariant { callLocalFunction(l: ["", Pointer(), ___className, "CurrentData", role as Any]) as! QVariant }
    public func CurrentIndex() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CurrentIndex"]) as! Float) }
    public func ConnectCurrentIndexChanged(f: @escaping (_ index: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCurrentIndexChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectCurrentIndexChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCurrentIndexChanged"]) }
    public func CurrentIndexChanged(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CurrentIndexChanged", index as Any]) }
    public func CurrentText() -> String { callLocalFunction(l: ["", Pointer(), ___className, "CurrentText"]) as! String }
    public func ConnectCurrentTextChanged(f: @escaping (_ text: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCurrentTextChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectCurrentTextChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCurrentTextChanged"]) }
    public func CurrentTextChanged(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CurrentTextChanged", text as Any]) }
    public func DuplicatesEnabled() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "DuplicatesEnabled"]) as! Bool }
    public func ConnectEditTextChanged(f: @escaping (_ text: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectEditTextChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectEditTextChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectEditTextChanged"]) }
    public func EditTextChanged(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "EditTextChanged", text as Any]) }
    public func FindData(data: QVariant_ITF? = nil, role: Int, flags: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "FindData", data as Any, role as Any, flags as Any]) as! Float) }
    public func FindText(text: String, flags: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "FindText", text as Any, flags as Any]) as! Float) }
    public func HasFrame() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "HasFrame"]) as! Bool }
    public func ConnectHidePopup(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHidePopup", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectHidePopup() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHidePopup"]) }
    public func HidePopup() { _ = callLocalFunction(l: ["", Pointer(), ___className, "HidePopup"]) }
    public func HidePopupDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "HidePopupDefault"]) }
    public func ConnectHighlighted(f: @escaping (_ index: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHighlighted", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectHighlighted() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHighlighted"]) }
    public func Highlighted(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Highlighted", index as Any]) }
    public func ConnectHighlighted2(f: @escaping (_ text: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHighlighted2", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectHighlighted2() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHighlighted2"]) }
    public func Highlighted2(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Highlighted2", text as Any]) }
    public func IconSize() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "IconSize"]) as! QSize }
    public func InitStyleOption(option: QStyleOptionComboBox_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InitStyleOption", option as Any]) }
    public func InsertItem(index: Int, text: String, userData: QVariant_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertItem", index as Any, text as Any, userData as Any]) }
    public func InsertItem2(index: Int, icon: QIcon_ITF? = nil, text: String, userData: QVariant_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertItem2", index as Any, icon as Any, text as Any, userData as Any]) }
    public func InsertItems(index: Int, list: [String]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertItems", index as Any, list as Any]) }
    public func InsertPolicy() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "InsertPolicy"]) as! Float) }
    public func InsertSeparator(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertSeparator", index as Any]) }
    public func IsEditable() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsEditable"]) as! Bool }
    public func ItemData(index: Int, role: Int) -> QVariant { callLocalFunction(l: ["", Pointer(), ___className, "ItemData", index as Any, role as Any]) as! QVariant }
    public func ItemDelegate() -> QAbstractItemDelegate { callLocalFunction(l: ["", Pointer(), ___className, "ItemDelegate"]) as! QAbstractItemDelegate }
    public func ItemIcon(index: Int) -> QIcon { callLocalFunction(l: ["", Pointer(), ___className, "ItemIcon", index as Any]) as! QIcon }
    public func ItemText(index: Int) -> String { callLocalFunction(l: ["", Pointer(), ___className, "ItemText", index as Any]) as! String }
    public func LineEdit() -> QLineEdit { callLocalFunction(l: ["", Pointer(), ___className, "LineEdit"]) as! QLineEdit }
    public func MaxCount() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "MaxCount"]) as! Float) }
    public func MaxVisibleItems() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "MaxVisibleItems"]) as! Float) }
    public func MinimumContentsLength() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "MinimumContentsLength"]) as! Float) }
    public func Model() -> QAbstractItemModel { callLocalFunction(l: ["", Pointer(), ___className, "Model"]) as! QAbstractItemModel }
    public func ModelColumn() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ModelColumn"]) as! Float) }
    public func RemoveItem(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveItem", index as Any]) }
    public func RootModelIndex() -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "RootModelIndex"]) as! QModelIndex }
    public func SetCompleter(completer: QCompleter_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCompleter", completer as Any]) }
    public func ConnectSetCurrentIndex(f: @escaping (_ index: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetCurrentIndex", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSetCurrentIndex() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetCurrentIndex"]) }
    public func SetCurrentIndex(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentIndex", index as Any]) }
    public func SetCurrentIndexDefault(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentIndexDefault", index as Any]) }
    public func ConnectSetCurrentText(f: @escaping (_ text: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetCurrentText", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectSetCurrentText() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetCurrentText"]) }
    public func SetCurrentText(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentText", text as Any]) }
    public func SetCurrentTextDefault(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentTextDefault", text as Any]) }
    public func SetDuplicatesEnabled(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDuplicatesEnabled", enable as Any]) }
    public func ConnectSetEditText(f: @escaping (_ text: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetEditText", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectSetEditText() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetEditText"]) }
    public func SetEditText(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetEditText", text as Any]) }
    public func SetEditTextDefault(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetEditTextDefault", text as Any]) }
    public func SetEditable(editable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetEditable", editable as Any]) }
    public func SetFrame(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFrame", vbo as Any]) }
    public func SetIconSize(size: QSize_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIconSize", size as Any]) }
    public func SetInsertPolicy(policy: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetInsertPolicy", policy as Any]) }
    public func SetItemData(index: Int, value: QVariant_ITF? = nil, role: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetItemData", index as Any, value as Any, role as Any]) }
    public func SetItemDelegate(delegate: QAbstractItemDelegate_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetItemDelegate", delegate as Any]) }
    public func SetItemIcon(index: Int, icon: QIcon_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetItemIcon", index as Any, icon as Any]) }
    public func SetItemText(index: Int, text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetItemText", index as Any, text as Any]) }
    public func SetLineEdit(edit: QLineEdit_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetLineEdit", edit as Any]) }
    public func SetMaxCount(max: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMaxCount", max as Any]) }
    public func SetMaxVisibleItems(maxItems: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMaxVisibleItems", maxItems as Any]) }
    public func SetMinimumContentsLength(characters: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMinimumContentsLength", characters as Any]) }
    public func SetModel(model: QAbstractItemModel_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetModel", model as Any]) }
    public func SetModelColumn(visibleColumn: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetModelColumn", visibleColumn as Any]) }
    public func SetRootModelIndex(index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRootModelIndex", index as Any]) }
    public func SetSizeAdjustPolicy(policy: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSizeAdjustPolicy", policy as Any]) }
    public func SetValidator(validator: QValidator_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetValidator", validator as Any]) }
    public func SetView(itemView: QAbstractItemView_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetView", itemView as Any]) }
    public func ConnectShowPopup(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectShowPopup", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectShowPopup() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectShowPopup"]) }
    public func ShowPopup() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowPopup"]) }
    public func ShowPopupDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowPopupDefault"]) }
    public func SizeAdjustPolicy() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SizeAdjustPolicy"]) as! Float) }
    public func Validator() -> QValidator { callLocalFunction(l: ["", Pointer(), ___className, "Validator"]) as! QValidator }
    public func View() -> QAbstractItemView { callLocalFunction(l: ["", Pointer(), ___className, "View"]) as! QAbstractItemView }
    public func ConnectDestroyQComboBox(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQComboBox", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQComboBox() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQComboBox"]) }
    public func DestroyQComboBox() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQComboBox"]) }
    public func DestroyQComboBoxDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQComboBoxDefault"]) }
}

public func NewQComboBoxFromPointer(ptr: String) -> QComboBox { let r = QComboBox(); r.initFrom(p: ptr, n: "widgets.QComboBox"); return r }
public func NewQComboBox(parent: QWidget_ITF? = nil) -> QComboBox { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQComboBox", "", parent as Any]) as! QComboBox }
public protocol QCommandLinkButton_ITF: QPushButton_ITF {
    func QCommandLinkButton_PTR() -> QCommandLinkButton
}

public class QCommandLinkButton: QPushButton, QCommandLinkButton_ITF {
    public func QCommandLinkButton_PTR() -> QCommandLinkButton { callLocalFunction(l: ["", Pointer(), ___className, "QCommandLinkButton_PTR"]) as! QCommandLinkButton }
    public func Description() -> String { callLocalFunction(l: ["", Pointer(), ___className, "Description"]) as! String }
    public func SetDescription(description: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDescription", description as Any]) }
    public func ConnectDestroyQCommandLinkButton(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQCommandLinkButton", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQCommandLinkButton() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQCommandLinkButton"]) }
    public func DestroyQCommandLinkButton() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQCommandLinkButton"]) }
    public func DestroyQCommandLinkButtonDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQCommandLinkButtonDefault"]) }
}

public func NewQCommandLinkButtonFromPointer(ptr: String) -> QCommandLinkButton { let r = QCommandLinkButton(); r.initFrom(p: ptr, n: "widgets.QCommandLinkButton"); return r }
public func NewQCommandLinkButton(parent: QWidget_ITF? = nil) -> QCommandLinkButton { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQCommandLinkButton", "", parent as Any]) as! QCommandLinkButton }
public func NewQCommandLinkButton2(text: String, parent: QWidget_ITF? = nil) -> QCommandLinkButton { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQCommandLinkButton2", "", text as Any, parent as Any]) as! QCommandLinkButton }
public func NewQCommandLinkButton3(text: String, description: String, parent: QWidget_ITF? = nil) -> QCommandLinkButton { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQCommandLinkButton3", "", text as Any, description as Any, parent as Any]) as! QCommandLinkButton }
public protocol QCommonStyle_ITF: QStyle_ITF {
    func QCommonStyle_PTR() -> QCommonStyle
}

public class QCommonStyle: QStyle, QCommonStyle_ITF {
    public func QCommonStyle_PTR() -> QCommonStyle { callLocalFunction(l: ["", Pointer(), ___className, "QCommonStyle_PTR"]) as! QCommonStyle }
    override public func ConnectDrawComplexControl(f: @escaping (_ cc: Int, _ opt: QStyleOptionComplex, _ p: QPainter, _ widget: QWidget) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDrawComplexControl", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! QStyleOptionComplex, inp[2] as! QPainter, inp[3] as! QWidget) } as Any) }
    override public func DisconnectDrawComplexControl() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDrawComplexControl"]) }
    override public func DrawComplexControl(control: Int, option: QStyleOptionComplex_ITF? = nil, painter: QPainter_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawComplexControl", control as Any, option as Any, painter as Any, widget as Any]) }
    public func DrawComplexControlDefault(cc: Int, opt: QStyleOptionComplex_ITF? = nil, p: QPainter_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawComplexControlDefault", cc as Any, opt as Any, p as Any, widget as Any]) }
    override public func ConnectDrawControl(f: @escaping (_ element: Int, _ opt: QStyleOption, _ p: QPainter, _ widget: QWidget) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDrawControl", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! QStyleOption, inp[2] as! QPainter, inp[3] as! QWidget) } as Any) }
    override public func DisconnectDrawControl() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDrawControl"]) }
    override public func DrawControl(element: Int, option: QStyleOption_ITF? = nil, painter: QPainter_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawControl", element as Any, option as Any, painter as Any, widget as Any]) }
    public func DrawControlDefault(element: Int, opt: QStyleOption_ITF? = nil, p: QPainter_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawControlDefault", element as Any, opt as Any, p as Any, widget as Any]) }
    override public func ConnectDrawPrimitive(f: @escaping (_ pe: Int, _ opt: QStyleOption, _ p: QPainter, _ widget: QWidget) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDrawPrimitive", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! QStyleOption, inp[2] as! QPainter, inp[3] as! QWidget) } as Any) }
    override public func DisconnectDrawPrimitive() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDrawPrimitive"]) }
    override public func DrawPrimitive(element: Int, option: QStyleOption_ITF? = nil, painter: QPainter_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawPrimitive", element as Any, option as Any, painter as Any, widget as Any]) }
    public func DrawPrimitiveDefault(pe: Int, opt: QStyleOption_ITF? = nil, p: QPainter_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawPrimitiveDefault", pe as Any, opt as Any, p as Any, widget as Any]) }
    override public func ConnectGeneratedIconPixmap(f: @escaping (_ iconMode: Int, _ pixmap: QPixmap, _ opt: QStyleOption) -> QPixmap) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectGeneratedIconPixmap", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! QPixmap, inp[2] as! QStyleOption) } as Any) }
    override public func DisconnectGeneratedIconPixmap() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectGeneratedIconPixmap"]) }
    override public func GeneratedIconPixmap(iconMode: Int, pixmap: QPixmap_ITF? = nil, option: QStyleOption_ITF? = nil) -> QPixmap { callLocalFunction(l: ["", Pointer(), ___className, "GeneratedIconPixmap", iconMode as Any, pixmap as Any, option as Any]) as! QPixmap }
    public func GeneratedIconPixmapDefault(iconMode: Int, pixmap: QPixmap_ITF? = nil, opt: QStyleOption_ITF? = nil) -> QPixmap { callLocalFunction(l: ["", Pointer(), ___className, "GeneratedIconPixmapDefault", iconMode as Any, pixmap as Any, opt as Any]) as! QPixmap }
    override public func ConnectHitTestComplexControl(f: @escaping (_ cc: Int, _ opt: QStyleOptionComplex, _ pt: QPoint, _ widget: QWidget) -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHitTestComplexControl", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! QStyleOptionComplex, inp[2] as! QPoint, inp[3] as! QWidget) } as Any) }
    override public func DisconnectHitTestComplexControl() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHitTestComplexControl"]) }
    override public func HitTestComplexControl(control: Int, option: QStyleOptionComplex_ITF? = nil, position: QPoint_ITF? = nil, widget: QWidget_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "HitTestComplexControl", control as Any, option as Any, position as Any, widget as Any]) as! Float) }
    public func HitTestComplexControlDefault(cc: Int, opt: QStyleOptionComplex_ITF? = nil, pt: QPoint_ITF? = nil, widget: QWidget_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "HitTestComplexControlDefault", cc as Any, opt as Any, pt as Any, widget as Any]) as! Float) }
    override public func ConnectLayoutSpacing(f: @escaping (_ control1: Int, _ control2: Int, _ orientation: Int, _ option: QStyleOption, _ widget: QWidget) -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectLayoutSpacing", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float), Int(inp[2] as! Float), inp[3] as! QStyleOption, inp[4] as! QWidget) } as Any) }
    override public func DisconnectLayoutSpacing() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectLayoutSpacing"]) }
    override public func LayoutSpacing(control1: Int, control2: Int, orientation: Int, option: QStyleOption_ITF? = nil, widget: QWidget_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "LayoutSpacing", control1 as Any, control2 as Any, orientation as Any, option as Any, widget as Any]) as! Float) }
    public func LayoutSpacingDefault(control1: Int, control2: Int, orientation: Int, option: QStyleOption_ITF? = nil, widget: QWidget_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "LayoutSpacingDefault", control1 as Any, control2 as Any, orientation as Any, option as Any, widget as Any]) as! Float) }
    override public func ConnectPixelMetric(f: @escaping (_ m: Int, _ opt: QStyleOption, _ widget: QWidget) -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPixelMetric", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! QStyleOption, inp[2] as! QWidget) } as Any) }
    override public func DisconnectPixelMetric() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPixelMetric"]) }
    override public func PixelMetric(metric: Int, option: QStyleOption_ITF? = nil, widget: QWidget_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "PixelMetric", metric as Any, option as Any, widget as Any]) as! Float) }
    public func PixelMetricDefault(m: Int, opt: QStyleOption_ITF? = nil, widget: QWidget_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "PixelMetricDefault", m as Any, opt as Any, widget as Any]) as! Float) }
    override public func ConnectSizeFromContents(f: @escaping (_ ct: Int, _ opt: QStyleOption, _ csz: QSize, _ widget: QWidget) -> QSize) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSizeFromContents", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! QStyleOption, inp[2] as! QSize, inp[3] as! QWidget) } as Any) }
    override public func DisconnectSizeFromContents() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSizeFromContents"]) }
    override public func SizeFromContents(ty: Int, option: QStyleOption_ITF? = nil, contentsSize: QSize_ITF? = nil, widget: QWidget_ITF? = nil) -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "SizeFromContents", ty as Any, option as Any, contentsSize as Any, widget as Any]) as! QSize }
    public func SizeFromContentsDefault(ct: Int, opt: QStyleOption_ITF? = nil, csz: QSize_ITF? = nil, widget: QWidget_ITF? = nil) -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "SizeFromContentsDefault", ct as Any, opt as Any, csz as Any, widget as Any]) as! QSize }
    override public func ConnectStandardPixmap(f: @escaping (_ sp: Int, _ option: QStyleOption, _ widget: QWidget) -> QPixmap) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectStandardPixmap", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! QStyleOption, inp[2] as! QWidget) } as Any) }
    override public func DisconnectStandardPixmap() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectStandardPixmap"]) }
    override public func StandardPixmap(standardIcon: Int, option: QStyleOption_ITF? = nil, widget: QWidget_ITF? = nil) -> QPixmap { callLocalFunction(l: ["", Pointer(), ___className, "StandardPixmap", standardIcon as Any, option as Any, widget as Any]) as! QPixmap }
    public func StandardPixmapDefault(sp: Int, option: QStyleOption_ITF? = nil, widget: QWidget_ITF? = nil) -> QPixmap { callLocalFunction(l: ["", Pointer(), ___className, "StandardPixmapDefault", sp as Any, option as Any, widget as Any]) as! QPixmap }
    override public func ConnectStyleHint(f: @escaping (_ sh: Int, _ opt: QStyleOption, _ widget: QWidget, _ hret: QStyleHintReturn) -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectStyleHint", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! QStyleOption, inp[2] as! QWidget, inp[3] as! QStyleHintReturn) } as Any) }
    override public func DisconnectStyleHint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectStyleHint"]) }
    override public func StyleHint(hint: Int, option: QStyleOption_ITF? = nil, widget: QWidget_ITF? = nil, returnData: QStyleHintReturn_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "StyleHint", hint as Any, option as Any, widget as Any, returnData as Any]) as! Float) }
    public func StyleHintDefault(sh: Int, opt: QStyleOption_ITF? = nil, widget: QWidget_ITF? = nil, hret: QStyleHintReturn_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "StyleHintDefault", sh as Any, opt as Any, widget as Any, hret as Any]) as! Float) }
    override public func ConnectSubControlRect(f: @escaping (_ cc: Int, _ opt: QStyleOptionComplex, _ sc: Int, _ widget: QWidget) -> QRect) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSubControlRect", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! QStyleOptionComplex, Int(inp[2] as! Float), inp[3] as! QWidget) } as Any) }
    override public func DisconnectSubControlRect() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSubControlRect"]) }
    override public func SubControlRect(control: Int, option: QStyleOptionComplex_ITF? = nil, subControl: Int, widget: QWidget_ITF? = nil) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "SubControlRect", control as Any, option as Any, subControl as Any, widget as Any]) as! QRect }
    public func SubControlRectDefault(cc: Int, opt: QStyleOptionComplex_ITF? = nil, sc: Int, widget: QWidget_ITF? = nil) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "SubControlRectDefault", cc as Any, opt as Any, sc as Any, widget as Any]) as! QRect }
    override public func ConnectSubElementRect(f: @escaping (_ sr: Int, _ opt: QStyleOption, _ widget: QWidget) -> QRect) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSubElementRect", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! QStyleOption, inp[2] as! QWidget) } as Any) }
    override public func DisconnectSubElementRect() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSubElementRect"]) }
    override public func SubElementRect(element: Int, option: QStyleOption_ITF? = nil, widget: QWidget_ITF? = nil) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "SubElementRect", element as Any, option as Any, widget as Any]) as! QRect }
    public func SubElementRectDefault(sr: Int, opt: QStyleOption_ITF? = nil, widget: QWidget_ITF? = nil) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "SubElementRectDefault", sr as Any, opt as Any, widget as Any]) as! QRect }
    public func ConnectDestroyQCommonStyle(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQCommonStyle", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQCommonStyle() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQCommonStyle"]) }
    public func DestroyQCommonStyle() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQCommonStyle"]) }
    public func DestroyQCommonStyleDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQCommonStyleDefault"]) }
    override public func StandardIcon(standardIcon: Int, option: QStyleOption_ITF? = nil, widget: QWidget_ITF? = nil) -> QIcon { callLocalFunction(l: ["", Pointer(), ___className, "StandardIcon", standardIcon as Any, option as Any, widget as Any]) as! QIcon }
    public func StandardIconDefault(standardIcon: Int, option: QStyleOption_ITF? = nil, widget: QWidget_ITF? = nil) -> QIcon { callLocalFunction(l: ["", Pointer(), ___className, "StandardIconDefault", standardIcon as Any, option as Any, widget as Any]) as! QIcon }
}

public func NewQCommonStyleFromPointer(ptr: String) -> QCommonStyle { let r = QCommonStyle(); r.initFrom(p: ptr, n: "widgets.QCommonStyle"); return r }
public func NewQCommonStyle() -> QCommonStyle { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQCommonStyle", ""]) as! QCommonStyle }
public protocol QCompleter_ITF: QObject_ITF {
    func QCompleter_PTR() -> QCompleter
}

public class QCompleter: QObject, QCompleter_ITF {
    public func QCompleter_PTR() -> QCompleter { callLocalFunction(l: ["", Pointer(), ___className, "QCompleter_PTR"]) as! QCompleter }
    public func ConnectActivated(f: @escaping (_ text: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectActivated", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectActivated() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectActivated"]) }
    public func Activated(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Activated", text as Any]) }
    public func ConnectActivated2(f: @escaping (_ index: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectActivated2", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    public func DisconnectActivated2() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectActivated2"]) }
    public func Activated2(index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Activated2", index as Any]) }
    public func CaseSensitivity() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CaseSensitivity"]) as! Float) }
    public func ConnectComplete(f: @escaping (_ rect: QRect) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectComplete", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QRect) } as Any) }
    public func DisconnectComplete() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectComplete"]) }
    public func Complete(rect: QRect_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Complete", rect as Any]) }
    public func CompleteDefault(rect: QRect_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CompleteDefault", rect as Any]) }
    public func CompletionColumn() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CompletionColumn"]) as! Float) }
    public func CompletionCount() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CompletionCount"]) as! Float) }
    public func CompletionMode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CompletionMode"]) as! Float) }
    public func CompletionModel() -> QAbstractItemModel { callLocalFunction(l: ["", Pointer(), ___className, "CompletionModel"]) as! QAbstractItemModel }
    public func CompletionPrefix() -> String { callLocalFunction(l: ["", Pointer(), ___className, "CompletionPrefix"]) as! String }
    public func CompletionRole() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CompletionRole"]) as! Float) }
    public func CurrentCompletion() -> String { callLocalFunction(l: ["", Pointer(), ___className, "CurrentCompletion"]) as! String }
    public func CurrentIndex() -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "CurrentIndex"]) as! QModelIndex }
    public func CurrentRow() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CurrentRow"]) as! Float) }
    public func EventDefault(ev: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventDefault", ev as Any]) as! Bool }
    public func EventFilterDefault(o: QObject_ITF? = nil, e: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventFilterDefault", o as Any, e as Any]) as! Bool }
    public func FilterMode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "FilterMode"]) as! Float) }
    public func ConnectHighlighted(f: @escaping (_ text: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHighlighted", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectHighlighted() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHighlighted"]) }
    public func Highlighted(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Highlighted", text as Any]) }
    public func ConnectHighlighted2(f: @escaping (_ index: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHighlighted2", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    public func DisconnectHighlighted2() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHighlighted2"]) }
    public func Highlighted2(index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Highlighted2", index as Any]) }
    public func MaxVisibleItems() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "MaxVisibleItems"]) as! Float) }
    public func Model() -> QAbstractItemModel { callLocalFunction(l: ["", Pointer(), ___className, "Model"]) as! QAbstractItemModel }
    public func ModelSorting() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ModelSorting"]) as! Float) }
    public func ConnectPathFromIndex(f: @escaping (_ index: QModelIndex) -> String) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPathFromIndex", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    public func DisconnectPathFromIndex() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPathFromIndex"]) }
    public func PathFromIndex(index: QModelIndex_ITF? = nil) -> String { callLocalFunction(l: ["", Pointer(), ___className, "PathFromIndex", index as Any]) as! String }
    public func PathFromIndexDefault(index: QModelIndex_ITF? = nil) -> String { callLocalFunction(l: ["", Pointer(), ___className, "PathFromIndexDefault", index as Any]) as! String }
    public func Popup() -> QAbstractItemView { callLocalFunction(l: ["", Pointer(), ___className, "Popup"]) as! QAbstractItemView }
    public func SetCaseSensitivity(caseSensitivity: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCaseSensitivity", caseSensitivity as Any]) }
    public func SetCompletionColumn(column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCompletionColumn", column as Any]) }
    public func SetCompletionMode(mode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCompletionMode", mode as Any]) }
    public func ConnectSetCompletionPrefix(f: @escaping (_ prefix: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetCompletionPrefix", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectSetCompletionPrefix() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetCompletionPrefix"]) }
    public func SetCompletionPrefix(prefix: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCompletionPrefix", prefix as Any]) }
    public func SetCompletionPrefixDefault(prefix: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCompletionPrefixDefault", prefix as Any]) }
    public func SetCompletionRole(role: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCompletionRole", role as Any]) }
    public func SetCurrentRow(row: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentRow", row as Any]) as! Bool }
    public func SetFilterMode(filterMode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFilterMode", filterMode as Any]) }
    public func SetMaxVisibleItems(maxItems: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMaxVisibleItems", maxItems as Any]) }
    public func SetModel(model: QAbstractItemModel_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetModel", model as Any]) }
    public func SetModelSorting(sorting: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetModelSorting", sorting as Any]) }
    public func SetPopup(popup: QAbstractItemView_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPopup", popup as Any]) }
    public func SetWidget(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWidget", widget as Any]) }
    public func ConnectSetWrapAround(f: @escaping (_ wrap: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetWrapAround", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectSetWrapAround() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetWrapAround"]) }
    public func SetWrapAround(wrap: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWrapAround", wrap as Any]) }
    public func SetWrapAroundDefault(wrap: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWrapAroundDefault", wrap as Any]) }
    public func ConnectSplitPath(f: @escaping (_ path: String) -> [String]) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSplitPath", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectSplitPath() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSplitPath"]) }
    public func SplitPath(path: String) -> [String] { callLocalFunction(l: ["", Pointer(), ___className, "SplitPath", path as Any]) as! [String] }
    public func SplitPathDefault(path: String) -> [String] { callLocalFunction(l: ["", Pointer(), ___className, "SplitPathDefault", path as Any]) as! [String] }
    public func Widget() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "Widget"]) as! QWidget }
    public func WrapAround() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "WrapAround"]) as! Bool }
    public func ConnectDestroyQCompleter(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQCompleter", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQCompleter() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQCompleter"]) }
    public func DestroyQCompleter() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQCompleter"]) }
    public func DestroyQCompleterDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQCompleterDefault"]) }
    override public func ChildEventDefault(event: QChildEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ChildEventDefault", event as Any]) }
    override public func ConnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ConnectNotifyDefault", sign as Any]) }
    override public func CustomEventDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CustomEventDefault", event as Any]) }
    override public func DeleteLaterDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DeleteLaterDefault"]) }
    override public func DisconnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DisconnectNotifyDefault", sign as Any]) }
    override public func MetaObjectDefault() -> QMetaObject { callLocalFunction(l: ["", Pointer(), ___className, "MetaObjectDefault"]) as! QMetaObject }
    override public func TimerEventDefault(event: QTimerEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TimerEventDefault", event as Any]) }
}

public func NewQCompleterFromPointer(ptr: String) -> QCompleter { let r = QCompleter(); r.initFrom(p: ptr, n: "widgets.QCompleter"); return r }
public func NewQCompleter(parent: QObject_ITF? = nil) -> QCompleter { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQCompleter", "", parent as Any]) as! QCompleter }
public func NewQCompleter2(model: QAbstractItemModel_ITF? = nil, parent: QObject_ITF? = nil) -> QCompleter { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQCompleter2", "", model as Any, parent as Any]) as! QCompleter }
public func NewQCompleter3(list: [String], parent: QObject_ITF? = nil) -> QCompleter { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQCompleter3", "", list as Any, parent as Any]) as! QCompleter }
public protocol QDataWidgetMapper_ITF: QObject_ITF {
    func QDataWidgetMapper_PTR() -> QDataWidgetMapper
}

public class QDataWidgetMapper: QObject, QDataWidgetMapper_ITF {
    public func QDataWidgetMapper_PTR() -> QDataWidgetMapper { callLocalFunction(l: ["", Pointer(), ___className, "QDataWidgetMapper_PTR"]) as! QDataWidgetMapper }
    public func AddMapping(widget: QWidget_ITF? = nil, section: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddMapping", widget as Any, section as Any]) }
    public func AddMapping2(widget: QWidget_ITF? = nil, section: Int, propertyName: QByteArray_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddMapping2", widget as Any, section as Any, propertyName as Any]) }
    public func ClearMapping() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearMapping"]) }
    public func CurrentIndex() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CurrentIndex"]) as! Float) }
    public func ConnectCurrentIndexChanged(f: @escaping (_ index: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCurrentIndexChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectCurrentIndexChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCurrentIndexChanged"]) }
    public func CurrentIndexChanged(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CurrentIndexChanged", index as Any]) }
    public func ItemDelegate() -> QAbstractItemDelegate { callLocalFunction(l: ["", Pointer(), ___className, "ItemDelegate"]) as! QAbstractItemDelegate }
    public func MappedPropertyName(widget: QWidget_ITF? = nil) -> QByteArray { callLocalFunction(l: ["", Pointer(), ___className, "MappedPropertyName", widget as Any]) as! QByteArray }
    public func MappedSection(widget: QWidget_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "MappedSection", widget as Any]) as! Float) }
    public func MappedWidgetAt(section: Int) -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "MappedWidgetAt", section as Any]) as! QWidget }
    public func Model() -> QAbstractItemModel { callLocalFunction(l: ["", Pointer(), ___className, "Model"]) as! QAbstractItemModel }
    public func Orientation() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Orientation"]) as! Float) }
    public func RemoveMapping(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveMapping", widget as Any]) }
    public func ConnectRevert(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRevert", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectRevert() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRevert"]) }
    public func Revert() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Revert"]) }
    public func RevertDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "RevertDefault"]) }
    public func RootIndex() -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "RootIndex"]) as! QModelIndex }
    public func ConnectSetCurrentIndex(f: @escaping (_ index: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetCurrentIndex", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSetCurrentIndex() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetCurrentIndex"]) }
    public func SetCurrentIndex(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentIndex", index as Any]) }
    public func SetCurrentIndexDefault(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentIndexDefault", index as Any]) }
    public func ConnectSetCurrentModelIndex(f: @escaping (_ index: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetCurrentModelIndex", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    public func DisconnectSetCurrentModelIndex() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetCurrentModelIndex"]) }
    public func SetCurrentModelIndex(index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentModelIndex", index as Any]) }
    public func SetCurrentModelIndexDefault(index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentModelIndexDefault", index as Any]) }
    public func SetItemDelegate(delegate: QAbstractItemDelegate_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetItemDelegate", delegate as Any]) }
    public func SetModel(model: QAbstractItemModel_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetModel", model as Any]) }
    public func SetOrientation(aOrientation: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOrientation", aOrientation as Any]) }
    public func SetRootIndex(index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRootIndex", index as Any]) }
    public func SetSubmitPolicy(policy: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSubmitPolicy", policy as Any]) }
    public func ConnectSubmit(f: @escaping () -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSubmit", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectSubmit() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSubmit"]) }
    public func Submit() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "Submit"]) as! Bool }
    public func SubmitDefault() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "SubmitDefault"]) as! Bool }
    public func SubmitPolicy() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SubmitPolicy"]) as! Float) }
    public func ConnectToFirst(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectToFirst", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectToFirst() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectToFirst"]) }
    public func ToFirst() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ToFirst"]) }
    public func ToFirstDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ToFirstDefault"]) }
    public func ConnectToLast(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectToLast", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectToLast() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectToLast"]) }
    public func ToLast() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ToLast"]) }
    public func ToLastDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ToLastDefault"]) }
    public func ConnectToNext(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectToNext", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectToNext() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectToNext"]) }
    public func ToNext() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ToNext"]) }
    public func ToNextDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ToNextDefault"]) }
    public func ConnectToPrevious(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectToPrevious", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectToPrevious() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectToPrevious"]) }
    public func ToPrevious() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ToPrevious"]) }
    public func ToPreviousDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ToPreviousDefault"]) }
    public func ConnectDestroyQDataWidgetMapper(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQDataWidgetMapper", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQDataWidgetMapper() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQDataWidgetMapper"]) }
    public func DestroyQDataWidgetMapper() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQDataWidgetMapper"]) }
    public func DestroyQDataWidgetMapperDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQDataWidgetMapperDefault"]) }
    override public func ChildEventDefault(event: QChildEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ChildEventDefault", event as Any]) }
    override public func ConnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ConnectNotifyDefault", sign as Any]) }
    override public func CustomEventDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CustomEventDefault", event as Any]) }
    override public func DeleteLaterDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DeleteLaterDefault"]) }
    override public func DisconnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DisconnectNotifyDefault", sign as Any]) }
    override public func EventDefault(e: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventDefault", e as Any]) as! Bool }
    override public func EventFilterDefault(watched: QObject_ITF? = nil, event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventFilterDefault", watched as Any, event as Any]) as! Bool }
    override public func MetaObjectDefault() -> QMetaObject { callLocalFunction(l: ["", Pointer(), ___className, "MetaObjectDefault"]) as! QMetaObject }
    override public func TimerEventDefault(event: QTimerEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TimerEventDefault", event as Any]) }
}

public func NewQDataWidgetMapperFromPointer(ptr: String) -> QDataWidgetMapper { let r = QDataWidgetMapper(); r.initFrom(p: ptr, n: "widgets.QDataWidgetMapper"); return r }
public func NewQDataWidgetMapper(parent: QObject_ITF? = nil) -> QDataWidgetMapper { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQDataWidgetMapper", "", parent as Any]) as! QDataWidgetMapper }
public protocol QDateEdit_ITF: QDateTimeEdit_ITF {
    func QDateEdit_PTR() -> QDateEdit
}

public class QDateEdit: QDateTimeEdit, QDateEdit_ITF {
    public func QDateEdit_PTR() -> QDateEdit { callLocalFunction(l: ["", Pointer(), ___className, "QDateEdit_PTR"]) as! QDateEdit }
    public func ConnectDestroyQDateEdit(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQDateEdit", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQDateEdit() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQDateEdit"]) }
    public func DestroyQDateEdit() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQDateEdit"]) }
    public func DestroyQDateEditDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQDateEditDefault"]) }
}

public func NewQDateEditFromPointer(ptr: String) -> QDateEdit { let r = QDateEdit(); r.initFrom(p: ptr, n: "widgets.QDateEdit"); return r }
public func NewQDateEdit(parent: QWidget_ITF? = nil) -> QDateEdit { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQDateEdit", "", parent as Any]) as! QDateEdit }
public func NewQDateEdit2(date: QDate_ITF? = nil, parent: QWidget_ITF? = nil) -> QDateEdit { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQDateEdit2", "", date as Any, parent as Any]) as! QDateEdit }
public protocol QDateTimeEdit_ITF: QAbstractSpinBox_ITF {
    func QDateTimeEdit_PTR() -> QDateTimeEdit
}

public class QDateTimeEdit: QAbstractSpinBox, QDateTimeEdit_ITF {
    public func QDateTimeEdit_PTR() -> QDateTimeEdit { callLocalFunction(l: ["", Pointer(), ___className, "QDateTimeEdit_PTR"]) as! QDateTimeEdit }
    public func CalendarPopup() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "CalendarPopup"]) as! Bool }
    public func CalendarWidget() -> QCalendarWidget { callLocalFunction(l: ["", Pointer(), ___className, "CalendarWidget"]) as! QCalendarWidget }
    override public func ConnectClear(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectClear", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectClear() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectClear"]) }
    override public func Clear() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Clear"]) }
    override public func ClearDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearDefault"]) }
    public func ClearMaximumDate() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearMaximumDate"]) }
    public func ClearMaximumDateTime() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearMaximumDateTime"]) }
    public func ClearMaximumTime() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearMaximumTime"]) }
    public func ClearMinimumDate() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearMinimumDate"]) }
    public func ClearMinimumDateTime() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearMinimumDateTime"]) }
    public func ClearMinimumTime() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearMinimumTime"]) }
    public func CurrentSection() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CurrentSection"]) as! Float) }
    public func CurrentSectionIndex() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CurrentSectionIndex"]) as! Float) }
    public func Date() -> QDate { callLocalFunction(l: ["", Pointer(), ___className, "Date"]) as! QDate }
    public func ConnectDateChanged(f: @escaping (_ date: QDate) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDateChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QDate) } as Any) }
    public func DisconnectDateChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDateChanged"]) }
    public func DateChanged(date: QDate_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DateChanged", date as Any]) }
    public func DateTime() -> QDateTime { callLocalFunction(l: ["", Pointer(), ___className, "DateTime"]) as! QDateTime }
    public func ConnectDateTimeChanged(f: @escaping (_ datetime: QDateTime) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDateTimeChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QDateTime) } as Any) }
    public func DisconnectDateTimeChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDateTimeChanged"]) }
    public func DateTimeChanged(datetime: QDateTime_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DateTimeChanged", datetime as Any]) }
    public func ConnectDateTimeFromText(f: @escaping (_ text: String) -> QDateTime) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDateTimeFromText", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectDateTimeFromText() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDateTimeFromText"]) }
    public func DateTimeFromText(text: String) -> QDateTime { callLocalFunction(l: ["", Pointer(), ___className, "DateTimeFromText", text as Any]) as! QDateTime }
    public func DateTimeFromTextDefault(text: String) -> QDateTime { callLocalFunction(l: ["", Pointer(), ___className, "DateTimeFromTextDefault", text as Any]) as! QDateTime }
    public func DisplayFormat() -> String { callLocalFunction(l: ["", Pointer(), ___className, "DisplayFormat"]) as! String }
    public func DisplayedSections() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "DisplayedSections"]) as! Float) }
    public func MaximumDate() -> QDate { callLocalFunction(l: ["", Pointer(), ___className, "MaximumDate"]) as! QDate }
    public func MaximumDateTime() -> QDateTime { callLocalFunction(l: ["", Pointer(), ___className, "MaximumDateTime"]) as! QDateTime }
    public func MaximumTime() -> QTime { callLocalFunction(l: ["", Pointer(), ___className, "MaximumTime"]) as! QTime }
    public func MinimumDate() -> QDate { callLocalFunction(l: ["", Pointer(), ___className, "MinimumDate"]) as! QDate }
    public func MinimumDateTime() -> QDateTime { callLocalFunction(l: ["", Pointer(), ___className, "MinimumDateTime"]) as! QDateTime }
    public func MinimumTime() -> QTime { callLocalFunction(l: ["", Pointer(), ___className, "MinimumTime"]) as! QTime }
    public func SectionAt(index: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SectionAt", index as Any]) as! Float) }
    public func SectionCount() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SectionCount"]) as! Float) }
    public func SectionText(section: Int) -> String { callLocalFunction(l: ["", Pointer(), ___className, "SectionText", section as Any]) as! String }
    public func SetCalendarPopup(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCalendarPopup", enable as Any]) }
    public func SetCalendarWidget(calendarWidget: QCalendarWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCalendarWidget", calendarWidget as Any]) }
    public func SetCurrentSection(section: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentSection", section as Any]) }
    public func SetCurrentSectionIndex(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentSectionIndex", index as Any]) }
    public func ConnectSetDate(f: @escaping (_ date: QDate) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetDate", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QDate) } as Any) }
    public func DisconnectSetDate() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetDate"]) }
    public func SetDate(date: QDate_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDate", date as Any]) }
    public func SetDateDefault(date: QDate_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDateDefault", date as Any]) }
    public func SetDateRange(mi: QDate_ITF? = nil, max: QDate_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDateRange", mi as Any, max as Any]) }
    public func ConnectSetDateTime(f: @escaping (_ dateTime: QDateTime) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetDateTime", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QDateTime) } as Any) }
    public func DisconnectSetDateTime() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetDateTime"]) }
    public func SetDateTime(dateTime: QDateTime_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDateTime", dateTime as Any]) }
    public func SetDateTimeDefault(dateTime: QDateTime_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDateTimeDefault", dateTime as Any]) }
    public func SetDateTimeRange(mi: QDateTime_ITF? = nil, max: QDateTime_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDateTimeRange", mi as Any, max as Any]) }
    public func SetDisplayFormat(format: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDisplayFormat", format as Any]) }
    public func SetMaximumDate(max: QDate_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMaximumDate", max as Any]) }
    public func SetMaximumDateTime(dt: QDateTime_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMaximumDateTime", dt as Any]) }
    public func SetMaximumTime(max: QTime_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMaximumTime", max as Any]) }
    public func SetMinimumDate(mi: QDate_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMinimumDate", mi as Any]) }
    public func SetMinimumDateTime(dt: QDateTime_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMinimumDateTime", dt as Any]) }
    public func SetMinimumTime(mi: QTime_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMinimumTime", mi as Any]) }
    public func SetSelectedSection(section: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSelectedSection", section as Any]) }
    public func ConnectSetTime(f: @escaping (_ ti: QTime) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetTime", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QTime) } as Any) }
    public func DisconnectSetTime() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetTime"]) }
    public func SetTime(ti: QTime_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTime", ti as Any]) }
    public func SetTimeDefault(ti: QTime_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTimeDefault", ti as Any]) }
    public func SetTimeRange(mi: QTime_ITF? = nil, max: QTime_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTimeRange", mi as Any, max as Any]) }
    public func SetTimeSpec(spec: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTimeSpec", spec as Any]) }
    public func ConnectTextFromDateTime(f: @escaping (_ dateTime: QDateTime) -> String) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTextFromDateTime", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QDateTime) } as Any) }
    public func DisconnectTextFromDateTime() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTextFromDateTime"]) }
    public func TextFromDateTime(dateTime: QDateTime_ITF? = nil) -> String { callLocalFunction(l: ["", Pointer(), ___className, "TextFromDateTime", dateTime as Any]) as! String }
    public func TextFromDateTimeDefault(dateTime: QDateTime_ITF? = nil) -> String { callLocalFunction(l: ["", Pointer(), ___className, "TextFromDateTimeDefault", dateTime as Any]) as! String }
    public func Time() -> QTime { callLocalFunction(l: ["", Pointer(), ___className, "Time"]) as! QTime }
    public func ConnectTimeChanged(f: @escaping (_ ti: QTime) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTimeChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QTime) } as Any) }
    public func DisconnectTimeChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTimeChanged"]) }
    public func TimeChanged(ti: QTime_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TimeChanged", ti as Any]) }
    public func TimeSpec() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TimeSpec"]) as! Float) }
    public func ConnectDestroyQDateTimeEdit(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQDateTimeEdit", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQDateTimeEdit() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQDateTimeEdit"]) }
    public func DestroyQDateTimeEdit() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQDateTimeEdit"]) }
    public func DestroyQDateTimeEditDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQDateTimeEditDefault"]) }
}

public func NewQDateTimeEditFromPointer(ptr: String) -> QDateTimeEdit { let r = QDateTimeEdit(); r.initFrom(p: ptr, n: "widgets.QDateTimeEdit"); return r }
public func NewQDateTimeEdit(parent: QWidget_ITF? = nil) -> QDateTimeEdit { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQDateTimeEdit", "", parent as Any]) as! QDateTimeEdit }
public func NewQDateTimeEdit2(datetime: QDateTime_ITF? = nil, parent: QWidget_ITF? = nil) -> QDateTimeEdit { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQDateTimeEdit2", "", datetime as Any, parent as Any]) as! QDateTimeEdit }
public func NewQDateTimeEdit3(date: QDate_ITF? = nil, parent: QWidget_ITF? = nil) -> QDateTimeEdit { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQDateTimeEdit3", "", date as Any, parent as Any]) as! QDateTimeEdit }
public func NewQDateTimeEdit4(ti: QTime_ITF? = nil, parent: QWidget_ITF? = nil) -> QDateTimeEdit { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQDateTimeEdit4", "", ti as Any, parent as Any]) as! QDateTimeEdit }
public protocol QDesktopWidget_ITF: QWidget_ITF {
    func QDesktopWidget_PTR() -> QDesktopWidget
}

public class QDesktopWidget: QWidget, QDesktopWidget_ITF {
    public func QDesktopWidget_PTR() -> QDesktopWidget { callLocalFunction(l: ["", Pointer(), ___className, "QDesktopWidget_PTR"]) as! QDesktopWidget }
    public func AvailableGeometry(screen: Int) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "AvailableGeometry", screen as Any]) as! QRect }
    public func AvailableGeometry2(widget: QWidget_ITF? = nil) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "AvailableGeometry2", widget as Any]) as! QRect }
    public func IsVirtualDesktop() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsVirtualDesktop"]) as! Bool }
    public func NumScreens() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "NumScreens"]) as! Float) }
    public func PrimaryScreen() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "PrimaryScreen"]) as! Float) }
    public func ConnectPrimaryScreenChanged(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPrimaryScreenChanged", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectPrimaryScreenChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPrimaryScreenChanged"]) }
    public func PrimaryScreenChanged() { _ = callLocalFunction(l: ["", Pointer(), ___className, "PrimaryScreenChanged"]) }
    public func ConnectResized(f: @escaping (_ screen: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectResized", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectResized() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectResized"]) }
    public func Resized(screen: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Resized", screen as Any]) }
    public func Screen(screen: Int) -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "Screen", screen as Any]) as! QWidget }
    public func ScreenCount() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ScreenCount"]) as! Float) }
    public func ConnectScreenCountChanged(f: @escaping (_ newCount: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectScreenCountChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectScreenCountChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectScreenCountChanged"]) }
    public func ScreenCountChanged(newCount: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ScreenCountChanged", newCount as Any]) }
    public func ScreenGeometry(screen: Int) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "ScreenGeometry", screen as Any]) as! QRect }
    public func ScreenGeometry2(widget: QWidget_ITF? = nil) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "ScreenGeometry2", widget as Any]) as! QRect }
    public func ScreenNumber(widget: QWidget_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ScreenNumber", widget as Any]) as! Float) }
    public func ScreenNumber2(point: QPoint_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ScreenNumber2", point as Any]) as! Float) }
    public func ConnectWorkAreaResized(f: @escaping (_ screen: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectWorkAreaResized", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectWorkAreaResized() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectWorkAreaResized"]) }
    public func WorkAreaResized(screen: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "WorkAreaResized", screen as Any]) }
    public func ConnectDestroyQDesktopWidget(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQDesktopWidget", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQDesktopWidget() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQDesktopWidget"]) }
    public func DestroyQDesktopWidget() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQDesktopWidget"]) }
    public func DestroyQDesktopWidgetDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQDesktopWidgetDefault"]) }
}

public func NewQDesktopWidgetFromPointer(ptr: String) -> QDesktopWidget { let r = QDesktopWidget(); r.initFrom(p: ptr, n: "widgets.QDesktopWidget"); return r }
public func NewQDesktopWidget() -> QDesktopWidget { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQDesktopWidget", ""]) as! QDesktopWidget }
public protocol QDial_ITF: QAbstractSlider_ITF {
    func QDial_PTR() -> QDial
}

public class QDial: QAbstractSlider, QDial_ITF {
    public func QDial_PTR() -> QDial { callLocalFunction(l: ["", Pointer(), ___className, "QDial_PTR"]) as! QDial }
    public func InitStyleOption(option: QStyleOptionSlider_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InitStyleOption", option as Any]) }
    public func NotchSize() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "NotchSize"]) as! Float) }
    public func NotchTarget() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "NotchTarget"]) as! Float }
    public func NotchesVisible() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "NotchesVisible"]) as! Bool }
    public func SetNotchTarget(target: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetNotchTarget", target as Any]) }
    public func ConnectSetNotchesVisible(f: @escaping (_ visible: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetNotchesVisible", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectSetNotchesVisible() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetNotchesVisible"]) }
    public func SetNotchesVisible(visible: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetNotchesVisible", visible as Any]) }
    public func SetNotchesVisibleDefault(visible: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetNotchesVisibleDefault", visible as Any]) }
    public func ConnectSetWrapping(f: @escaping (_ on: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetWrapping", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectSetWrapping() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetWrapping"]) }
    public func SetWrapping(on: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWrapping", on as Any]) }
    public func SetWrappingDefault(on: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWrappingDefault", on as Any]) }
    public func Wrapping() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "Wrapping"]) as! Bool }
    public func ConnectDestroyQDial(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQDial", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQDial() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQDial"]) }
    public func DestroyQDial() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQDial"]) }
    public func DestroyQDialDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQDialDefault"]) }
}

public func NewQDialFromPointer(ptr: String) -> QDial { let r = QDial(); r.initFrom(p: ptr, n: "widgets.QDial"); return r }
public func NewQDial(parent: QWidget_ITF? = nil) -> QDial { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQDial", "", parent as Any]) as! QDial }
public protocol QDialog_ITF: QWidget_ITF {
    func QDialog_PTR() -> QDialog
}

public class QDialog: QWidget, QDialog_ITF {
    public func QDialog_PTR() -> QDialog { callLocalFunction(l: ["", Pointer(), ___className, "QDialog_PTR"]) as! QDialog }
    public func ConnectAccept(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectAccept", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectAccept() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectAccept"]) }
    public func Accept() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Accept"]) }
    public func AcceptDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "AcceptDefault"]) }
    public func ConnectAccepted(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectAccepted", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectAccepted() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectAccepted"]) }
    public func Accepted() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Accepted"]) }
    public func ConnectDone(f: @escaping (_ r: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDone", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectDone() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDone"]) }
    public func Done(r: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Done", r as Any]) }
    public func DoneDefault(r: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DoneDefault", r as Any]) }
    public func ConnectExec(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectExec", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectExec() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectExec"]) }
    public func Exec() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Exec"]) as! Float) }
    public func ExecDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ExecDefault"]) as! Float) }
    public func ConnectFinished(f: @escaping (_ result: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectFinished", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectFinished() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectFinished"]) }
    public func Finished(result: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Finished", result as Any]) }
    public func IsSizeGripEnabled() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsSizeGripEnabled"]) as! Bool }
    public func ConnectOpen(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectOpen", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectOpen() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectOpen"]) }
    public func Open() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Open"]) }
    public func OpenDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "OpenDefault"]) }
    public func ConnectReject(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectReject", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectReject() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectReject"]) }
    public func Reject() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Reject"]) }
    public func RejectDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "RejectDefault"]) }
    public func ConnectRejected(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRejected", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectRejected() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRejected"]) }
    public func Rejected() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Rejected"]) }
    public func Result() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Result"]) as! Float) }
    public func SetModal(modal: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetModal", modal as Any]) }
    public func SetResult(i: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetResult", i as Any]) }
    public func SetSizeGripEnabled(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSizeGripEnabled", vbo as Any]) }
    override public func ConnectSetVisible(f: @escaping (_ visible: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetVisible", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    override public func DisconnectSetVisible() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetVisible"]) }
    override public func SetVisible(visible: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetVisible", visible as Any]) }
    override public func SetVisibleDefault(visible: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetVisibleDefault", visible as Any]) }
    public func ConnectDestroyQDialog(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQDialog", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQDialog() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQDialog"]) }
    public func DestroyQDialog() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQDialog"]) }
    public func DestroyQDialogDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQDialogDefault"]) }
}

public func NewQDialogFromPointer(ptr: String) -> QDialog { let r = QDialog(); r.initFrom(p: ptr, n: "widgets.QDialog"); return r }
public func NewQDialog(parent: QWidget_ITF? = nil, ff: Int) -> QDialog { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQDialog", "", parent as Any, ff as Any]) as! QDialog }
public protocol QDialogButtonBox_ITF: QWidget_ITF {
    func QDialogButtonBox_PTR() -> QDialogButtonBox
}

public class QDialogButtonBox: QWidget, QDialogButtonBox_ITF {
    public func QDialogButtonBox_PTR() -> QDialogButtonBox { callLocalFunction(l: ["", Pointer(), ___className, "QDialogButtonBox_PTR"]) as! QDialogButtonBox }
    public func ConnectAccepted(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectAccepted", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectAccepted() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectAccepted"]) }
    public func Accepted() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Accepted"]) }
    public func AddButton(button: QAbstractButton_ITF? = nil, role: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddButton", button as Any, role as Any]) }
    public func AddButton2(text: String, role: Int) -> QPushButton { callLocalFunction(l: ["", Pointer(), ___className, "AddButton2", text as Any, role as Any]) as! QPushButton }
    public func AddButton3(button: Int) -> QPushButton { callLocalFunction(l: ["", Pointer(), ___className, "AddButton3", button as Any]) as! QPushButton }
    public func Button(which: Int) -> QPushButton { callLocalFunction(l: ["", Pointer(), ___className, "Button", which as Any]) as! QPushButton }
    public func ButtonRole(button: QAbstractButton_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ButtonRole", button as Any]) as! Float) }
    public func Buttons() -> [QAbstractButton] { callLocalFunction(l: ["", Pointer(), ___className, "Buttons"]) as! [QAbstractButton] }
    public func CenterButtons() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "CenterButtons"]) as! Bool }
    public func Clear() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Clear"]) }
    public func ConnectClicked(f: @escaping (_ button: QAbstractButton) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectClicked", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QAbstractButton) } as Any) }
    public func DisconnectClicked() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectClicked"]) }
    public func Clicked(button: QAbstractButton_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Clicked", button as Any]) }
    public func ConnectHelpRequested(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHelpRequested", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectHelpRequested() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHelpRequested"]) }
    public func HelpRequested() { _ = callLocalFunction(l: ["", Pointer(), ___className, "HelpRequested"]) }
    public func Orientation() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Orientation"]) as! Float) }
    public func ConnectRejected(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRejected", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectRejected() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRejected"]) }
    public func Rejected() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Rejected"]) }
    public func RemoveButton(button: QAbstractButton_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveButton", button as Any]) }
    public func SetCenterButtons(center: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCenterButtons", center as Any]) }
    public func SetOrientation(orientation: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOrientation", orientation as Any]) }
    public func SetStandardButtons(buttons: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStandardButtons", buttons as Any]) }
    public func StandardButton(button: QAbstractButton_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "StandardButton", button as Any]) as! Float) }
    public func StandardButtons() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "StandardButtons"]) as! Float) }
    public func ConnectDestroyQDialogButtonBox(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQDialogButtonBox", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQDialogButtonBox() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQDialogButtonBox"]) }
    public func DestroyQDialogButtonBox() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQDialogButtonBox"]) }
    public func DestroyQDialogButtonBoxDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQDialogButtonBoxDefault"]) }
}

public func NewQDialogButtonBoxFromPointer(ptr: String) -> QDialogButtonBox { let r = QDialogButtonBox(); r.initFrom(p: ptr, n: "widgets.QDialogButtonBox"); return r }
public func NewQDialogButtonBox(parent: QWidget_ITF? = nil) -> QDialogButtonBox { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQDialogButtonBox", "", parent as Any]) as! QDialogButtonBox }
public func NewQDialogButtonBox2(orientation: Int, parent: QWidget_ITF? = nil) -> QDialogButtonBox { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQDialogButtonBox2", "", orientation as Any, parent as Any]) as! QDialogButtonBox }
public func NewQDialogButtonBox3(buttons: Int, parent: QWidget_ITF? = nil) -> QDialogButtonBox { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQDialogButtonBox3", "", buttons as Any, parent as Any]) as! QDialogButtonBox }
public func NewQDialogButtonBox4(buttons: Int, orientation: Int, parent: QWidget_ITF? = nil) -> QDialogButtonBox { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQDialogButtonBox4", "", buttons as Any, orientation as Any, parent as Any]) as! QDialogButtonBox }
public protocol QDirModel_ITF: QAbstractItemModel_ITF {
    func QDirModel_PTR() -> QDirModel
}

public class QDirModel: QAbstractItemModel, QDirModel_ITF {
    public func QDirModel_PTR() -> QDirModel { callLocalFunction(l: ["", Pointer(), ___className, "QDirModel_PTR"]) as! QDirModel }
    override public func ConnectColumnCount(f: @escaping (_ parent: QModelIndex) -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectColumnCount", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    override public func DisconnectColumnCount() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectColumnCount"]) }
    override public func ColumnCount(parent: QModelIndex_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ColumnCount", parent as Any]) as! Float) }
    public func ColumnCountDefault(parent: QModelIndex_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ColumnCountDefault", parent as Any]) as! Float) }
    override public func ConnectData(f: @escaping (_ index: QModelIndex, _ role: Int) -> QVariant) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectData", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex, Int(inp[1] as! Float)) } as Any) }
    override public func DisconnectData() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectData"]) }
    override public func Data(index: QModelIndex_ITF? = nil, role: Int) -> QVariant { callLocalFunction(l: ["", Pointer(), ___className, "Data", index as Any, role as Any]) as! QVariant }
    public func DataDefault(index: QModelIndex_ITF? = nil, role: Int) -> QVariant { callLocalFunction(l: ["", Pointer(), ___className, "DataDefault", index as Any, role as Any]) as! QVariant }
    override public func DropMimeDataDefault(data: QMimeData_ITF? = nil, action: Int, row: Int, column: Int, parent: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "DropMimeDataDefault", data as Any, action as Any, row as Any, column as Any, parent as Any]) as! Bool }
    public func FileIcon(index: QModelIndex_ITF? = nil) -> QIcon { callLocalFunction(l: ["", Pointer(), ___className, "FileIcon", index as Any]) as! QIcon }
    public func FileInfo(index: QModelIndex_ITF? = nil) -> QFileInfo { callLocalFunction(l: ["", Pointer(), ___className, "FileInfo", index as Any]) as! QFileInfo }
    public func FileName(index: QModelIndex_ITF? = nil) -> String { callLocalFunction(l: ["", Pointer(), ___className, "FileName", index as Any]) as! String }
    public func FilePath(index: QModelIndex_ITF? = nil) -> String { callLocalFunction(l: ["", Pointer(), ___className, "FilePath", index as Any]) as! String }
    public func Filter() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Filter"]) as! Float) }
    override public func FlagsDefault(index: QModelIndex_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "FlagsDefault", index as Any]) as! Float) }
    override public func HasChildrenDefault(parent: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "HasChildrenDefault", parent as Any]) as! Bool }
    override public func HeaderDataDefault(section: Int, orientation: Int, role: Int) -> QVariant { callLocalFunction(l: ["", Pointer(), ___className, "HeaderDataDefault", section as Any, orientation as Any, role as Any]) as! QVariant }
    public func IconProvider() -> QFileIconProvider { callLocalFunction(l: ["", Pointer(), ___className, "IconProvider"]) as! QFileIconProvider }
    override public func ConnectIndex(f: @escaping (_ row: Int, _ column: Int, _ parent: QModelIndex) -> QModelIndex) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectIndex", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float), inp[2] as! QModelIndex) } as Any) }
    override public func DisconnectIndex() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectIndex"]) }
    override public func Index(row: Int, column: Int, parent: QModelIndex_ITF? = nil) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "Index", row as Any, column as Any, parent as Any]) as! QModelIndex }
    public func IndexDefault(row: Int, column: Int, parent: QModelIndex_ITF? = nil) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "IndexDefault", row as Any, column as Any, parent as Any]) as! QModelIndex }
    public func Index2(path: String, column: Int) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "Index2", path as Any, column as Any]) as! QModelIndex }
    public func IsDir(index: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsDir", index as Any]) as! Bool }
    public func IsReadOnly() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsReadOnly"]) as! Bool }
    public func LazyChildCount() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "LazyChildCount"]) as! Bool }
    override public func MimeDataDefault(indexes: [QModelIndex]) -> QMimeData { callLocalFunction(l: ["", Pointer(), ___className, "MimeDataDefault", indexes as Any]) as! QMimeData }
    override public func MimeTypesDefault() -> [String] { callLocalFunction(l: ["", Pointer(), ___className, "MimeTypesDefault"]) as! [String] }
    public func Mkdir(parent: QModelIndex_ITF? = nil, name: String) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "Mkdir", parent as Any, name as Any]) as! QModelIndex }
    public func NameFilters() -> [String] { callLocalFunction(l: ["", Pointer(), ___className, "NameFilters"]) as! [String] }
    override public func ConnectParent_QAbstractItemModel(f: @escaping (_ child: QModelIndex) -> QModelIndex) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectParent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    override public func DisconnectParent_QAbstractItemModel() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectParent"]) }
    override public func Parent_QAbstractItemModel(index: QModelIndex_ITF? = nil) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "Parent", index as Any]) as! QModelIndex }
    public func ParentDefault_QAbstractItemModel(child: QModelIndex_ITF? = nil) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "ParentDefault", child as Any]) as! QModelIndex }
    public func ConnectRefresh(f: @escaping (_ parent: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRefresh", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    public func DisconnectRefresh() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRefresh"]) }
    public func Refresh(parent: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Refresh", parent as Any]) }
    public func RefreshDefault(parent: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RefreshDefault", parent as Any]) }
    public func Remove(index: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "Remove", index as Any]) as! Bool }
    public func ResolveSymlinks() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "ResolveSymlinks"]) as! Bool }
    public func Rmdir(index: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "Rmdir", index as Any]) as! Bool }
    override public func ConnectRowCount(f: @escaping (_ parent: QModelIndex) -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRowCount", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    override public func DisconnectRowCount() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRowCount"]) }
    override public func RowCount(parent: QModelIndex_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "RowCount", parent as Any]) as! Float) }
    public func RowCountDefault(parent: QModelIndex_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "RowCountDefault", parent as Any]) as! Float) }
    override public func SetDataDefault(index: QModelIndex_ITF? = nil, value: QVariant_ITF? = nil, role: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "SetDataDefault", index as Any, value as Any, role as Any]) as! Bool }
    public func SetFilter(filters: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFilter", filters as Any]) }
    public func SetIconProvider(provider: QFileIconProvider_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIconProvider", provider as Any]) }
    public func SetLazyChildCount(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetLazyChildCount", enable as Any]) }
    public func SetNameFilters(filters: [String]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetNameFilters", filters as Any]) }
    public func SetReadOnly(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetReadOnly", enable as Any]) }
    public func SetResolveSymlinks(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetResolveSymlinks", enable as Any]) }
    public func SetSorting(sort: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSorting", sort as Any]) }
    override public func SortDefault(column: Int, order: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SortDefault", column as Any, order as Any]) }
    public func Sorting() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Sorting"]) as! Float) }
    override public func SupportedDropActionsDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SupportedDropActionsDefault"]) as! Float) }
    public func ConnectDestroyQDirModel(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQDirModel", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQDirModel() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQDirModel"]) }
    public func DestroyQDirModel() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQDirModel"]) }
    public func DestroyQDirModelDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQDirModelDefault"]) }
    override public func BuddyDefault(index: QModelIndex_ITF? = nil) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "BuddyDefault", index as Any]) as! QModelIndex }
    override public func CanDropMimeDataDefault(data: QMimeData_ITF? = nil, action: Int, row: Int, column: Int, parent: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "CanDropMimeDataDefault", data as Any, action as Any, row as Any, column as Any, parent as Any]) as! Bool }
    override public func CanFetchMoreDefault(parent: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "CanFetchMoreDefault", parent as Any]) as! Bool }
    override public func FetchMoreDefault(parent: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "FetchMoreDefault", parent as Any]) }
    override public func InsertColumnsDefault(column: Int, count: Int, parent: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "InsertColumnsDefault", column as Any, count as Any, parent as Any]) as! Bool }
    override public func InsertRowsDefault(row: Int, count: Int, parent: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "InsertRowsDefault", row as Any, count as Any, parent as Any]) as! Bool }
    override public func ItemDataDefault(index: QModelIndex_ITF? = nil) -> [Int: QVariant] { callLocalFunction(l: ["", Pointer(), ___className, "ItemDataDefault", index as Any]) as! [Int: QVariant] }
    override public func MatchDefault(start: QModelIndex_ITF? = nil, role: Int, value: QVariant_ITF? = nil, hits: Int, flags: Int) -> [QModelIndex] { callLocalFunction(l: ["", Pointer(), ___className, "MatchDefault", start as Any, role as Any, value as Any, hits as Any, flags as Any]) as! [QModelIndex] }
    override public func MoveColumnsDefault(sourceParent: QModelIndex_ITF? = nil, sourceColumn: Int, count: Int, destinationParent: QModelIndex_ITF? = nil, destinationChild: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "MoveColumnsDefault", sourceParent as Any, sourceColumn as Any, count as Any, destinationParent as Any, destinationChild as Any]) as! Bool }
    override public func MoveRowsDefault(sourceParent: QModelIndex_ITF? = nil, sourceRow: Int, count: Int, destinationParent: QModelIndex_ITF? = nil, destinationChild: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "MoveRowsDefault", sourceParent as Any, sourceRow as Any, count as Any, destinationParent as Any, destinationChild as Any]) as! Bool }
    override public func RemoveColumnsDefault(column: Int, count: Int, parent: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "RemoveColumnsDefault", column as Any, count as Any, parent as Any]) as! Bool }
    override public func RemoveRowsDefault(row: Int, count: Int, parent: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "RemoveRowsDefault", row as Any, count as Any, parent as Any]) as! Bool }
    override public func ResetInternalDataDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResetInternalDataDefault"]) }
    override public func RevertDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "RevertDefault"]) }
    override public func RoleNamesDefault() -> [Int: QByteArray] { callLocalFunction(l: ["", Pointer(), ___className, "RoleNamesDefault"]) as! [Int: QByteArray] }
    override public func SetHeaderDataDefault(section: Int, orientation: Int, value: QVariant_ITF? = nil, role: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "SetHeaderDataDefault", section as Any, orientation as Any, value as Any, role as Any]) as! Bool }
    override public func SetItemDataDefault(index: QModelIndex_ITF? = nil, roles: [Int: QVariant]) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "SetItemDataDefault", index as Any, roles as Any]) as! Bool }
    override public func SiblingDefault(row: Int, column: Int, index: QModelIndex_ITF? = nil) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "SiblingDefault", row as Any, column as Any, index as Any]) as! QModelIndex }
    override public func SpanDefault(index: QModelIndex_ITF? = nil) -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "SpanDefault", index as Any]) as! QSize }
    override public func SubmitDefault() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "SubmitDefault"]) as! Bool }
    override public func SupportedDragActionsDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SupportedDragActionsDefault"]) as! Float) }
    override public func ChildEventDefault(event: QChildEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ChildEventDefault", event as Any]) }
    override public func ConnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ConnectNotifyDefault", sign as Any]) }
    override public func CustomEventDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CustomEventDefault", event as Any]) }
    override public func DeleteLaterDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DeleteLaterDefault"]) }
    override public func DisconnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DisconnectNotifyDefault", sign as Any]) }
    override public func EventDefault(e: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventDefault", e as Any]) as! Bool }
    override public func EventFilterDefault(watched: QObject_ITF? = nil, event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventFilterDefault", watched as Any, event as Any]) as! Bool }
    override public func MetaObjectDefault() -> QMetaObject { callLocalFunction(l: ["", Pointer(), ___className, "MetaObjectDefault"]) as! QMetaObject }
    override public func TimerEventDefault(event: QTimerEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TimerEventDefault", event as Any]) }
}

public func NewQDirModelFromPointer(ptr: String) -> QDirModel { let r = QDirModel(); r.initFrom(p: ptr, n: "widgets.QDirModel"); return r }
public func NewQDirModel(nameFilters: [String], filters: Int, sort: Int, parent: QObject_ITF? = nil) -> QDirModel { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQDirModel", "", nameFilters as Any, filters as Any, sort as Any, parent as Any]) as! QDirModel }
public func NewQDirModel2(parent: QObject_ITF? = nil) -> QDirModel { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQDirModel2", "", parent as Any]) as! QDirModel }
public protocol QDockWidget_ITF: QWidget_ITF {
    func QDockWidget_PTR() -> QDockWidget
}

public class QDockWidget: QWidget, QDockWidget_ITF {
    public func QDockWidget_PTR() -> QDockWidget { callLocalFunction(l: ["", Pointer(), ___className, "QDockWidget_PTR"]) as! QDockWidget }
    public func AllowedAreas() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "AllowedAreas"]) as! Float) }
    public func ConnectAllowedAreasChanged(f: @escaping (_ allowedAreas: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectAllowedAreasChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectAllowedAreasChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectAllowedAreasChanged"]) }
    public func AllowedAreasChanged(allowedAreas: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AllowedAreasChanged", allowedAreas as Any]) }
    public func ConnectDockLocationChanged(f: @escaping (_ area: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDockLocationChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectDockLocationChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDockLocationChanged"]) }
    public func DockLocationChanged(area: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DockLocationChanged", area as Any]) }
    public func Features() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Features"]) as! Float) }
    public func ConnectFeaturesChanged(f: @escaping (_ features: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectFeaturesChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectFeaturesChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectFeaturesChanged"]) }
    public func FeaturesChanged(features: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "FeaturesChanged", features as Any]) }
    public func InitStyleOption(option: QStyleOptionDockWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InitStyleOption", option as Any]) }
    public func IsAreaAllowed(area: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsAreaAllowed", area as Any]) as! Bool }
    public func IsFloating() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsFloating"]) as! Bool }
    public func SetAllowedAreas(areas: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAllowedAreas", areas as Any]) }
    public func SetFeatures(features: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFeatures", features as Any]) }
    public func SetFloating(floating: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFloating", floating as Any]) }
    public func SetTitleBarWidget(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTitleBarWidget", widget as Any]) }
    public func SetWidget(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWidget", widget as Any]) }
    public func TitleBarWidget() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "TitleBarWidget"]) as! QWidget }
    public func ToggleViewAction() -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "ToggleViewAction"]) as! QAction }
    public func ConnectTopLevelChanged(f: @escaping (_ topLevel: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTopLevelChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectTopLevelChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTopLevelChanged"]) }
    public func TopLevelChanged(topLevel: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TopLevelChanged", topLevel as Any]) }
    public func ConnectVisibilityChanged(f: @escaping (_ visible: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectVisibilityChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectVisibilityChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectVisibilityChanged"]) }
    public func VisibilityChanged(visible: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "VisibilityChanged", visible as Any]) }
    public func Widget() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "Widget"]) as! QWidget }
    public func ConnectDestroyQDockWidget(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQDockWidget", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQDockWidget() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQDockWidget"]) }
    public func DestroyQDockWidget() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQDockWidget"]) }
    public func DestroyQDockWidgetDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQDockWidgetDefault"]) }
}

public func NewQDockWidgetFromPointer(ptr: String) -> QDockWidget { let r = QDockWidget(); r.initFrom(p: ptr, n: "widgets.QDockWidget"); return r }
public func NewQDockWidget(title: String, parent: QWidget_ITF? = nil, flags: Int) -> QDockWidget { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQDockWidget", "", title as Any, parent as Any, flags as Any]) as! QDockWidget }
public func NewQDockWidget2(parent: QWidget_ITF? = nil, flags: Int) -> QDockWidget { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQDockWidget2", "", parent as Any, flags as Any]) as! QDockWidget }
public protocol QDoubleSpinBox_ITF: QAbstractSpinBox_ITF {
    func QDoubleSpinBox_PTR() -> QDoubleSpinBox
}

public class QDoubleSpinBox: QAbstractSpinBox, QDoubleSpinBox_ITF {
    public func QDoubleSpinBox_PTR() -> QDoubleSpinBox { callLocalFunction(l: ["", Pointer(), ___className, "QDoubleSpinBox_PTR"]) as! QDoubleSpinBox }
    public func CleanText() -> String { callLocalFunction(l: ["", Pointer(), ___className, "CleanText"]) as! String }
    public func Decimals() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Decimals"]) as! Float) }
    public func Maximum() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "Maximum"]) as! Float }
    public func Minimum() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "Minimum"]) as! Float }
    public func Prefix() -> String { callLocalFunction(l: ["", Pointer(), ___className, "Prefix"]) as! String }
    public func SetDecimals(prec: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDecimals", prec as Any]) }
    public func SetMaximum(max: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMaximum", max as Any]) }
    public func SetMinimum(mi: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMinimum", mi as Any]) }
    public func SetPrefix(prefix: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPrefix", prefix as Any]) }
    public func SetRange(minimum: Float, maximum: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRange", minimum as Any, maximum as Any]) }
    public func SetSingleStep(val: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSingleStep", val as Any]) }
    public func SetStepType(stepType: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStepType", stepType as Any]) }
    public func SetSuffix(suffix: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSuffix", suffix as Any]) }
    public func ConnectSetValue(f: @escaping (_ val: Float) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetValue", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Float) } as Any) }
    public func DisconnectSetValue() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetValue"]) }
    public func SetValue(val: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetValue", val as Any]) }
    public func SetValueDefault(val: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetValueDefault", val as Any]) }
    public func SingleStep() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "SingleStep"]) as! Float }
    public func StepType() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "StepType"]) as! Float) }
    public func Suffix() -> String { callLocalFunction(l: ["", Pointer(), ___className, "Suffix"]) as! String }
    public func ConnectTextFromValue(f: @escaping (_ value: Float) -> String) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTextFromValue", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Float) } as Any) }
    public func DisconnectTextFromValue() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTextFromValue"]) }
    public func TextFromValue(value: Float) -> String { callLocalFunction(l: ["", Pointer(), ___className, "TextFromValue", value as Any]) as! String }
    public func TextFromValueDefault(value: Float) -> String { callLocalFunction(l: ["", Pointer(), ___className, "TextFromValueDefault", value as Any]) as! String }
    public func Value() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "Value"]) as! Float }
    public func ConnectValueChanged(f: @escaping (_ d: Float) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectValueChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Float) } as Any) }
    public func DisconnectValueChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectValueChanged"]) }
    public func ValueChanged(d: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ValueChanged", d as Any]) }
    public func ConnectValueChanged2(f: @escaping (_ text: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectValueChanged2", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectValueChanged2() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectValueChanged2"]) }
    public func ValueChanged2(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ValueChanged2", text as Any]) }
    public func ConnectValueFromText(f: @escaping (_ text: String) -> Float) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectValueFromText", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectValueFromText() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectValueFromText"]) }
    public func ValueFromText(text: String) -> Float { callLocalFunction(l: ["", Pointer(), ___className, "ValueFromText", text as Any]) as! Float }
    public func ValueFromTextDefault(text: String) -> Float { callLocalFunction(l: ["", Pointer(), ___className, "ValueFromTextDefault", text as Any]) as! Float }
    public func ConnectDestroyQDoubleSpinBox(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQDoubleSpinBox", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQDoubleSpinBox() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQDoubleSpinBox"]) }
    public func DestroyQDoubleSpinBox() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQDoubleSpinBox"]) }
    public func DestroyQDoubleSpinBoxDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQDoubleSpinBoxDefault"]) }
}

public func NewQDoubleSpinBoxFromPointer(ptr: String) -> QDoubleSpinBox { let r = QDoubleSpinBox(); r.initFrom(p: ptr, n: "widgets.QDoubleSpinBox"); return r }
public func NewQDoubleSpinBox(parent: QWidget_ITF? = nil) -> QDoubleSpinBox { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQDoubleSpinBox", "", parent as Any]) as! QDoubleSpinBox }
public protocol QErrorMessage_ITF: QDialog_ITF {
    func QErrorMessage_PTR() -> QErrorMessage
}

public class QErrorMessage: QDialog, QErrorMessage_ITF {
    public func QErrorMessage_PTR() -> QErrorMessage { callLocalFunction(l: ["", Pointer(), ___className, "QErrorMessage_PTR"]) as! QErrorMessage }
    override public func ConnectDone(f: @escaping (_ a: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDone", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    override public func DisconnectDone() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDone"]) }
    override public func Done(r: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Done", r as Any]) }
    override public func DoneDefault(r: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DoneDefault", r as Any]) }
    public func QtHandler() -> QErrorMessage { callLocalFunction(l: ["", Pointer(), ___className, "QtHandler"]) as! QErrorMessage }
    public func ConnectShowMessage(f: @escaping (_ message: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectShowMessage", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectShowMessage() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectShowMessage"]) }
    public func ShowMessage(message: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowMessage", message as Any]) }
    public func ShowMessageDefault(message: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowMessageDefault", message as Any]) }
    public func ConnectShowMessage2(f: @escaping (_ message: String, _ ty: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectShowMessage2", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String, inp[1] as! String) } as Any) }
    public func DisconnectShowMessage2() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectShowMessage2"]) }
    public func ShowMessage2(message: String, ty: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowMessage2", message as Any, ty as Any]) }
    public func ShowMessage2Default(message: String, ty: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowMessage2Default", message as Any, ty as Any]) }
    public func ConnectDestroyQErrorMessage(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQErrorMessage", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQErrorMessage() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQErrorMessage"]) }
    public func DestroyQErrorMessage() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQErrorMessage"]) }
    public func DestroyQErrorMessageDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQErrorMessageDefault"]) }
}

public func NewQErrorMessageFromPointer(ptr: String) -> QErrorMessage { let r = QErrorMessage(); r.initFrom(p: ptr, n: "widgets.QErrorMessage"); return r }
public func NewQErrorMessage(parent: QWidget_ITF? = nil) -> QErrorMessage { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQErrorMessage", "", parent as Any]) as! QErrorMessage }
public func QErrorMessage_QtHandler() -> QErrorMessage { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QErrorMessage_QtHandler", ""]) as! QErrorMessage }
public protocol QFileDialog_ITF: QDialog_ITF {
    func QFileDialog_PTR() -> QFileDialog
}

public class QFileDialog: QDialog, QFileDialog_ITF {
    public func QFileDialog_PTR() -> QFileDialog { callLocalFunction(l: ["", Pointer(), ___className, "QFileDialog_PTR"]) as! QFileDialog }
    override public func ConnectAccept(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectAccept", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectAccept() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectAccept"]) }
    override public func Accept() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Accept"]) }
    override public func AcceptDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "AcceptDefault"]) }
    public func AcceptMode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "AcceptMode"]) as! Float) }
    public func ConfirmOverwrite() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "ConfirmOverwrite"]) as! Bool }
    public func ConnectCurrentChanged(f: @escaping (_ path: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCurrentChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectCurrentChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCurrentChanged"]) }
    public func CurrentChanged(path: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CurrentChanged", path as Any]) }
    public func ConnectCurrentUrlChanged(f: @escaping (_ url: QUrl) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCurrentUrlChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QUrl) } as Any) }
    public func DisconnectCurrentUrlChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCurrentUrlChanged"]) }
    public func CurrentUrlChanged(url: QUrl_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CurrentUrlChanged", url as Any]) }
    public func DefaultSuffix() -> String { callLocalFunction(l: ["", Pointer(), ___className, "DefaultSuffix"]) as! String }
    public func Directory() -> QDir { callLocalFunction(l: ["", Pointer(), ___className, "Directory"]) as! QDir }
    public func ConnectDirectoryEntered(f: @escaping (_ directory: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDirectoryEntered", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectDirectoryEntered() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDirectoryEntered"]) }
    public func DirectoryEntered(directory: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DirectoryEntered", directory as Any]) }
    public func DirectoryUrl() -> QUrl { callLocalFunction(l: ["", Pointer(), ___className, "DirectoryUrl"]) as! QUrl }
    public func ConnectDirectoryUrlEntered(f: @escaping (_ directory: QUrl) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDirectoryUrlEntered", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QUrl) } as Any) }
    public func DisconnectDirectoryUrlEntered() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDirectoryUrlEntered"]) }
    public func DirectoryUrlEntered(directory: QUrl_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DirectoryUrlEntered", directory as Any]) }
    override public func ConnectDone(f: @escaping (_ result: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDone", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    override public func DisconnectDone() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDone"]) }
    override public func Done(r: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Done", r as Any]) }
    override public func DoneDefault(r: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DoneDefault", r as Any]) }
    public func FileMode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "FileMode"]) as! Float) }
    public func ConnectFileSelected(f: @escaping (_ file: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectFileSelected", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectFileSelected() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectFileSelected"]) }
    public func FileSelected(file: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "FileSelected", file as Any]) }
    public func ConnectFilesSelected(f: @escaping (_ selected: [String]) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectFilesSelected", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! [String]) } as Any) }
    public func DisconnectFilesSelected() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectFilesSelected"]) }
    public func FilesSelected(selected: [String]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "FilesSelected", selected as Any]) }
    public func Filter() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Filter"]) as! Float) }
    public func ConnectFilterSelected(f: @escaping (_ filter: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectFilterSelected", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectFilterSelected() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectFilterSelected"]) }
    public func FilterSelected(filter: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "FilterSelected", filter as Any]) }
    public func GetExistingDirectory(parent: QWidget_ITF? = nil, caption: String, dir: String, options: Int) -> String { callLocalFunction(l: ["", Pointer(), ___className, "GetExistingDirectory", parent as Any, caption as Any, dir as Any, options as Any]) as! String }
    public func GetExistingDirectoryUrl(parent: QWidget_ITF? = nil, caption: String, dir: QUrl_ITF? = nil, options: Int, supportedSchemes: [String]) -> QUrl { callLocalFunction(l: ["", Pointer(), ___className, "GetExistingDirectoryUrl", parent as Any, caption as Any, dir as Any, options as Any, supportedSchemes as Any]) as! QUrl }
    public func GetOpenFileName(parent: QWidget_ITF? = nil, caption: String, dir: String, filter: String, selectedFilter: String, options: Int) -> String { callLocalFunction(l: ["", Pointer(), ___className, "GetOpenFileName", parent as Any, caption as Any, dir as Any, filter as Any, selectedFilter as Any, options as Any]) as! String }
    public func GetOpenFileNames(parent: QWidget_ITF? = nil, caption: String, dir: String, filter: String, selectedFilter: String, options: Int) -> [String] { callLocalFunction(l: ["", Pointer(), ___className, "GetOpenFileNames", parent as Any, caption as Any, dir as Any, filter as Any, selectedFilter as Any, options as Any]) as! [String] }
    public func GetOpenFileUrl(parent: QWidget_ITF? = nil, caption: String, dir: QUrl_ITF? = nil, filter: String, selectedFilter: String, options: Int, supportedSchemes: [String]) -> QUrl { callLocalFunction(l: ["", Pointer(), ___className, "GetOpenFileUrl", parent as Any, caption as Any, dir as Any, filter as Any, selectedFilter as Any, options as Any, supportedSchemes as Any]) as! QUrl }
    public func GetOpenFileUrls(parent: QWidget_ITF? = nil, caption: String, dir: QUrl_ITF? = nil, filter: String, selectedFilter: String, options: Int, supportedSchemes: [String]) -> [QUrl] { callLocalFunction(l: ["", Pointer(), ___className, "GetOpenFileUrls", parent as Any, caption as Any, dir as Any, filter as Any, selectedFilter as Any, options as Any, supportedSchemes as Any]) as! [QUrl] }
    public func GetSaveFileName(parent: QWidget_ITF? = nil, caption: String, dir: String, filter: String, selectedFilter: String, options: Int) -> String { callLocalFunction(l: ["", Pointer(), ___className, "GetSaveFileName", parent as Any, caption as Any, dir as Any, filter as Any, selectedFilter as Any, options as Any]) as! String }
    public func GetSaveFileUrl(parent: QWidget_ITF? = nil, caption: String, dir: QUrl_ITF? = nil, filter: String, selectedFilter: String, options: Int, supportedSchemes: [String]) -> QUrl { callLocalFunction(l: ["", Pointer(), ___className, "GetSaveFileUrl", parent as Any, caption as Any, dir as Any, filter as Any, selectedFilter as Any, options as Any, supportedSchemes as Any]) as! QUrl }
    public func History() -> [String] { callLocalFunction(l: ["", Pointer(), ___className, "History"]) as! [String] }
    public func IconProvider() -> QFileIconProvider { callLocalFunction(l: ["", Pointer(), ___className, "IconProvider"]) as! QFileIconProvider }
    public func IsNameFilterDetailsVisible() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsNameFilterDetailsVisible"]) as! Bool }
    public func IsReadOnly() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsReadOnly"]) as! Bool }
    public func ItemDelegate() -> QAbstractItemDelegate { callLocalFunction(l: ["", Pointer(), ___className, "ItemDelegate"]) as! QAbstractItemDelegate }
    public func LabelText(label: Int) -> String { callLocalFunction(l: ["", Pointer(), ___className, "LabelText", label as Any]) as! String }
    public func MimeTypeFilters() -> [String] { callLocalFunction(l: ["", Pointer(), ___className, "MimeTypeFilters"]) as! [String] }
    public func NameFilters() -> [String] { callLocalFunction(l: ["", Pointer(), ___className, "NameFilters"]) as! [String] }
    public func Open_QFileDialog(receiver: QObject_ITF? = nil, member: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Open", receiver as Any, member as Any]) }
    public func Options() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Options"]) as! Float) }
    public func ProxyModel() -> QAbstractProxyModel { callLocalFunction(l: ["", Pointer(), ___className, "ProxyModel"]) as! QAbstractProxyModel }
    public func ResolveSymlinks() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "ResolveSymlinks"]) as! Bool }
    public func RestoreState(state: QByteArray_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "RestoreState", state as Any]) as! Bool }
    public func SaveState() -> QByteArray { callLocalFunction(l: ["", Pointer(), ___className, "SaveState"]) as! QByteArray }
    public func SelectFile(filename: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SelectFile", filename as Any]) }
    public func SelectMimeTypeFilter(filter: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SelectMimeTypeFilter", filter as Any]) }
    public func SelectNameFilter(filter: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SelectNameFilter", filter as Any]) }
    public func SelectUrl(url: QUrl_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SelectUrl", url as Any]) }
    public func SelectedFiles() -> [String] { callLocalFunction(l: ["", Pointer(), ___className, "SelectedFiles"]) as! [String] }
    public func SelectedMimeTypeFilter() -> String { callLocalFunction(l: ["", Pointer(), ___className, "SelectedMimeTypeFilter"]) as! String }
    public func SelectedNameFilter() -> String { callLocalFunction(l: ["", Pointer(), ___className, "SelectedNameFilter"]) as! String }
    public func SelectedUrls() -> [QUrl] { callLocalFunction(l: ["", Pointer(), ___className, "SelectedUrls"]) as! [QUrl] }
    public func SetAcceptMode(mode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAcceptMode", mode as Any]) }
    public func SetConfirmOverwrite(enabled: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetConfirmOverwrite", enabled as Any]) }
    public func SetDefaultSuffix(suffix: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDefaultSuffix", suffix as Any]) }
    public func SetDirectory(directory: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDirectory", directory as Any]) }
    public func SetDirectory2(directory: QDir_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDirectory2", directory as Any]) }
    public func SetDirectoryUrl(directory: QUrl_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDirectoryUrl", directory as Any]) }
    public func SetFileMode(mode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFileMode", mode as Any]) }
    public func SetFilter(filters: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFilter", filters as Any]) }
    public func SetHistory(paths: [String]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetHistory", paths as Any]) }
    public func SetIconProvider(provider: QFileIconProvider_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIconProvider", provider as Any]) }
    public func SetItemDelegate(delegate: QAbstractItemDelegate_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetItemDelegate", delegate as Any]) }
    public func SetLabelText(label: Int, text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetLabelText", label as Any, text as Any]) }
    public func SetMimeTypeFilters(filters: [String]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMimeTypeFilters", filters as Any]) }
    public func SetNameFilter(filter: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetNameFilter", filter as Any]) }
    public func SetNameFilterDetailsVisible(enabled: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetNameFilterDetailsVisible", enabled as Any]) }
    public func SetNameFilters(filters: [String]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetNameFilters", filters as Any]) }
    public func SetOption(option: Int, on: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOption", option as Any, on as Any]) }
    public func SetOptions(options: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOptions", options as Any]) }
    public func SetProxyModel(proxyModel: QAbstractProxyModel_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetProxyModel", proxyModel as Any]) }
    public func SetReadOnly(enabled: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetReadOnly", enabled as Any]) }
    public func SetResolveSymlinks(enabled: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetResolveSymlinks", enabled as Any]) }
    public func SetSidebarUrls(urls: [QUrl]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSidebarUrls", urls as Any]) }
    public func SetSupportedSchemes(schemes: [String]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSupportedSchemes", schemes as Any]) }
    public func SetViewMode(mode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetViewMode", mode as Any]) }
    public func SidebarUrls() -> [QUrl] { callLocalFunction(l: ["", Pointer(), ___className, "SidebarUrls"]) as! [QUrl] }
    public func SupportedSchemes() -> [String] { callLocalFunction(l: ["", Pointer(), ___className, "SupportedSchemes"]) as! [String] }
    public func TestOption(option: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "TestOption", option as Any]) as! Bool }
    public func ConnectUrlSelected(f: @escaping (_ url: QUrl) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectUrlSelected", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QUrl) } as Any) }
    public func DisconnectUrlSelected() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectUrlSelected"]) }
    public func UrlSelected(url: QUrl_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "UrlSelected", url as Any]) }
    public func ConnectUrlsSelected(f: @escaping (_ urls: [QUrl]) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectUrlsSelected", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! [QUrl]) } as Any) }
    public func DisconnectUrlsSelected() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectUrlsSelected"]) }
    public func UrlsSelected(urls: [QUrl]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "UrlsSelected", urls as Any]) }
    public func ViewMode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ViewMode"]) as! Float) }
    public func ConnectDestroyQFileDialog(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQFileDialog", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQFileDialog() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQFileDialog"]) }
    public func DestroyQFileDialog() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQFileDialog"]) }
    public func DestroyQFileDialogDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQFileDialogDefault"]) }
}

public func NewQFileDialogFromPointer(ptr: String) -> QFileDialog { let r = QFileDialog(); r.initFrom(p: ptr, n: "widgets.QFileDialog"); return r }
public func NewQFileDialog(parent: QWidget_ITF? = nil, flags: Int) -> QFileDialog { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQFileDialog", "", parent as Any, flags as Any]) as! QFileDialog }
public func NewQFileDialog2(parent: QWidget_ITF? = nil, caption: String, directory: String, filter: String) -> QFileDialog { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQFileDialog2", "", parent as Any, caption as Any, directory as Any, filter as Any]) as! QFileDialog }
public func QFileDialog_GetExistingDirectory(parent: QWidget_ITF? = nil, caption: String, dir: String, options: Int) -> String { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QFileDialog_GetExistingDirectory", "", parent as Any, caption as Any, dir as Any, options as Any]) as! String }
public func QFileDialog_GetExistingDirectoryUrl(parent: QWidget_ITF? = nil, caption: String, dir: QUrl_ITF? = nil, options: Int, supportedSchemes: [String]) -> QUrl { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QFileDialog_GetExistingDirectoryUrl", "", parent as Any, caption as Any, dir as Any, options as Any, supportedSchemes as Any]) as! QUrl }
public func QFileDialog_GetOpenFileName(parent: QWidget_ITF? = nil, caption: String, dir: String, filter: String, selectedFilter: String, options: Int) -> String { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QFileDialog_GetOpenFileName", "", parent as Any, caption as Any, dir as Any, filter as Any, selectedFilter as Any, options as Any]) as! String }
public func QFileDialog_GetOpenFileNames(parent: QWidget_ITF? = nil, caption: String, dir: String, filter: String, selectedFilter: String, options: Int) -> [String] { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QFileDialog_GetOpenFileNames", "", parent as Any, caption as Any, dir as Any, filter as Any, selectedFilter as Any, options as Any]) as! [String] }
public func QFileDialog_GetOpenFileUrl(parent: QWidget_ITF? = nil, caption: String, dir: QUrl_ITF? = nil, filter: String, selectedFilter: String, options: Int, supportedSchemes: [String]) -> QUrl { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QFileDialog_GetOpenFileUrl", "", parent as Any, caption as Any, dir as Any, filter as Any, selectedFilter as Any, options as Any, supportedSchemes as Any]) as! QUrl }
public func QFileDialog_GetOpenFileUrls(parent: QWidget_ITF? = nil, caption: String, dir: QUrl_ITF? = nil, filter: String, selectedFilter: String, options: Int, supportedSchemes: [String]) -> [QUrl] { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QFileDialog_GetOpenFileUrls", "", parent as Any, caption as Any, dir as Any, filter as Any, selectedFilter as Any, options as Any, supportedSchemes as Any]) as! [QUrl] }
public func QFileDialog_GetSaveFileName(parent: QWidget_ITF? = nil, caption: String, dir: String, filter: String, selectedFilter: String, options: Int) -> String { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QFileDialog_GetSaveFileName", "", parent as Any, caption as Any, dir as Any, filter as Any, selectedFilter as Any, options as Any]) as! String }
public func QFileDialog_GetSaveFileUrl(parent: QWidget_ITF? = nil, caption: String, dir: QUrl_ITF? = nil, filter: String, selectedFilter: String, options: Int, supportedSchemes: [String]) -> QUrl { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QFileDialog_GetSaveFileUrl", "", parent as Any, caption as Any, dir as Any, filter as Any, selectedFilter as Any, options as Any, supportedSchemes as Any]) as! QUrl }
public protocol QFileIconProvider_ITF {
    func QFileIconProvider_PTR() -> QFileIconProvider
}

public class QFileIconProvider: Internal, QFileIconProvider_ITF {
    public func QFileIconProvider_PTR() -> QFileIconProvider { callLocalFunction(l: ["", Pointer(), ___className, "QFileIconProvider_PTR"]) as! QFileIconProvider }
    public func ConnectIcon(f: @escaping (_ ty: Int) -> QIcon) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectIcon", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectIcon() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectIcon"]) }
    public func Icon(ty: Int) -> QIcon { callLocalFunction(l: ["", Pointer(), ___className, "Icon", ty as Any]) as! QIcon }
    public func IconDefault(ty: Int) -> QIcon { callLocalFunction(l: ["", Pointer(), ___className, "IconDefault", ty as Any]) as! QIcon }
    public func ConnectIcon2(f: @escaping (_ info: QFileInfo) -> QIcon) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectIcon2", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QFileInfo) } as Any) }
    public func DisconnectIcon2() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectIcon2"]) }
    public func Icon2(info: QFileInfo_ITF? = nil) -> QIcon { callLocalFunction(l: ["", Pointer(), ___className, "Icon2", info as Any]) as! QIcon }
    public func Icon2Default(info: QFileInfo_ITF? = nil) -> QIcon { callLocalFunction(l: ["", Pointer(), ___className, "Icon2Default", info as Any]) as! QIcon }
    public func Options() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Options"]) as! Float) }
    public func SetOptions(options: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOptions", options as Any]) }
    public func ConnectType(f: @escaping (_ info: QFileInfo) -> String) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectType", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QFileInfo) } as Any) }
    public func DisconnectType() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectType"]) }
    public func Type(info: QFileInfo_ITF? = nil) -> String { callLocalFunction(l: ["", Pointer(), ___className, "Type", info as Any]) as! String }
    public func TypeDefault(info: QFileInfo_ITF? = nil) -> String { callLocalFunction(l: ["", Pointer(), ___className, "TypeDefault", info as Any]) as! String }
    public func ConnectDestroyQFileIconProvider(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQFileIconProvider", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQFileIconProvider() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQFileIconProvider"]) }
    public func DestroyQFileIconProvider() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQFileIconProvider"]) }
    public func DestroyQFileIconProviderDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQFileIconProviderDefault"]) }
}

public func NewQFileIconProviderFromPointer(ptr: String) -> QFileIconProvider { let r = QFileIconProvider(); r.initFrom(p: ptr, n: "widgets.QFileIconProvider"); return r }
public func NewQFileIconProvider() -> QFileIconProvider { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQFileIconProvider", ""]) as! QFileIconProvider }
public protocol QFileSystemModel_ITF: QAbstractItemModel_ITF {
    func QFileSystemModel_PTR() -> QFileSystemModel
}

public class QFileSystemModel: QAbstractItemModel, QFileSystemModel_ITF {
    public func QFileSystemModel_PTR() -> QFileSystemModel { callLocalFunction(l: ["", Pointer(), ___className, "QFileSystemModel_PTR"]) as! QFileSystemModel }
    override public func CanFetchMoreDefault(parent: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "CanFetchMoreDefault", parent as Any]) as! Bool }
    override public func ConnectColumnCount(f: @escaping (_ parent: QModelIndex) -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectColumnCount", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    override public func DisconnectColumnCount() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectColumnCount"]) }
    override public func ColumnCount(parent: QModelIndex_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ColumnCount", parent as Any]) as! Float) }
    public func ColumnCountDefault(parent: QModelIndex_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ColumnCountDefault", parent as Any]) as! Float) }
    override public func ConnectData(f: @escaping (_ index: QModelIndex, _ role: Int) -> QVariant) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectData", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex, Int(inp[1] as! Float)) } as Any) }
    override public func DisconnectData() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectData"]) }
    override public func Data(index: QModelIndex_ITF? = nil, role: Int) -> QVariant { callLocalFunction(l: ["", Pointer(), ___className, "Data", index as Any, role as Any]) as! QVariant }
    public func DataDefault(index: QModelIndex_ITF? = nil, role: Int) -> QVariant { callLocalFunction(l: ["", Pointer(), ___className, "DataDefault", index as Any, role as Any]) as! QVariant }
    public func ConnectDirectoryLoaded(f: @escaping (_ path: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDirectoryLoaded", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectDirectoryLoaded() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDirectoryLoaded"]) }
    public func DirectoryLoaded(path: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DirectoryLoaded", path as Any]) }
    override public func DropMimeDataDefault(data: QMimeData_ITF? = nil, action: Int, row: Int, column: Int, parent: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "DropMimeDataDefault", data as Any, action as Any, row as Any, column as Any, parent as Any]) as! Bool }
    public func EventDefault(event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventDefault", event as Any]) as! Bool }
    override public func FetchMoreDefault(parent: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "FetchMoreDefault", parent as Any]) }
    public func FileIcon(index: QModelIndex_ITF? = nil) -> QIcon { callLocalFunction(l: ["", Pointer(), ___className, "FileIcon", index as Any]) as! QIcon }
    public func FileInfo(index: QModelIndex_ITF? = nil) -> QFileInfo { callLocalFunction(l: ["", Pointer(), ___className, "FileInfo", index as Any]) as! QFileInfo }
    public func FileName(index: QModelIndex_ITF? = nil) -> String { callLocalFunction(l: ["", Pointer(), ___className, "FileName", index as Any]) as! String }
    public func FilePath(index: QModelIndex_ITF? = nil) -> String { callLocalFunction(l: ["", Pointer(), ___className, "FilePath", index as Any]) as! String }
    public func ConnectFileRenamed(f: @escaping (_ path: String, _ oldName: String, _ newName: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectFileRenamed", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String, inp[1] as! String, inp[2] as! String) } as Any) }
    public func DisconnectFileRenamed() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectFileRenamed"]) }
    public func FileRenamed(path: String, oldName: String, newName: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "FileRenamed", path as Any, oldName as Any, newName as Any]) }
    public func Filter() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Filter"]) as! Float) }
    override public func FlagsDefault(index: QModelIndex_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "FlagsDefault", index as Any]) as! Float) }
    override public func HasChildrenDefault(parent: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "HasChildrenDefault", parent as Any]) as! Bool }
    override public func HeaderDataDefault(section: Int, orientation: Int, role: Int) -> QVariant { callLocalFunction(l: ["", Pointer(), ___className, "HeaderDataDefault", section as Any, orientation as Any, role as Any]) as! QVariant }
    public func IconProvider() -> QFileIconProvider { callLocalFunction(l: ["", Pointer(), ___className, "IconProvider"]) as! QFileIconProvider }
    override public func ConnectIndex(f: @escaping (_ row: Int, _ column: Int, _ parent: QModelIndex) -> QModelIndex) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectIndex", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float), inp[2] as! QModelIndex) } as Any) }
    override public func DisconnectIndex() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectIndex"]) }
    override public func Index(row: Int, column: Int, parent: QModelIndex_ITF? = nil) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "Index", row as Any, column as Any, parent as Any]) as! QModelIndex }
    public func IndexDefault(row: Int, column: Int, parent: QModelIndex_ITF? = nil) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "IndexDefault", row as Any, column as Any, parent as Any]) as! QModelIndex }
    public func Index2(path: String, column: Int) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "Index2", path as Any, column as Any]) as! QModelIndex }
    public func IsDir(index: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsDir", index as Any]) as! Bool }
    public func IsReadOnly() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsReadOnly"]) as! Bool }
    public func LastModified(index: QModelIndex_ITF? = nil) -> QDateTime { callLocalFunction(l: ["", Pointer(), ___className, "LastModified", index as Any]) as! QDateTime }
    override public func MimeDataDefault(indexes: [QModelIndex]) -> QMimeData { callLocalFunction(l: ["", Pointer(), ___className, "MimeDataDefault", indexes as Any]) as! QMimeData }
    override public func MimeTypesDefault() -> [String] { callLocalFunction(l: ["", Pointer(), ___className, "MimeTypesDefault"]) as! [String] }
    public func Mkdir(parent: QModelIndex_ITF? = nil, name: String) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "Mkdir", parent as Any, name as Any]) as! QModelIndex }
    public func MyComputer(role: Int) -> QVariant { callLocalFunction(l: ["", Pointer(), ___className, "MyComputer", role as Any]) as! QVariant }
    public func NameFilterDisables() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "NameFilterDisables"]) as! Bool }
    public func NameFilters() -> [String] { callLocalFunction(l: ["", Pointer(), ___className, "NameFilters"]) as! [String] }
    override public func ConnectParent_QAbstractItemModel(f: @escaping (_ index: QModelIndex) -> QModelIndex) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectParent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    override public func DisconnectParent_QAbstractItemModel() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectParent"]) }
    override public func Parent_QAbstractItemModel(index: QModelIndex_ITF? = nil) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "Parent", index as Any]) as! QModelIndex }
    public func ParentDefault_QAbstractItemModel(index: QModelIndex_ITF? = nil) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "ParentDefault", index as Any]) as! QModelIndex }
    public func Remove(index: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "Remove", index as Any]) as! Bool }
    public func ResolveSymlinks() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "ResolveSymlinks"]) as! Bool }
    public func Rmdir(index: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "Rmdir", index as Any]) as! Bool }
    public func RootDirectory() -> QDir { callLocalFunction(l: ["", Pointer(), ___className, "RootDirectory"]) as! QDir }
    public func RootPath() -> String { callLocalFunction(l: ["", Pointer(), ___className, "RootPath"]) as! String }
    public func ConnectRootPathChanged(f: @escaping (_ newPath: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRootPathChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectRootPathChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRootPathChanged"]) }
    public func RootPathChanged(newPath: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RootPathChanged", newPath as Any]) }
    override public func ConnectRowCount(f: @escaping (_ parent: QModelIndex) -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRowCount", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    override public func DisconnectRowCount() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRowCount"]) }
    override public func RowCount(parent: QModelIndex_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "RowCount", parent as Any]) as! Float) }
    public func RowCountDefault(parent: QModelIndex_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "RowCountDefault", parent as Any]) as! Float) }
    public func SetDataDefault(idx: QModelIndex_ITF? = nil, value: QVariant_ITF? = nil, role: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "SetDataDefault", idx as Any, value as Any, role as Any]) as! Bool }
    public func SetFilter(filters: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFilter", filters as Any]) }
    public func SetIconProvider(provider: QFileIconProvider_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIconProvider", provider as Any]) }
    public func SetNameFilterDisables(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetNameFilterDisables", enable as Any]) }
    public func SetNameFilters(filters: [String]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetNameFilters", filters as Any]) }
    public func SetReadOnly(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetReadOnly", enable as Any]) }
    public func SetResolveSymlinks(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetResolveSymlinks", enable as Any]) }
    public func SetRootPath(newPath: String) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "SetRootPath", newPath as Any]) as! QModelIndex }
    public func SiblingDefault(row: Int, column: Int, idx: QModelIndex_ITF? = nil) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "SiblingDefault", row as Any, column as Any, idx as Any]) as! QModelIndex }
    public func Size(index: QModelIndex_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Size", index as Any]) as! Float) }
    override public func SortDefault(column: Int, order: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SortDefault", column as Any, order as Any]) }
    override public func SupportedDropActionsDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SupportedDropActionsDefault"]) as! Float) }
    override public func TimerEventDefault(event: QTimerEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TimerEventDefault", event as Any]) }
    public func Type(index: QModelIndex_ITF? = nil) -> String { callLocalFunction(l: ["", Pointer(), ___className, "Type", index as Any]) as! String }
    public func ConnectDestroyQFileSystemModel(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQFileSystemModel", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQFileSystemModel() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQFileSystemModel"]) }
    public func DestroyQFileSystemModel() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQFileSystemModel"]) }
    public func DestroyQFileSystemModelDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQFileSystemModelDefault"]) }
    override public func BuddyDefault(index: QModelIndex_ITF? = nil) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "BuddyDefault", index as Any]) as! QModelIndex }
    override public func CanDropMimeDataDefault(data: QMimeData_ITF? = nil, action: Int, row: Int, column: Int, parent: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "CanDropMimeDataDefault", data as Any, action as Any, row as Any, column as Any, parent as Any]) as! Bool }
    override public func InsertColumnsDefault(column: Int, count: Int, parent: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "InsertColumnsDefault", column as Any, count as Any, parent as Any]) as! Bool }
    override public func InsertRowsDefault(row: Int, count: Int, parent: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "InsertRowsDefault", row as Any, count as Any, parent as Any]) as! Bool }
    override public func ItemDataDefault(index: QModelIndex_ITF? = nil) -> [Int: QVariant] { callLocalFunction(l: ["", Pointer(), ___className, "ItemDataDefault", index as Any]) as! [Int: QVariant] }
    override public func MatchDefault(start: QModelIndex_ITF? = nil, role: Int, value: QVariant_ITF? = nil, hits: Int, flags: Int) -> [QModelIndex] { callLocalFunction(l: ["", Pointer(), ___className, "MatchDefault", start as Any, role as Any, value as Any, hits as Any, flags as Any]) as! [QModelIndex] }
    override public func MoveColumnsDefault(sourceParent: QModelIndex_ITF? = nil, sourceColumn: Int, count: Int, destinationParent: QModelIndex_ITF? = nil, destinationChild: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "MoveColumnsDefault", sourceParent as Any, sourceColumn as Any, count as Any, destinationParent as Any, destinationChild as Any]) as! Bool }
    override public func MoveRowsDefault(sourceParent: QModelIndex_ITF? = nil, sourceRow: Int, count: Int, destinationParent: QModelIndex_ITF? = nil, destinationChild: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "MoveRowsDefault", sourceParent as Any, sourceRow as Any, count as Any, destinationParent as Any, destinationChild as Any]) as! Bool }
    override public func RemoveColumnsDefault(column: Int, count: Int, parent: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "RemoveColumnsDefault", column as Any, count as Any, parent as Any]) as! Bool }
    override public func RemoveRowsDefault(row: Int, count: Int, parent: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "RemoveRowsDefault", row as Any, count as Any, parent as Any]) as! Bool }
    override public func ResetInternalDataDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResetInternalDataDefault"]) }
    override public func RevertDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "RevertDefault"]) }
    override public func RoleNamesDefault() -> [Int: QByteArray] { callLocalFunction(l: ["", Pointer(), ___className, "RoleNamesDefault"]) as! [Int: QByteArray] }
    override public func SetHeaderDataDefault(section: Int, orientation: Int, value: QVariant_ITF? = nil, role: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "SetHeaderDataDefault", section as Any, orientation as Any, value as Any, role as Any]) as! Bool }
    override public func SetItemDataDefault(index: QModelIndex_ITF? = nil, roles: [Int: QVariant]) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "SetItemDataDefault", index as Any, roles as Any]) as! Bool }
    override public func SpanDefault(index: QModelIndex_ITF? = nil) -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "SpanDefault", index as Any]) as! QSize }
    override public func SubmitDefault() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "SubmitDefault"]) as! Bool }
    override public func SupportedDragActionsDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SupportedDragActionsDefault"]) as! Float) }
    override public func ChildEventDefault(event: QChildEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ChildEventDefault", event as Any]) }
    override public func ConnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ConnectNotifyDefault", sign as Any]) }
    override public func CustomEventDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CustomEventDefault", event as Any]) }
    override public func DeleteLaterDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DeleteLaterDefault"]) }
    override public func DisconnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DisconnectNotifyDefault", sign as Any]) }
    override public func EventFilterDefault(watched: QObject_ITF? = nil, event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventFilterDefault", watched as Any, event as Any]) as! Bool }
    override public func MetaObjectDefault() -> QMetaObject { callLocalFunction(l: ["", Pointer(), ___className, "MetaObjectDefault"]) as! QMetaObject }
}

public func NewQFileSystemModelFromPointer(ptr: String) -> QFileSystemModel { let r = QFileSystemModel(); r.initFrom(p: ptr, n: "widgets.QFileSystemModel"); return r }
public func NewQFileSystemModel(parent: QObject_ITF? = nil) -> QFileSystemModel { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQFileSystemModel", "", parent as Any]) as! QFileSystemModel }
public protocol QFocusFrame_ITF: QWidget_ITF {
    func QFocusFrame_PTR() -> QFocusFrame
}

public class QFocusFrame: QWidget, QFocusFrame_ITF {
    public func QFocusFrame_PTR() -> QFocusFrame { callLocalFunction(l: ["", Pointer(), ___className, "QFocusFrame_PTR"]) as! QFocusFrame }
    public func InitStyleOption(option: QStyleOption_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InitStyleOption", option as Any]) }
    public func SetWidget(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWidget", widget as Any]) }
    public func Widget() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "Widget"]) as! QWidget }
    public func ConnectDestroyQFocusFrame(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQFocusFrame", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQFocusFrame() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQFocusFrame"]) }
    public func DestroyQFocusFrame() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQFocusFrame"]) }
    public func DestroyQFocusFrameDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQFocusFrameDefault"]) }
}

public func NewQFocusFrameFromPointer(ptr: String) -> QFocusFrame { let r = QFocusFrame(); r.initFrom(p: ptr, n: "widgets.QFocusFrame"); return r }
public func NewQFocusFrame(parent: QWidget_ITF? = nil) -> QFocusFrame { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQFocusFrame", "", parent as Any]) as! QFocusFrame }
public protocol QFontComboBox_ITF: QComboBox_ITF {
    func QFontComboBox_PTR() -> QFontComboBox
}

public class QFontComboBox: QComboBox, QFontComboBox_ITF {
    public func QFontComboBox_PTR() -> QFontComboBox { callLocalFunction(l: ["", Pointer(), ___className, "QFontComboBox_PTR"]) as! QFontComboBox }
    public func CurrentFont() -> QFont { callLocalFunction(l: ["", Pointer(), ___className, "CurrentFont"]) as! QFont }
    public func ConnectCurrentFontChanged(f: @escaping (_ font: QFont) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCurrentFontChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QFont) } as Any) }
    public func DisconnectCurrentFontChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCurrentFontChanged"]) }
    public func CurrentFontChanged(font: QFont_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CurrentFontChanged", font as Any]) }
    public func FontFilters() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "FontFilters"]) as! Float) }
    public func ConnectSetCurrentFont(f: @escaping (_ ff: QFont) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetCurrentFont", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QFont) } as Any) }
    public func DisconnectSetCurrentFont() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetCurrentFont"]) }
    public func SetCurrentFont(ff: QFont_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentFont", ff as Any]) }
    public func SetCurrentFontDefault(ff: QFont_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentFontDefault", ff as Any]) }
    public func SetFontFilters(filters: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFontFilters", filters as Any]) }
    public func SetWritingSystem(vqf: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWritingSystem", vqf as Any]) }
    public func ConnectDestroyQFontComboBox(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQFontComboBox", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQFontComboBox() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQFontComboBox"]) }
    public func DestroyQFontComboBox() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQFontComboBox"]) }
    public func DestroyQFontComboBoxDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQFontComboBoxDefault"]) }
}

public func NewQFontComboBoxFromPointer(ptr: String) -> QFontComboBox { let r = QFontComboBox(); r.initFrom(p: ptr, n: "widgets.QFontComboBox"); return r }
public func NewQFontComboBox(parent: QWidget_ITF? = nil) -> QFontComboBox { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQFontComboBox", "", parent as Any]) as! QFontComboBox }
public protocol QFontDialog_ITF: QDialog_ITF {
    func QFontDialog_PTR() -> QFontDialog
}

public class QFontDialog: QDialog, QFontDialog_ITF {
    public func QFontDialog_PTR() -> QFontDialog { callLocalFunction(l: ["", Pointer(), ___className, "QFontDialog_PTR"]) as! QFontDialog }
    public func CurrentFont() -> QFont { callLocalFunction(l: ["", Pointer(), ___className, "CurrentFont"]) as! QFont }
    public func ConnectCurrentFontChanged(f: @escaping (_ font: QFont) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCurrentFontChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QFont) } as Any) }
    public func DisconnectCurrentFontChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCurrentFontChanged"]) }
    public func CurrentFontChanged(font: QFont_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CurrentFontChanged", font as Any]) }
    override public func ConnectDone(f: @escaping (_ result: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDone", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    override public func DisconnectDone() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDone"]) }
    override public func Done(r: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Done", r as Any]) }
    override public func DoneDefault(r: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DoneDefault", r as Any]) }
    public func ConnectFontSelected(f: @escaping (_ font: QFont) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectFontSelected", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QFont) } as Any) }
    public func DisconnectFontSelected() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectFontSelected"]) }
    public func FontSelected(font: QFont_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "FontSelected", font as Any]) }
    public func GetFont(ok: Bool, initial: QFont_ITF? = nil, parent: QWidget_ITF? = nil, title: String, options: Int) -> QFont { callLocalFunction(l: ["", Pointer(), ___className, "GetFont", ok as Any, initial as Any, parent as Any, title as Any, options as Any]) as! QFont }
    public func GetFont2(ok: Bool, parent: QWidget_ITF? = nil) -> QFont { callLocalFunction(l: ["", Pointer(), ___className, "GetFont2", ok as Any, parent as Any]) as! QFont }
    public func Open_QFontDialog(receiver: QObject_ITF? = nil, member: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Open", receiver as Any, member as Any]) }
    public func Options() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Options"]) as! Float) }
    public func SelectedFont() -> QFont { callLocalFunction(l: ["", Pointer(), ___className, "SelectedFont"]) as! QFont }
    public func SetCurrentFont(font: QFont_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentFont", font as Any]) }
    public func SetOption(option: Int, on: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOption", option as Any, on as Any]) }
    public func SetOptions(options: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOptions", options as Any]) }
    public func TestOption(option: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "TestOption", option as Any]) as! Bool }
}

public func NewQFontDialogFromPointer(ptr: String) -> QFontDialog { let r = QFontDialog(); r.initFrom(p: ptr, n: "widgets.QFontDialog"); return r }
public func NewQFontDialog(parent: QWidget_ITF? = nil) -> QFontDialog { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQFontDialog", "", parent as Any]) as! QFontDialog }
public func NewQFontDialog2(initial: QFont_ITF? = nil, parent: QWidget_ITF? = nil) -> QFontDialog { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQFontDialog2", "", initial as Any, parent as Any]) as! QFontDialog }
public func QFontDialog_GetFont(ok: Bool, initial: QFont_ITF? = nil, parent: QWidget_ITF? = nil, title: String, options: Int) -> QFont { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QFontDialog_GetFont", "", ok as Any, initial as Any, parent as Any, title as Any, options as Any]) as! QFont }
public func QFontDialog_GetFont2(ok: Bool, parent: QWidget_ITF? = nil) -> QFont { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QFontDialog_GetFont2", "", ok as Any, parent as Any]) as! QFont }
public protocol QFormLayout_ITF: QLayout_ITF {
    func QFormLayout_PTR() -> QFormLayout
}

public class QFormLayout: QLayout, QFormLayout_ITF {
    public func QFormLayout_PTR() -> QFormLayout { callLocalFunction(l: ["", Pointer(), ___className, "QFormLayout_PTR"]) as! QFormLayout }
    override public func ConnectAddItem(f: @escaping (_ item: QLayoutItem) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectAddItem", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QLayoutItem) } as Any) }
    override public func DisconnectAddItem() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectAddItem"]) }
    override public func AddItem(item: QLayoutItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddItem", item as Any]) }
    public func AddItemDefault(item: QLayoutItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddItemDefault", item as Any]) }
    public func AddRow(label: QWidget_ITF? = nil, field: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddRow", label as Any, field as Any]) }
    public func AddRow2(label: QWidget_ITF? = nil, field: QLayout_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddRow2", label as Any, field as Any]) }
    public func AddRow3(labelText: String, field: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddRow3", labelText as Any, field as Any]) }
    public func AddRow4(labelText: String, field: QLayout_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddRow4", labelText as Any, field as Any]) }
    public func AddRow5(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddRow5", widget as Any]) }
    public func AddRow6(layout: QLayout_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddRow6", layout as Any]) }
    override public func ConnectCount(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCount", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectCount() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCount"]) }
    override public func Count() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Count"]) as! Float) }
    public func CountDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CountDefault"]) as! Float) }
    public func FieldGrowthPolicy() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "FieldGrowthPolicy"]) as! Float) }
    public func FormAlignment() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "FormAlignment"]) as! Float) }
    public func HorizontalSpacing() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "HorizontalSpacing"]) as! Float) }
    public func InsertRow(row: Int, label: QWidget_ITF? = nil, field: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertRow", row as Any, label as Any, field as Any]) }
    public func InsertRow2(row: Int, label: QWidget_ITF? = nil, field: QLayout_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertRow2", row as Any, label as Any, field as Any]) }
    public func InsertRow3(row: Int, labelText: String, field: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertRow3", row as Any, labelText as Any, field as Any]) }
    public func InsertRow4(row: Int, labelText: String, field: QLayout_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertRow4", row as Any, labelText as Any, field as Any]) }
    public func InsertRow5(row: Int, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertRow5", row as Any, widget as Any]) }
    public func InsertRow6(row: Int, layout: QLayout_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertRow6", row as Any, layout as Any]) }
    public func LabelAlignment() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "LabelAlignment"]) as! Float) }
    public func LabelForField(field: QWidget_ITF? = nil) -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "LabelForField", field as Any]) as! QWidget }
    public func LabelForField2(field: QLayout_ITF? = nil) -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "LabelForField2", field as Any]) as! QWidget }
    public func RemoveRow(row: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveRow", row as Any]) }
    public func RemoveRow2(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveRow2", widget as Any]) }
    public func RemoveRow3(layout: QLayout_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveRow3", layout as Any]) }
    public func RowCount() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "RowCount"]) as! Float) }
    public func RowWrapPolicy() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "RowWrapPolicy"]) as! Float) }
    public func SetFieldGrowthPolicy(policy: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFieldGrowthPolicy", policy as Any]) }
    public func SetFormAlignment(alignment: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFormAlignment", alignment as Any]) }
    public func SetHorizontalSpacing(spacing: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetHorizontalSpacing", spacing as Any]) }
    public func SetItem(row: Int, role: Int, item: QLayoutItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetItem", row as Any, role as Any, item as Any]) }
    public func SetLabelAlignment(alignment: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetLabelAlignment", alignment as Any]) }
    public func SetLayout(row: Int, role: Int, layout: QLayout_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetLayout", row as Any, role as Any, layout as Any]) }
    public func SetRowWrapPolicy(policy: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRowWrapPolicy", policy as Any]) }
    public func SetVerticalSpacing(spacing: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetVerticalSpacing", spacing as Any]) }
    public func SetWidget(row: Int, role: Int, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWidget", row as Any, role as Any, widget as Any]) }
    override public func ConnectSizeHint(f: @escaping () -> QSize) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSizeHint", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectSizeHint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSizeHint"]) }
    override public func SizeHint() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "SizeHint"]) as! QSize }
    override public func SizeHintDefault() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "SizeHintDefault"]) as! QSize }
    override public func ConnectTakeAt(f: @escaping (_ index: Int) -> QLayoutItem) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTakeAt", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    override public func DisconnectTakeAt() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTakeAt"]) }
    override public func TakeAt(index: Int) -> QLayoutItem { callLocalFunction(l: ["", Pointer(), ___className, "TakeAt", index as Any]) as! QLayoutItem }
    public func TakeAtDefault(index: Int) -> QLayoutItem { callLocalFunction(l: ["", Pointer(), ___className, "TakeAtDefault", index as Any]) as! QLayoutItem }
    public func VerticalSpacing() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "VerticalSpacing"]) as! Float) }
    public func ConnectDestroyQFormLayout(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQFormLayout", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQFormLayout() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQFormLayout"]) }
    public func DestroyQFormLayout() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQFormLayout"]) }
    public func DestroyQFormLayoutDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQFormLayoutDefault"]) }
}

public func NewQFormLayoutFromPointer(ptr: String) -> QFormLayout { let r = QFormLayout(); r.initFrom(p: ptr, n: "widgets.QFormLayout"); return r }
public func NewQFormLayout(parent: QWidget_ITF? = nil) -> QFormLayout { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQFormLayout", "", parent as Any]) as! QFormLayout }
public protocol QFrame_ITF: QWidget_ITF {
    func QFrame_PTR() -> QFrame
}

public class QFrame: QWidget, QFrame_ITF {
    public func QFrame_PTR() -> QFrame { callLocalFunction(l: ["", Pointer(), ___className, "QFrame_PTR"]) as! QFrame }
    public func FrameRect() -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "FrameRect"]) as! QRect }
    public func FrameShadow() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "FrameShadow"]) as! Float) }
    public func FrameShape() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "FrameShape"]) as! Float) }
    public func FrameStyle() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "FrameStyle"]) as! Float) }
    public func FrameWidth() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "FrameWidth"]) as! Float) }
    public func InitStyleOption(option: QStyleOptionFrame_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InitStyleOption", option as Any]) }
    public func LineWidth() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "LineWidth"]) as! Float) }
    public func MidLineWidth() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "MidLineWidth"]) as! Float) }
    public func SetFrameRect(vqr: QRect_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFrameRect", vqr as Any]) }
    public func SetFrameShadow(vqf: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFrameShadow", vqf as Any]) }
    public func SetFrameShape(vqf: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFrameShape", vqf as Any]) }
    public func SetFrameStyle(style: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFrameStyle", style as Any]) }
    public func SetLineWidth(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetLineWidth", vi as Any]) }
    public func SetMidLineWidth(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMidLineWidth", vi as Any]) }
    public func ConnectDestroyQFrame(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQFrame", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQFrame() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQFrame"]) }
    public func DestroyQFrame() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQFrame"]) }
    public func DestroyQFrameDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQFrameDefault"]) }
}

public func NewQFrameFromPointer(ptr: String) -> QFrame { let r = QFrame(); r.initFrom(p: ptr, n: "widgets.QFrame"); return r }
public func NewQFrame(parent: QWidget_ITF? = nil, ff: Int) -> QFrame { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQFrame", "", parent as Any, ff as Any]) as! QFrame }
public protocol QGesture_ITF: QObject_ITF {
    func QGesture_PTR() -> QGesture
}

public class QGesture: QObject, QGesture_ITF {
    public func QGesture_PTR() -> QGesture { callLocalFunction(l: ["", Pointer(), ___className, "QGesture_PTR"]) as! QGesture }
    public func GestureCancelPolicy() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "GestureCancelPolicy"]) as! Float) }
    public func GestureType() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "GestureType"]) as! Float) }
    public func HasHotSpot() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "HasHotSpot"]) as! Bool }
    public func HotSpot() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "HotSpot"]) as! QPointF }
    public func SetGestureCancelPolicy(policy: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetGestureCancelPolicy", policy as Any]) }
    public func SetHotSpot(value: QPointF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetHotSpot", value as Any]) }
    public func State() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "State"]) as! Float) }
    public func UnsetHotSpot() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UnsetHotSpot"]) }
    public func ConnectDestroyQGesture(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGesture", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGesture() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGesture"]) }
    public func DestroyQGesture() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGesture"]) }
    public func DestroyQGestureDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGestureDefault"]) }
    override public func ChildEventDefault(event: QChildEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ChildEventDefault", event as Any]) }
    override public func ConnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ConnectNotifyDefault", sign as Any]) }
    override public func CustomEventDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CustomEventDefault", event as Any]) }
    override public func DeleteLaterDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DeleteLaterDefault"]) }
    override public func DisconnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DisconnectNotifyDefault", sign as Any]) }
    override public func EventDefault(e: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventDefault", e as Any]) as! Bool }
    override public func EventFilterDefault(watched: QObject_ITF? = nil, event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventFilterDefault", watched as Any, event as Any]) as! Bool }
    override public func MetaObjectDefault() -> QMetaObject { callLocalFunction(l: ["", Pointer(), ___className, "MetaObjectDefault"]) as! QMetaObject }
    override public func TimerEventDefault(event: QTimerEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TimerEventDefault", event as Any]) }
}

public func NewQGestureFromPointer(ptr: String) -> QGesture { let r = QGesture(); r.initFrom(p: ptr, n: "widgets.QGesture"); return r }
public func NewQGesture(parent: QObject_ITF? = nil) -> QGesture { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGesture", "", parent as Any]) as! QGesture }
public protocol QGestureEvent_ITF: QEvent_ITF {
    func QGestureEvent_PTR() -> QGestureEvent
}

public class QGestureEvent: QEvent, QGestureEvent_ITF {
    public func QGestureEvent_PTR() -> QGestureEvent { callLocalFunction(l: ["", Pointer(), ___className, "QGestureEvent_PTR"]) as! QGestureEvent }
    public func Accept_QGestureEvent(gesture: QGesture_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Accept", gesture as Any]) }
    public func Accept2(gestureType: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Accept2", gestureType as Any]) }
    public func ActiveGestures() -> [QGesture] { callLocalFunction(l: ["", Pointer(), ___className, "ActiveGestures"]) as! [QGesture] }
    public func CanceledGestures() -> [QGesture] { callLocalFunction(l: ["", Pointer(), ___className, "CanceledGestures"]) as! [QGesture] }
    public func Gesture(ty: Int) -> QGesture { callLocalFunction(l: ["", Pointer(), ___className, "Gesture", ty as Any]) as! QGesture }
    public func Gestures() -> [QGesture] { callLocalFunction(l: ["", Pointer(), ___className, "Gestures"]) as! [QGesture] }
    public func Ignore_QGestureEvent(gesture: QGesture_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Ignore", gesture as Any]) }
    public func Ignore2(gestureType: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Ignore2", gestureType as Any]) }
    public func IsAccepted_QGestureEvent(gesture: QGesture_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsAccepted", gesture as Any]) as! Bool }
    public func IsAccepted2(gestureType: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsAccepted2", gestureType as Any]) as! Bool }
    public func MapToGraphicsScene(gesturePoint: QPointF_ITF? = nil) -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "MapToGraphicsScene", gesturePoint as Any]) as! QPointF }
    public func SetAccepted_QGestureEvent(gesture: QGesture_ITF? = nil, value: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAccepted", gesture as Any, value as Any]) }
    public func SetAccepted2(gestureType: Int, value: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAccepted2", gestureType as Any, value as Any]) }
    public func Widget() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "Widget"]) as! QWidget }
    public func ConnectDestroyQGestureEvent(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGestureEvent", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGestureEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGestureEvent"]) }
    public func DestroyQGestureEvent() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGestureEvent"]) }
    public func DestroyQGestureEventDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGestureEventDefault"]) }
}

public func NewQGestureEventFromPointer(ptr: String) -> QGestureEvent { let r = QGestureEvent(); r.initFrom(p: ptr, n: "widgets.QGestureEvent"); return r }
public func NewQGestureEvent(gestures: [QGesture]) -> QGestureEvent { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGestureEvent", "", gestures as Any]) as! QGestureEvent }
public protocol QGestureRecognizer_ITF {
    func QGestureRecognizer_PTR() -> QGestureRecognizer
}

public class QGestureRecognizer: Internal, QGestureRecognizer_ITF {
    public func QGestureRecognizer_PTR() -> QGestureRecognizer { callLocalFunction(l: ["", Pointer(), ___className, "QGestureRecognizer_PTR"]) as! QGestureRecognizer }
    public func ConnectCreate(f: @escaping (_ target: QObject) -> QGesture) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCreate", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QObject) } as Any) }
    public func DisconnectCreate() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCreate"]) }
    public func Create(target: QObject_ITF? = nil) -> QGesture { callLocalFunction(l: ["", Pointer(), ___className, "Create", target as Any]) as! QGesture }
    public func CreateDefault(target: QObject_ITF? = nil) -> QGesture { callLocalFunction(l: ["", Pointer(), ___className, "CreateDefault", target as Any]) as! QGesture }
    public func ConnectRecognize(f: @escaping (_ gesture: QGesture, _ watched: QObject, _ event: QEvent) -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRecognize", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QGesture, inp[1] as! QObject, inp[2] as! QEvent) } as Any) }
    public func DisconnectRecognize() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRecognize"]) }
    public func Recognize(gesture: QGesture_ITF? = nil, watched: QObject_ITF? = nil, event: QEvent_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Recognize", gesture as Any, watched as Any, event as Any]) as! Float) }
    public func RegisterRecognizer(recognizer: QGestureRecognizer_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "RegisterRecognizer", recognizer as Any]) as! Float) }
    public func ConnectReset(f: @escaping (_ gesture: QGesture) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectReset", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QGesture) } as Any) }
    public func DisconnectReset() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectReset"]) }
    public func Reset(gesture: QGesture_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Reset", gesture as Any]) }
    public func ResetDefault(gesture: QGesture_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResetDefault", gesture as Any]) }
    public func UnregisterRecognizer(ty: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "UnregisterRecognizer", ty as Any]) }
    public func ConnectDestroyQGestureRecognizer(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGestureRecognizer", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGestureRecognizer() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGestureRecognizer"]) }
    public func DestroyQGestureRecognizer() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGestureRecognizer"]) }
    public func DestroyQGestureRecognizerDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGestureRecognizerDefault"]) }
}

public func NewQGestureRecognizerFromPointer(ptr: String) -> QGestureRecognizer { let r = QGestureRecognizer(); r.initFrom(p: ptr, n: "widgets.QGestureRecognizer"); return r }
public func NewQGestureRecognizer() -> QGestureRecognizer { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGestureRecognizer", ""]) as! QGestureRecognizer }
public func QGestureRecognizer_RegisterRecognizer(recognizer: QGestureRecognizer_ITF? = nil) -> Int { Widgets.initModule(); return Int(callLocalFunction(l: ["", "", "widgets.QGestureRecognizer_RegisterRecognizer", "", recognizer as Any]) as! Float) }
public func QGestureRecognizer_UnregisterRecognizer(ty: Int) { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QGestureRecognizer_UnregisterRecognizer", "", ty as Any]) }
public protocol QGraphicsAnchor_ITF: QObject_ITF {
    func QGraphicsAnchor_PTR() -> QGraphicsAnchor
}

public class QGraphicsAnchor: QObject, QGraphicsAnchor_ITF {
    public func QGraphicsAnchor_PTR() -> QGraphicsAnchor { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsAnchor_PTR"]) as! QGraphicsAnchor }
    public func SetSizePolicy(policy: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSizePolicy", policy as Any]) }
    public func SetSpacing(spacing: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSpacing", spacing as Any]) }
    public func SizePolicy() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SizePolicy"]) as! Float) }
    public func Spacing() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "Spacing"]) as! Float }
    public func UnsetSpacing() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UnsetSpacing"]) }
    public func ConnectDestroyQGraphicsAnchor(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsAnchor", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsAnchor() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsAnchor"]) }
    public func DestroyQGraphicsAnchor() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsAnchor"]) }
    public func DestroyQGraphicsAnchorDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsAnchorDefault"]) }
    override public func ChildEventDefault(event: QChildEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ChildEventDefault", event as Any]) }
    override public func ConnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ConnectNotifyDefault", sign as Any]) }
    override public func CustomEventDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CustomEventDefault", event as Any]) }
    override public func DeleteLaterDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DeleteLaterDefault"]) }
    override public func DisconnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DisconnectNotifyDefault", sign as Any]) }
    override public func EventDefault(e: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventDefault", e as Any]) as! Bool }
    override public func EventFilterDefault(watched: QObject_ITF? = nil, event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventFilterDefault", watched as Any, event as Any]) as! Bool }
    override public func MetaObjectDefault() -> QMetaObject { callLocalFunction(l: ["", Pointer(), ___className, "MetaObjectDefault"]) as! QMetaObject }
    override public func TimerEventDefault(event: QTimerEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TimerEventDefault", event as Any]) }
}

public func NewQGraphicsAnchorFromPointer(ptr: String) -> QGraphicsAnchor { let r = QGraphicsAnchor(); r.initFrom(p: ptr, n: "widgets.QGraphicsAnchor"); return r }
public protocol QGraphicsAnchorLayout_ITF: QGraphicsLayout_ITF {
    func QGraphicsAnchorLayout_PTR() -> QGraphicsAnchorLayout
}

public class QGraphicsAnchorLayout: QGraphicsLayout, QGraphicsAnchorLayout_ITF {
    public func QGraphicsAnchorLayout_PTR() -> QGraphicsAnchorLayout { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsAnchorLayout_PTR"]) as! QGraphicsAnchorLayout }
    public func AddAnchor(firstItem: QGraphicsLayoutItem_ITF? = nil, firstEdge: Int, secondItem: QGraphicsLayoutItem_ITF? = nil, secondEdge: Int) -> QGraphicsAnchor { callLocalFunction(l: ["", Pointer(), ___className, "AddAnchor", firstItem as Any, firstEdge as Any, secondItem as Any, secondEdge as Any]) as! QGraphicsAnchor }
    public func AddAnchors(firstItem: QGraphicsLayoutItem_ITF? = nil, secondItem: QGraphicsLayoutItem_ITF? = nil, orientations: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddAnchors", firstItem as Any, secondItem as Any, orientations as Any]) }
    public func AddCornerAnchors(firstItem: QGraphicsLayoutItem_ITF? = nil, firstCorner: Int, secondItem: QGraphicsLayoutItem_ITF? = nil, secondCorner: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddCornerAnchors", firstItem as Any, firstCorner as Any, secondItem as Any, secondCorner as Any]) }
    public func Anchor(firstItem: QGraphicsLayoutItem_ITF? = nil, firstEdge: Int, secondItem: QGraphicsLayoutItem_ITF? = nil, secondEdge: Int) -> QGraphicsAnchor { callLocalFunction(l: ["", Pointer(), ___className, "Anchor", firstItem as Any, firstEdge as Any, secondItem as Any, secondEdge as Any]) as! QGraphicsAnchor }
    override public func ConnectCount(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCount", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectCount() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCount"]) }
    override public func Count() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Count"]) as! Float) }
    public func CountDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CountDefault"]) as! Float) }
    public func HorizontalSpacing() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "HorizontalSpacing"]) as! Float }
    override public func ConnectItemAt(f: @escaping (_ index: Int) -> QGraphicsLayoutItem) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectItemAt", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    override public func DisconnectItemAt() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectItemAt"]) }
    override public func ItemAt(i: Int) -> QGraphicsLayoutItem { callLocalFunction(l: ["", Pointer(), ___className, "ItemAt", i as Any]) as! QGraphicsLayoutItem }
    public func ItemAtDefault(index: Int) -> QGraphicsLayoutItem { callLocalFunction(l: ["", Pointer(), ___className, "ItemAtDefault", index as Any]) as! QGraphicsLayoutItem }
    override public func ConnectRemoveAt(f: @escaping (_ index: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRemoveAt", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    override public func DisconnectRemoveAt() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRemoveAt"]) }
    override public func RemoveAt(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveAt", index as Any]) }
    public func RemoveAtDefault(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveAtDefault", index as Any]) }
    public func SetHorizontalSpacing(spacing: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetHorizontalSpacing", spacing as Any]) }
    public func SetSpacing(spacing: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSpacing", spacing as Any]) }
    public func SetVerticalSpacing(spacing: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetVerticalSpacing", spacing as Any]) }
    override public func ConnectSizeHint(f: @escaping (_ which: Int, _ constraint: QSizeF) -> QSizeF) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSizeHint", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! QSizeF) } as Any) }
    override public func DisconnectSizeHint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSizeHint"]) }
    override public func SizeHint(which: Int, constraint: QSizeF_ITF? = nil) -> QSizeF { callLocalFunction(l: ["", Pointer(), ___className, "SizeHint", which as Any, constraint as Any]) as! QSizeF }
    override public func SizeHintDefault(which: Int, constraint: QSizeF_ITF? = nil) -> QSizeF { callLocalFunction(l: ["", Pointer(), ___className, "SizeHintDefault", which as Any, constraint as Any]) as! QSizeF }
    public func VerticalSpacing() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "VerticalSpacing"]) as! Float }
    public func ConnectDestroyQGraphicsAnchorLayout(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsAnchorLayout", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsAnchorLayout() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsAnchorLayout"]) }
    public func DestroyQGraphicsAnchorLayout() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsAnchorLayout"]) }
    public func DestroyQGraphicsAnchorLayoutDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsAnchorLayoutDefault"]) }
}

public func NewQGraphicsAnchorLayoutFromPointer(ptr: String) -> QGraphicsAnchorLayout { let r = QGraphicsAnchorLayout(); r.initFrom(p: ptr, n: "widgets.QGraphicsAnchorLayout"); return r }
public func NewQGraphicsAnchorLayout(parent: QGraphicsLayoutItem_ITF? = nil) -> QGraphicsAnchorLayout { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsAnchorLayout", "", parent as Any]) as! QGraphicsAnchorLayout }
public protocol QGraphicsBlurEffect_ITF: QGraphicsEffect_ITF {
    func QGraphicsBlurEffect_PTR() -> QGraphicsBlurEffect
}

public class QGraphicsBlurEffect: QGraphicsEffect, QGraphicsBlurEffect_ITF {
    public func QGraphicsBlurEffect_PTR() -> QGraphicsBlurEffect { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsBlurEffect_PTR"]) as! QGraphicsBlurEffect }
    public func BlurHints() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "BlurHints"]) as! Float) }
    public func ConnectBlurHintsChanged(f: @escaping (_ hints: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectBlurHintsChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectBlurHintsChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectBlurHintsChanged"]) }
    public func BlurHintsChanged(hints: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "BlurHintsChanged", hints as Any]) }
    public func BlurRadius() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "BlurRadius"]) as! Float }
    public func ConnectBlurRadiusChanged(f: @escaping (_ radius: Float) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectBlurRadiusChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Float) } as Any) }
    public func DisconnectBlurRadiusChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectBlurRadiusChanged"]) }
    public func BlurRadiusChanged(radius: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "BlurRadiusChanged", radius as Any]) }
    override public func ConnectDraw(f: @escaping (_ painter: QPainter) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDraw", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainter) } as Any) }
    override public func DisconnectDraw() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDraw"]) }
    override public func Draw(painter: QPainter_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Draw", painter as Any]) }
    public func DrawDefault(painter: QPainter_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawDefault", painter as Any]) }
    public func ConnectSetBlurHints(f: @escaping (_ hints: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetBlurHints", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSetBlurHints() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetBlurHints"]) }
    public func SetBlurHints(hints: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetBlurHints", hints as Any]) }
    public func SetBlurHintsDefault(hints: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetBlurHintsDefault", hints as Any]) }
    public func ConnectSetBlurRadius(f: @escaping (_ blurRadius: Float) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetBlurRadius", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Float) } as Any) }
    public func DisconnectSetBlurRadius() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetBlurRadius"]) }
    public func SetBlurRadius(blurRadius: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetBlurRadius", blurRadius as Any]) }
    public func SetBlurRadiusDefault(blurRadius: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetBlurRadiusDefault", blurRadius as Any]) }
    public func ConnectDestroyQGraphicsBlurEffect(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsBlurEffect", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsBlurEffect() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsBlurEffect"]) }
    public func DestroyQGraphicsBlurEffect() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsBlurEffect"]) }
    public func DestroyQGraphicsBlurEffectDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsBlurEffectDefault"]) }
}

public func NewQGraphicsBlurEffectFromPointer(ptr: String) -> QGraphicsBlurEffect { let r = QGraphicsBlurEffect(); r.initFrom(p: ptr, n: "widgets.QGraphicsBlurEffect"); return r }
public func NewQGraphicsBlurEffect(parent: QObject_ITF? = nil) -> QGraphicsBlurEffect { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsBlurEffect", "", parent as Any]) as! QGraphicsBlurEffect }
public protocol QGraphicsColorizeEffect_ITF: QGraphicsEffect_ITF {
    func QGraphicsColorizeEffect_PTR() -> QGraphicsColorizeEffect
}

public class QGraphicsColorizeEffect: QGraphicsEffect, QGraphicsColorizeEffect_ITF {
    public func QGraphicsColorizeEffect_PTR() -> QGraphicsColorizeEffect { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsColorizeEffect_PTR"]) as! QGraphicsColorizeEffect }
    public func Color() -> QColor { callLocalFunction(l: ["", Pointer(), ___className, "Color"]) as! QColor }
    public func ConnectColorChanged(f: @escaping (_ color: QColor) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectColorChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QColor) } as Any) }
    public func DisconnectColorChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectColorChanged"]) }
    public func ColorChanged(color: QColor_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ColorChanged", color as Any]) }
    override public func ConnectDraw(f: @escaping (_ painter: QPainter) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDraw", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainter) } as Any) }
    override public func DisconnectDraw() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDraw"]) }
    override public func Draw(painter: QPainter_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Draw", painter as Any]) }
    public func DrawDefault(painter: QPainter_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawDefault", painter as Any]) }
    public func ConnectSetColor(f: @escaping (_ c: QColor) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetColor", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QColor) } as Any) }
    public func DisconnectSetColor() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetColor"]) }
    public func SetColor(c: QColor_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetColor", c as Any]) }
    public func SetColorDefault(c: QColor_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetColorDefault", c as Any]) }
    public func ConnectSetStrength(f: @escaping (_ strength: Float) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetStrength", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Float) } as Any) }
    public func DisconnectSetStrength() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetStrength"]) }
    public func SetStrength(strength: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStrength", strength as Any]) }
    public func SetStrengthDefault(strength: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStrengthDefault", strength as Any]) }
    public func Strength() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "Strength"]) as! Float }
    public func ConnectStrengthChanged(f: @escaping (_ strength: Float) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectStrengthChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Float) } as Any) }
    public func DisconnectStrengthChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectStrengthChanged"]) }
    public func StrengthChanged(strength: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "StrengthChanged", strength as Any]) }
    public func ConnectDestroyQGraphicsColorizeEffect(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsColorizeEffect", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsColorizeEffect() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsColorizeEffect"]) }
    public func DestroyQGraphicsColorizeEffect() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsColorizeEffect"]) }
    public func DestroyQGraphicsColorizeEffectDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsColorizeEffectDefault"]) }
}

public func NewQGraphicsColorizeEffectFromPointer(ptr: String) -> QGraphicsColorizeEffect { let r = QGraphicsColorizeEffect(); r.initFrom(p: ptr, n: "widgets.QGraphicsColorizeEffect"); return r }
public func NewQGraphicsColorizeEffect(parent: QObject_ITF? = nil) -> QGraphicsColorizeEffect { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsColorizeEffect", "", parent as Any]) as! QGraphicsColorizeEffect }
public protocol QGraphicsDropShadowEffect_ITF: QGraphicsEffect_ITF {
    func QGraphicsDropShadowEffect_PTR() -> QGraphicsDropShadowEffect
}

public class QGraphicsDropShadowEffect: QGraphicsEffect, QGraphicsDropShadowEffect_ITF {
    public func QGraphicsDropShadowEffect_PTR() -> QGraphicsDropShadowEffect { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsDropShadowEffect_PTR"]) as! QGraphicsDropShadowEffect }
    public func BlurRadius() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "BlurRadius"]) as! Float }
    public func ConnectBlurRadiusChanged(f: @escaping (_ blurRadius: Float) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectBlurRadiusChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Float) } as Any) }
    public func DisconnectBlurRadiusChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectBlurRadiusChanged"]) }
    public func BlurRadiusChanged(blurRadius: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "BlurRadiusChanged", blurRadius as Any]) }
    public func Color() -> QColor { callLocalFunction(l: ["", Pointer(), ___className, "Color"]) as! QColor }
    public func ConnectColorChanged(f: @escaping (_ color: QColor) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectColorChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QColor) } as Any) }
    public func DisconnectColorChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectColorChanged"]) }
    public func ColorChanged(color: QColor_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ColorChanged", color as Any]) }
    override public func ConnectDraw(f: @escaping (_ painter: QPainter) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDraw", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainter) } as Any) }
    override public func DisconnectDraw() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDraw"]) }
    override public func Draw(painter: QPainter_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Draw", painter as Any]) }
    public func DrawDefault(painter: QPainter_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawDefault", painter as Any]) }
    public func Offset() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "Offset"]) as! QPointF }
    public func ConnectOffsetChanged(f: @escaping (_ offset: QPointF) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectOffsetChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPointF) } as Any) }
    public func DisconnectOffsetChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectOffsetChanged"]) }
    public func OffsetChanged(offset: QPointF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "OffsetChanged", offset as Any]) }
    public func ConnectSetBlurRadius(f: @escaping (_ blurRadius: Float) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetBlurRadius", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Float) } as Any) }
    public func DisconnectSetBlurRadius() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetBlurRadius"]) }
    public func SetBlurRadius(blurRadius: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetBlurRadius", blurRadius as Any]) }
    public func SetBlurRadiusDefault(blurRadius: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetBlurRadiusDefault", blurRadius as Any]) }
    public func ConnectSetColor(f: @escaping (_ color: QColor) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetColor", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QColor) } as Any) }
    public func DisconnectSetColor() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetColor"]) }
    public func SetColor(color: QColor_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetColor", color as Any]) }
    public func SetColorDefault(color: QColor_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetColorDefault", color as Any]) }
    public func ConnectSetOffset(f: @escaping (_ ofs: QPointF) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetOffset", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPointF) } as Any) }
    public func DisconnectSetOffset() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetOffset"]) }
    public func SetOffset(ofs: QPointF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOffset", ofs as Any]) }
    public func SetOffsetDefault(ofs: QPointF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOffsetDefault", ofs as Any]) }
    public func ConnectSetOffset2(f: @escaping (_ dx: Float, _ dy: Float) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetOffset2", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Float, inp[1] as! Float) } as Any) }
    public func DisconnectSetOffset2() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetOffset2"]) }
    public func SetOffset2(dx: Float, dy: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOffset2", dx as Any, dy as Any]) }
    public func SetOffset2Default(dx: Float, dy: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOffset2Default", dx as Any, dy as Any]) }
    public func ConnectSetOffset3(f: @escaping (_ d: Float) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetOffset3", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Float) } as Any) }
    public func DisconnectSetOffset3() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetOffset3"]) }
    public func SetOffset3(d: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOffset3", d as Any]) }
    public func SetOffset3Default(d: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOffset3Default", d as Any]) }
    public func ConnectSetXOffset(f: @escaping (_ dx: Float) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetXOffset", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Float) } as Any) }
    public func DisconnectSetXOffset() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetXOffset"]) }
    public func SetXOffset(dx: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetXOffset", dx as Any]) }
    public func SetXOffsetDefault(dx: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetXOffsetDefault", dx as Any]) }
    public func ConnectSetYOffset(f: @escaping (_ dy: Float) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetYOffset", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Float) } as Any) }
    public func DisconnectSetYOffset() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetYOffset"]) }
    public func SetYOffset(dy: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetYOffset", dy as Any]) }
    public func SetYOffsetDefault(dy: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetYOffsetDefault", dy as Any]) }
    public func XOffset() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "XOffset"]) as! Float }
    public func YOffset() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "YOffset"]) as! Float }
    public func ConnectDestroyQGraphicsDropShadowEffect(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsDropShadowEffect", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsDropShadowEffect() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsDropShadowEffect"]) }
    public func DestroyQGraphicsDropShadowEffect() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsDropShadowEffect"]) }
    public func DestroyQGraphicsDropShadowEffectDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsDropShadowEffectDefault"]) }
}

public func NewQGraphicsDropShadowEffectFromPointer(ptr: String) -> QGraphicsDropShadowEffect { let r = QGraphicsDropShadowEffect(); r.initFrom(p: ptr, n: "widgets.QGraphicsDropShadowEffect"); return r }
public func NewQGraphicsDropShadowEffect(parent: QObject_ITF? = nil) -> QGraphicsDropShadowEffect { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsDropShadowEffect", "", parent as Any]) as! QGraphicsDropShadowEffect }
public protocol QGraphicsEffect_ITF: QObject_ITF {
    func QGraphicsEffect_PTR() -> QGraphicsEffect
}

public class QGraphicsEffect: QObject, QGraphicsEffect_ITF {
    public func QGraphicsEffect_PTR() -> QGraphicsEffect { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsEffect_PTR"]) as! QGraphicsEffect }
    public func BoundingRect() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "BoundingRect"]) as! QRectF }
    public func ConnectBoundingRectFor(f: @escaping (_ rect: QRectF) -> QRectF) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectBoundingRectFor", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QRectF) } as Any) }
    public func DisconnectBoundingRectFor() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectBoundingRectFor"]) }
    public func BoundingRectFor(rect: QRectF_ITF? = nil) -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "BoundingRectFor", rect as Any]) as! QRectF }
    public func BoundingRectForDefault(rect: QRectF_ITF? = nil) -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "BoundingRectForDefault", rect as Any]) as! QRectF }
    public func ConnectDraw(f: @escaping (_ painter: QPainter) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDraw", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainter) } as Any) }
    public func DisconnectDraw() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDraw"]) }
    public func Draw(painter: QPainter_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Draw", painter as Any]) }
    public func DrawSource(painter: QPainter_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawSource", painter as Any]) }
    public func ConnectEnabledChanged(f: @escaping (_ enabled: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectEnabledChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectEnabledChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectEnabledChanged"]) }
    public func EnabledChanged(enabled: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "EnabledChanged", enabled as Any]) }
    public func IsEnabled() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsEnabled"]) as! Bool }
    public func ConnectSetEnabled(f: @escaping (_ enable: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetEnabled", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectSetEnabled() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetEnabled"]) }
    public func SetEnabled(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetEnabled", enable as Any]) }
    public func SetEnabledDefault(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetEnabledDefault", enable as Any]) }
    public func SourceBoundingRect(system: Int) -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "SourceBoundingRect", system as Any]) as! QRectF }
    public func ConnectSourceChanged(f: @escaping (_ flags: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSourceChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSourceChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSourceChanged"]) }
    public func SourceChanged(flags: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SourceChanged", flags as Any]) }
    public func SourceChangedDefault(flags: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SourceChangedDefault", flags as Any]) }
    public func SourceIsPixmap() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "SourceIsPixmap"]) as! Bool }
    public func SourcePixmap(system: Int, offset: QPoint_ITF? = nil, mode: Int) -> QPixmap { callLocalFunction(l: ["", Pointer(), ___className, "SourcePixmap", system as Any, offset as Any, mode as Any]) as! QPixmap }
    public func ConnectUpdate(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectUpdate", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectUpdate() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectUpdate"]) }
    public func Update() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Update"]) }
    public func UpdateDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UpdateDefault"]) }
    public func UpdateBoundingRect() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UpdateBoundingRect"]) }
    public func ConnectDestroyQGraphicsEffect(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsEffect", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsEffect() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsEffect"]) }
    public func DestroyQGraphicsEffect() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsEffect"]) }
    public func DestroyQGraphicsEffectDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsEffectDefault"]) }
    override public func ChildEventDefault(event: QChildEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ChildEventDefault", event as Any]) }
    override public func ConnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ConnectNotifyDefault", sign as Any]) }
    override public func CustomEventDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CustomEventDefault", event as Any]) }
    override public func DeleteLaterDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DeleteLaterDefault"]) }
    override public func DisconnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DisconnectNotifyDefault", sign as Any]) }
    override public func EventDefault(e: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventDefault", e as Any]) as! Bool }
    override public func EventFilterDefault(watched: QObject_ITF? = nil, event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventFilterDefault", watched as Any, event as Any]) as! Bool }
    override public func MetaObjectDefault() -> QMetaObject { callLocalFunction(l: ["", Pointer(), ___className, "MetaObjectDefault"]) as! QMetaObject }
    override public func TimerEventDefault(event: QTimerEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TimerEventDefault", event as Any]) }
}

public func NewQGraphicsEffectFromPointer(ptr: String) -> QGraphicsEffect { let r = QGraphicsEffect(); r.initFrom(p: ptr, n: "widgets.QGraphicsEffect"); return r }
public func NewQGraphicsEffect(parent: QObject_ITF? = nil) -> QGraphicsEffect { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsEffect", "", parent as Any]) as! QGraphicsEffect }
public protocol QGraphicsEllipseItem_ITF: QAbstractGraphicsShapeItem_ITF {
    func QGraphicsEllipseItem_PTR() -> QGraphicsEllipseItem
}

public class QGraphicsEllipseItem: QAbstractGraphicsShapeItem, QGraphicsEllipseItem_ITF {
    public func QGraphicsEllipseItem_PTR() -> QGraphicsEllipseItem { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsEllipseItem_PTR"]) as! QGraphicsEllipseItem }
    override public func ConnectBoundingRect(f: @escaping () -> QRectF) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectBoundingRect", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectBoundingRect() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectBoundingRect"]) }
    override public func BoundingRect() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "BoundingRect"]) as! QRectF }
    override public func BoundingRectDefault() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "BoundingRectDefault"]) as! QRectF }
    override public func ConnectPaint(f: @escaping (_ painter: QPainter, _ option: QStyleOptionGraphicsItem, _ widget: QWidget) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPaint", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainter, inp[1] as! QStyleOptionGraphicsItem, inp[2] as! QWidget) } as Any) }
    override public func DisconnectPaint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPaint"]) }
    override public func Paint(painter: QPainter_ITF? = nil, option: QStyleOptionGraphicsItem_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Paint", painter as Any, option as Any, widget as Any]) }
    override public func PaintDefault(painter: QPainter_ITF? = nil, option: QStyleOptionGraphicsItem_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "PaintDefault", painter as Any, option as Any, widget as Any]) }
    public func Rect() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "Rect"]) as! QRectF }
    public func SetRect(rect: QRectF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRect", rect as Any]) }
    public func SetRect2(x: Float, y: Float, width: Float, height: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRect2", x as Any, y as Any, width as Any, height as Any]) }
    public func SetSpanAngle(angle: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSpanAngle", angle as Any]) }
    public func SetStartAngle(angle: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStartAngle", angle as Any]) }
    public func SpanAngle() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SpanAngle"]) as! Float) }
    public func StartAngle() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "StartAngle"]) as! Float) }
    public func ConnectDestroyQGraphicsEllipseItem(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsEllipseItem", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsEllipseItem() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsEllipseItem"]) }
    public func DestroyQGraphicsEllipseItem() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsEllipseItem"]) }
    public func DestroyQGraphicsEllipseItemDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsEllipseItemDefault"]) }
}

public func NewQGraphicsEllipseItemFromPointer(ptr: String) -> QGraphicsEllipseItem { let r = QGraphicsEllipseItem(); r.initFrom(p: ptr, n: "widgets.QGraphicsEllipseItem"); return r }
public func NewQGraphicsEllipseItem(parent: QGraphicsItem_ITF? = nil) -> QGraphicsEllipseItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsEllipseItem", "", parent as Any]) as! QGraphicsEllipseItem }
public func NewQGraphicsEllipseItem2(rect: QRectF_ITF? = nil, parent: QGraphicsItem_ITF? = nil) -> QGraphicsEllipseItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsEllipseItem2", "", rect as Any, parent as Any]) as! QGraphicsEllipseItem }
public func NewQGraphicsEllipseItem3(x: Float, y: Float, width: Float, height: Float, parent: QGraphicsItem_ITF? = nil) -> QGraphicsEllipseItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsEllipseItem3", "", x as Any, y as Any, width as Any, height as Any, parent as Any]) as! QGraphicsEllipseItem }
public protocol QGraphicsGridLayout_ITF: QGraphicsLayout_ITF {
    func QGraphicsGridLayout_PTR() -> QGraphicsGridLayout
}

public class QGraphicsGridLayout: QGraphicsLayout, QGraphicsGridLayout_ITF {
    public func QGraphicsGridLayout_PTR() -> QGraphicsGridLayout { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsGridLayout_PTR"]) as! QGraphicsGridLayout }
    public func AddItem(item: QGraphicsLayoutItem_ITF? = nil, row: Int, column: Int, rowSpan: Int, columnSpan: Int, alignment: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddItem", item as Any, row as Any, column as Any, rowSpan as Any, columnSpan as Any, alignment as Any]) }
    public func AddItem2(item: QGraphicsLayoutItem_ITF? = nil, row: Int, column: Int, alignment: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddItem2", item as Any, row as Any, column as Any, alignment as Any]) }
    public func Alignment(item: QGraphicsLayoutItem_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Alignment", item as Any]) as! Float) }
    public func ColumnAlignment(column: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ColumnAlignment", column as Any]) as! Float) }
    public func ColumnCount() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ColumnCount"]) as! Float) }
    public func ColumnMaximumWidth(column: Int) -> Float { callLocalFunction(l: ["", Pointer(), ___className, "ColumnMaximumWidth", column as Any]) as! Float }
    public func ColumnMinimumWidth(column: Int) -> Float { callLocalFunction(l: ["", Pointer(), ___className, "ColumnMinimumWidth", column as Any]) as! Float }
    public func ColumnPreferredWidth(column: Int) -> Float { callLocalFunction(l: ["", Pointer(), ___className, "ColumnPreferredWidth", column as Any]) as! Float }
    public func ColumnSpacing(column: Int) -> Float { callLocalFunction(l: ["", Pointer(), ___className, "ColumnSpacing", column as Any]) as! Float }
    public func ColumnStretchFactor(column: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ColumnStretchFactor", column as Any]) as! Float) }
    override public func ConnectCount(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCount", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectCount() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCount"]) }
    override public func Count() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Count"]) as! Float) }
    public func CountDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CountDefault"]) as! Float) }
    public func HorizontalSpacing() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "HorizontalSpacing"]) as! Float }
    override public func ConnectRemoveAt(f: @escaping (_ index: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRemoveAt", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    override public func DisconnectRemoveAt() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRemoveAt"]) }
    override public func RemoveAt(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveAt", index as Any]) }
    public func RemoveAtDefault(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveAtDefault", index as Any]) }
    public func RemoveItem(item: QGraphicsLayoutItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveItem", item as Any]) }
    public func RowAlignment(row: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "RowAlignment", row as Any]) as! Float) }
    public func RowCount() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "RowCount"]) as! Float) }
    public func RowMaximumHeight(row: Int) -> Float { callLocalFunction(l: ["", Pointer(), ___className, "RowMaximumHeight", row as Any]) as! Float }
    public func RowMinimumHeight(row: Int) -> Float { callLocalFunction(l: ["", Pointer(), ___className, "RowMinimumHeight", row as Any]) as! Float }
    public func RowPreferredHeight(row: Int) -> Float { callLocalFunction(l: ["", Pointer(), ___className, "RowPreferredHeight", row as Any]) as! Float }
    public func RowSpacing(row: Int) -> Float { callLocalFunction(l: ["", Pointer(), ___className, "RowSpacing", row as Any]) as! Float }
    public func RowStretchFactor(row: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "RowStretchFactor", row as Any]) as! Float) }
    public func SetAlignment(item: QGraphicsLayoutItem_ITF? = nil, alignment: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAlignment", item as Any, alignment as Any]) }
    public func SetColumnAlignment(column: Int, alignment: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetColumnAlignment", column as Any, alignment as Any]) }
    public func SetColumnFixedWidth(column: Int, width: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetColumnFixedWidth", column as Any, width as Any]) }
    public func SetColumnMaximumWidth(column: Int, width: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetColumnMaximumWidth", column as Any, width as Any]) }
    public func SetColumnMinimumWidth(column: Int, width: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetColumnMinimumWidth", column as Any, width as Any]) }
    public func SetColumnPreferredWidth(column: Int, width: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetColumnPreferredWidth", column as Any, width as Any]) }
    public func SetColumnSpacing(column: Int, spacing: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetColumnSpacing", column as Any, spacing as Any]) }
    public func SetColumnStretchFactor(column: Int, stretch: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetColumnStretchFactor", column as Any, stretch as Any]) }
    public func SetHorizontalSpacing(spacing: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetHorizontalSpacing", spacing as Any]) }
    public func SetRowAlignment(row: Int, alignment: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRowAlignment", row as Any, alignment as Any]) }
    public func SetRowFixedHeight(row: Int, height: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRowFixedHeight", row as Any, height as Any]) }
    public func SetRowMaximumHeight(row: Int, height: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRowMaximumHeight", row as Any, height as Any]) }
    public func SetRowMinimumHeight(row: Int, height: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRowMinimumHeight", row as Any, height as Any]) }
    public func SetRowPreferredHeight(row: Int, height: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRowPreferredHeight", row as Any, height as Any]) }
    public func SetRowSpacing(row: Int, spacing: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRowSpacing", row as Any, spacing as Any]) }
    public func SetRowStretchFactor(row: Int, stretch: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRowStretchFactor", row as Any, stretch as Any]) }
    public func SetSpacing(spacing: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSpacing", spacing as Any]) }
    public func SetVerticalSpacing(spacing: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetVerticalSpacing", spacing as Any]) }
    override public func ConnectSizeHint(f: @escaping (_ which: Int, _ constraint: QSizeF) -> QSizeF) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSizeHint", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! QSizeF) } as Any) }
    override public func DisconnectSizeHint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSizeHint"]) }
    override public func SizeHint(which: Int, constraint: QSizeF_ITF? = nil) -> QSizeF { callLocalFunction(l: ["", Pointer(), ___className, "SizeHint", which as Any, constraint as Any]) as! QSizeF }
    override public func SizeHintDefault(which: Int, constraint: QSizeF_ITF? = nil) -> QSizeF { callLocalFunction(l: ["", Pointer(), ___className, "SizeHintDefault", which as Any, constraint as Any]) as! QSizeF }
    public func VerticalSpacing() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "VerticalSpacing"]) as! Float }
    public func ConnectDestroyQGraphicsGridLayout(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsGridLayout", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsGridLayout() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsGridLayout"]) }
    public func DestroyQGraphicsGridLayout() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsGridLayout"]) }
    public func DestroyQGraphicsGridLayoutDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsGridLayoutDefault"]) }
}

public func NewQGraphicsGridLayoutFromPointer(ptr: String) -> QGraphicsGridLayout { let r = QGraphicsGridLayout(); r.initFrom(p: ptr, n: "widgets.QGraphicsGridLayout"); return r }
public func NewQGraphicsGridLayout(parent: QGraphicsLayoutItem_ITF? = nil) -> QGraphicsGridLayout { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsGridLayout", "", parent as Any]) as! QGraphicsGridLayout }
public protocol QGraphicsItem_ITF {
    func QGraphicsItem_PTR() -> QGraphicsItem
}

public class QGraphicsItem: Internal, QGraphicsItem_ITF {
    public func QGraphicsItem_PTR() -> QGraphicsItem { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsItem_PTR"]) as! QGraphicsItem }
    public func AcceptDrops() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "AcceptDrops"]) as! Bool }
    public func AcceptHoverEvents() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "AcceptHoverEvents"]) as! Bool }
    public func AcceptTouchEvents() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "AcceptTouchEvents"]) as! Bool }
    public func AcceptedMouseButtons() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "AcceptedMouseButtons"]) as! Float) }
    public func ConnectAdvance(f: @escaping (_ phase: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectAdvance", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectAdvance() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectAdvance"]) }
    public func Advance(phase: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Advance", phase as Any]) }
    public func AdvanceDefault(phase: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AdvanceDefault", phase as Any]) }
    public func ConnectBoundingRect(f: @escaping () -> QRectF) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectBoundingRect", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectBoundingRect() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectBoundingRect"]) }
    public func BoundingRect() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "BoundingRect"]) as! QRectF }
    public func BoundingRegion(itemToDeviceTransform: QTransform_ITF? = nil) -> QRegion { callLocalFunction(l: ["", Pointer(), ___className, "BoundingRegion", itemToDeviceTransform as Any]) as! QRegion }
    public func BoundingRegionGranularity() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "BoundingRegionGranularity"]) as! Float }
    public func CacheMode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CacheMode"]) as! Float) }
    public func ChildItems() -> [QGraphicsItem] { callLocalFunction(l: ["", Pointer(), ___className, "ChildItems"]) as! [QGraphicsItem] }
    public func ChildrenBoundingRect() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "ChildrenBoundingRect"]) as! QRectF }
    public func ClearFocus() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearFocus"]) }
    public func ClipPath() -> QPainterPath { callLocalFunction(l: ["", Pointer(), ___className, "ClipPath"]) as! QPainterPath }
    public func ConnectCollidesWithItem(f: @escaping (_ other: QGraphicsItem, _ mode: Int) -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCollidesWithItem", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QGraphicsItem, Int(inp[1] as! Float)) } as Any) }
    public func DisconnectCollidesWithItem() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCollidesWithItem"]) }
    public func CollidesWithItem(other: QGraphicsItem_ITF? = nil, mode: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "CollidesWithItem", other as Any, mode as Any]) as! Bool }
    public func CollidesWithItemDefault(other: QGraphicsItem_ITF? = nil, mode: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "CollidesWithItemDefault", other as Any, mode as Any]) as! Bool }
    public func ConnectCollidesWithPath(f: @escaping (_ path: QPainterPath, _ mode: Int) -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCollidesWithPath", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainterPath, Int(inp[1] as! Float)) } as Any) }
    public func DisconnectCollidesWithPath() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCollidesWithPath"]) }
    public func CollidesWithPath(path: QPainterPath_ITF? = nil, mode: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "CollidesWithPath", path as Any, mode as Any]) as! Bool }
    public func CollidesWithPathDefault(path: QPainterPath_ITF? = nil, mode: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "CollidesWithPathDefault", path as Any, mode as Any]) as! Bool }
    public func CollidingItems(mode: Int) -> [QGraphicsItem] { callLocalFunction(l: ["", Pointer(), ___className, "CollidingItems", mode as Any]) as! [QGraphicsItem] }
    public func CommonAncestorItem(other: QGraphicsItem_ITF? = nil) -> QGraphicsItem { callLocalFunction(l: ["", Pointer(), ___className, "CommonAncestorItem", other as Any]) as! QGraphicsItem }
    public func ConnectContains(f: @escaping (_ point: QPointF) -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectContains", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPointF) } as Any) }
    public func DisconnectContains() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectContains"]) }
    public func Contains(point: QPointF_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "Contains", point as Any]) as! Bool }
    public func ContainsDefault(point: QPointF_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "ContainsDefault", point as Any]) as! Bool }
    public func ConnectContextMenuEvent(f: @escaping (_ event: QGraphicsSceneContextMenuEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectContextMenuEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QGraphicsSceneContextMenuEvent) } as Any) }
    public func DisconnectContextMenuEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectContextMenuEvent"]) }
    public func ContextMenuEvent(event: QGraphicsSceneContextMenuEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ContextMenuEvent", event as Any]) }
    public func ContextMenuEventDefault(event: QGraphicsSceneContextMenuEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ContextMenuEventDefault", event as Any]) }
    public func Cursor() -> QCursor { callLocalFunction(l: ["", Pointer(), ___className, "Cursor"]) as! QCursor }
    public func Data(key: Int) -> QVariant { callLocalFunction(l: ["", Pointer(), ___className, "Data", key as Any]) as! QVariant }
    public func DeviceTransform(viewportTransform: QTransform_ITF? = nil) -> QTransform { callLocalFunction(l: ["", Pointer(), ___className, "DeviceTransform", viewportTransform as Any]) as! QTransform }
    public func ConnectDragEnterEvent(f: @escaping (_ event: QGraphicsSceneDragDropEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDragEnterEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QGraphicsSceneDragDropEvent) } as Any) }
    public func DisconnectDragEnterEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDragEnterEvent"]) }
    public func DragEnterEvent(event: QGraphicsSceneDragDropEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DragEnterEvent", event as Any]) }
    public func DragEnterEventDefault(event: QGraphicsSceneDragDropEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DragEnterEventDefault", event as Any]) }
    public func ConnectDragLeaveEvent(f: @escaping (_ event: QGraphicsSceneDragDropEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDragLeaveEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QGraphicsSceneDragDropEvent) } as Any) }
    public func DisconnectDragLeaveEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDragLeaveEvent"]) }
    public func DragLeaveEvent(event: QGraphicsSceneDragDropEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DragLeaveEvent", event as Any]) }
    public func DragLeaveEventDefault(event: QGraphicsSceneDragDropEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DragLeaveEventDefault", event as Any]) }
    public func ConnectDragMoveEvent(f: @escaping (_ event: QGraphicsSceneDragDropEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDragMoveEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QGraphicsSceneDragDropEvent) } as Any) }
    public func DisconnectDragMoveEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDragMoveEvent"]) }
    public func DragMoveEvent(event: QGraphicsSceneDragDropEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DragMoveEvent", event as Any]) }
    public func DragMoveEventDefault(event: QGraphicsSceneDragDropEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DragMoveEventDefault", event as Any]) }
    public func ConnectDropEvent(f: @escaping (_ event: QGraphicsSceneDragDropEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDropEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QGraphicsSceneDragDropEvent) } as Any) }
    public func DisconnectDropEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDropEvent"]) }
    public func DropEvent(event: QGraphicsSceneDragDropEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DropEvent", event as Any]) }
    public func DropEventDefault(event: QGraphicsSceneDragDropEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DropEventDefault", event as Any]) }
    public func EffectiveOpacity() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "EffectiveOpacity"]) as! Float }
    public func EnsureVisible(rect: QRectF_ITF? = nil, xmargi: Int, ymargi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "EnsureVisible", rect as Any, xmargi as Any, ymargi as Any]) }
    public func EnsureVisible2(x: Float, y: Float, w: Float, h: Float, xmargi: Int, ymargi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "EnsureVisible2", x as Any, y as Any, w as Any, h as Any, xmargi as Any, ymargi as Any]) }
    public func FiltersChildEvents() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "FiltersChildEvents"]) as! Bool }
    public func Flags() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Flags"]) as! Float) }
    public func ConnectFocusInEvent(f: @escaping (_ event: QFocusEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectFocusInEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QFocusEvent) } as Any) }
    public func DisconnectFocusInEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectFocusInEvent"]) }
    public func FocusInEvent(event: QFocusEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "FocusInEvent", event as Any]) }
    public func FocusInEventDefault(event: QFocusEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "FocusInEventDefault", event as Any]) }
    public func FocusItem() -> QGraphicsItem { callLocalFunction(l: ["", Pointer(), ___className, "FocusItem"]) as! QGraphicsItem }
    public func ConnectFocusOutEvent(f: @escaping (_ event: QFocusEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectFocusOutEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QFocusEvent) } as Any) }
    public func DisconnectFocusOutEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectFocusOutEvent"]) }
    public func FocusOutEvent(event: QFocusEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "FocusOutEvent", event as Any]) }
    public func FocusOutEventDefault(event: QFocusEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "FocusOutEventDefault", event as Any]) }
    public func FocusProxy() -> QGraphicsItem { callLocalFunction(l: ["", Pointer(), ___className, "FocusProxy"]) as! QGraphicsItem }
    public func GrabKeyboard() { _ = callLocalFunction(l: ["", Pointer(), ___className, "GrabKeyboard"]) }
    public func GrabMouse() { _ = callLocalFunction(l: ["", Pointer(), ___className, "GrabMouse"]) }
    public func GraphicsEffect() -> QGraphicsEffect { callLocalFunction(l: ["", Pointer(), ___className, "GraphicsEffect"]) as! QGraphicsEffect }
    public func Group() -> QGraphicsItemGroup { callLocalFunction(l: ["", Pointer(), ___className, "Group"]) as! QGraphicsItemGroup }
    public func HasCursor() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "HasCursor"]) as! Bool }
    public func HasFocus() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "HasFocus"]) as! Bool }
    public func Hide() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Hide"]) }
    public func ConnectHoverEnterEvent(f: @escaping (_ event: QGraphicsSceneHoverEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHoverEnterEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QGraphicsSceneHoverEvent) } as Any) }
    public func DisconnectHoverEnterEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHoverEnterEvent"]) }
    public func HoverEnterEvent(event: QGraphicsSceneHoverEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "HoverEnterEvent", event as Any]) }
    public func HoverEnterEventDefault(event: QGraphicsSceneHoverEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "HoverEnterEventDefault", event as Any]) }
    public func ConnectHoverLeaveEvent(f: @escaping (_ event: QGraphicsSceneHoverEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHoverLeaveEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QGraphicsSceneHoverEvent) } as Any) }
    public func DisconnectHoverLeaveEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHoverLeaveEvent"]) }
    public func HoverLeaveEvent(event: QGraphicsSceneHoverEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "HoverLeaveEvent", event as Any]) }
    public func HoverLeaveEventDefault(event: QGraphicsSceneHoverEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "HoverLeaveEventDefault", event as Any]) }
    public func ConnectHoverMoveEvent(f: @escaping (_ event: QGraphicsSceneHoverEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHoverMoveEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QGraphicsSceneHoverEvent) } as Any) }
    public func DisconnectHoverMoveEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHoverMoveEvent"]) }
    public func HoverMoveEvent(event: QGraphicsSceneHoverEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "HoverMoveEvent", event as Any]) }
    public func HoverMoveEventDefault(event: QGraphicsSceneHoverEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "HoverMoveEventDefault", event as Any]) }
    public func ConnectInputMethodEvent(f: @escaping (_ event: QInputMethodEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectInputMethodEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QInputMethodEvent) } as Any) }
    public func DisconnectInputMethodEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectInputMethodEvent"]) }
    public func InputMethodEvent(event: QInputMethodEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InputMethodEvent", event as Any]) }
    public func InputMethodEventDefault(event: QInputMethodEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InputMethodEventDefault", event as Any]) }
    public func InputMethodHints() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "InputMethodHints"]) as! Float) }
    public func ConnectInputMethodQuery(f: @escaping (_ query: Int) -> QVariant) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectInputMethodQuery", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectInputMethodQuery() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectInputMethodQuery"]) }
    public func InputMethodQuery(query: Int) -> QVariant { callLocalFunction(l: ["", Pointer(), ___className, "InputMethodQuery", query as Any]) as! QVariant }
    public func InputMethodQueryDefault(query: Int) -> QVariant { callLocalFunction(l: ["", Pointer(), ___className, "InputMethodQueryDefault", query as Any]) as! QVariant }
    public func InstallSceneEventFilter(filterItem: QGraphicsItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InstallSceneEventFilter", filterItem as Any]) }
    public func IsActive() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsActive"]) as! Bool }
    public func IsAncestorOf(child: QGraphicsItem_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsAncestorOf", child as Any]) as! Bool }
    public func IsClipped() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsClipped"]) as! Bool }
    public func IsEnabled() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsEnabled"]) as! Bool }
    public func IsObscured(rect: QRectF_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsObscured", rect as Any]) as! Bool }
    public func IsObscured2(x: Float, y: Float, w: Float, h: Float) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsObscured2", x as Any, y as Any, w as Any, h as Any]) as! Bool }
    public func ConnectIsObscuredBy(f: @escaping (_ item: QGraphicsItem) -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectIsObscuredBy", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QGraphicsItem) } as Any) }
    public func DisconnectIsObscuredBy() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectIsObscuredBy"]) }
    public func IsObscuredBy(item: QGraphicsItem_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsObscuredBy", item as Any]) as! Bool }
    public func IsObscuredByDefault(item: QGraphicsItem_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsObscuredByDefault", item as Any]) as! Bool }
    public func IsPanel() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsPanel"]) as! Bool }
    public func IsSelected() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsSelected"]) as! Bool }
    public func IsUnderMouse() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsUnderMouse"]) as! Bool }
    public func IsVisible() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsVisible"]) as! Bool }
    public func IsVisibleTo(parent: QGraphicsItem_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsVisibleTo", parent as Any]) as! Bool }
    public func IsWidget() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsWidget"]) as! Bool }
    public func IsWindow() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsWindow"]) as! Bool }
    public func ConnectItemChange(f: @escaping (_ change: Int, _ value: QVariant) -> QVariant) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectItemChange", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! QVariant) } as Any) }
    public func DisconnectItemChange() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectItemChange"]) }
    public func ItemChange(change: Int, value: QVariant_ITF? = nil) -> QVariant { callLocalFunction(l: ["", Pointer(), ___className, "ItemChange", change as Any, value as Any]) as! QVariant }
    public func ItemChangeDefault(change: Int, value: QVariant_ITF? = nil) -> QVariant { callLocalFunction(l: ["", Pointer(), ___className, "ItemChangeDefault", change as Any, value as Any]) as! QVariant }
    public func ItemTransform(other: QGraphicsItem_ITF? = nil, ok: Bool) -> QTransform { callLocalFunction(l: ["", Pointer(), ___className, "ItemTransform", other as Any, ok as Any]) as! QTransform }
    public func ConnectKeyPressEvent(f: @escaping (_ event: QKeyEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectKeyPressEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QKeyEvent) } as Any) }
    public func DisconnectKeyPressEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectKeyPressEvent"]) }
    public func KeyPressEvent(event: QKeyEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "KeyPressEvent", event as Any]) }
    public func KeyPressEventDefault(event: QKeyEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "KeyPressEventDefault", event as Any]) }
    public func ConnectKeyReleaseEvent(f: @escaping (_ event: QKeyEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectKeyReleaseEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QKeyEvent) } as Any) }
    public func DisconnectKeyReleaseEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectKeyReleaseEvent"]) }
    public func KeyReleaseEvent(event: QKeyEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "KeyReleaseEvent", event as Any]) }
    public func KeyReleaseEventDefault(event: QKeyEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "KeyReleaseEventDefault", event as Any]) }
    public func MapFromItem(item: QGraphicsItem_ITF? = nil, point: QPointF_ITF? = nil) -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "MapFromItem", item as Any, point as Any]) as! QPointF }
    public func MapFromItem2(item: QGraphicsItem_ITF? = nil, rect: QRectF_ITF? = nil) -> QPolygonF { callLocalFunction(l: ["", Pointer(), ___className, "MapFromItem2", item as Any, rect as Any]) as! QPolygonF }
    public func MapFromItem3(item: QGraphicsItem_ITF? = nil, polygon: QPolygonF_ITF? = nil) -> QPolygonF { callLocalFunction(l: ["", Pointer(), ___className, "MapFromItem3", item as Any, polygon as Any]) as! QPolygonF }
    public func MapFromItem4(item: QGraphicsItem_ITF? = nil, path: QPainterPath_ITF? = nil) -> QPainterPath { callLocalFunction(l: ["", Pointer(), ___className, "MapFromItem4", item as Any, path as Any]) as! QPainterPath }
    public func MapFromItem5(item: QGraphicsItem_ITF? = nil, x: Float, y: Float) -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "MapFromItem5", item as Any, x as Any, y as Any]) as! QPointF }
    public func MapFromItem6(item: QGraphicsItem_ITF? = nil, x: Float, y: Float, w: Float, h: Float) -> QPolygonF { callLocalFunction(l: ["", Pointer(), ___className, "MapFromItem6", item as Any, x as Any, y as Any, w as Any, h as Any]) as! QPolygonF }
    public func MapFromParent(point: QPointF_ITF? = nil) -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "MapFromParent", point as Any]) as! QPointF }
    public func MapFromParent2(rect: QRectF_ITF? = nil) -> QPolygonF { callLocalFunction(l: ["", Pointer(), ___className, "MapFromParent2", rect as Any]) as! QPolygonF }
    public func MapFromParent3(polygon: QPolygonF_ITF? = nil) -> QPolygonF { callLocalFunction(l: ["", Pointer(), ___className, "MapFromParent3", polygon as Any]) as! QPolygonF }
    public func MapFromParent4(path: QPainterPath_ITF? = nil) -> QPainterPath { callLocalFunction(l: ["", Pointer(), ___className, "MapFromParent4", path as Any]) as! QPainterPath }
    public func MapFromParent5(x: Float, y: Float) -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "MapFromParent5", x as Any, y as Any]) as! QPointF }
    public func MapFromParent6(x: Float, y: Float, w: Float, h: Float) -> QPolygonF { callLocalFunction(l: ["", Pointer(), ___className, "MapFromParent6", x as Any, y as Any, w as Any, h as Any]) as! QPolygonF }
    public func MapFromScene(point: QPointF_ITF? = nil) -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "MapFromScene", point as Any]) as! QPointF }
    public func MapFromScene2(rect: QRectF_ITF? = nil) -> QPolygonF { callLocalFunction(l: ["", Pointer(), ___className, "MapFromScene2", rect as Any]) as! QPolygonF }
    public func MapFromScene3(polygon: QPolygonF_ITF? = nil) -> QPolygonF { callLocalFunction(l: ["", Pointer(), ___className, "MapFromScene3", polygon as Any]) as! QPolygonF }
    public func MapFromScene4(path: QPainterPath_ITF? = nil) -> QPainterPath { callLocalFunction(l: ["", Pointer(), ___className, "MapFromScene4", path as Any]) as! QPainterPath }
    public func MapFromScene5(x: Float, y: Float) -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "MapFromScene5", x as Any, y as Any]) as! QPointF }
    public func MapFromScene6(x: Float, y: Float, w: Float, h: Float) -> QPolygonF { callLocalFunction(l: ["", Pointer(), ___className, "MapFromScene6", x as Any, y as Any, w as Any, h as Any]) as! QPolygonF }
    public func MapRectFromItem(item: QGraphicsItem_ITF? = nil, rect: QRectF_ITF? = nil) -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "MapRectFromItem", item as Any, rect as Any]) as! QRectF }
    public func MapRectFromItem2(item: QGraphicsItem_ITF? = nil, x: Float, y: Float, w: Float, h: Float) -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "MapRectFromItem2", item as Any, x as Any, y as Any, w as Any, h as Any]) as! QRectF }
    public func MapRectFromParent(rect: QRectF_ITF? = nil) -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "MapRectFromParent", rect as Any]) as! QRectF }
    public func MapRectFromParent2(x: Float, y: Float, w: Float, h: Float) -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "MapRectFromParent2", x as Any, y as Any, w as Any, h as Any]) as! QRectF }
    public func MapRectFromScene(rect: QRectF_ITF? = nil) -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "MapRectFromScene", rect as Any]) as! QRectF }
    public func MapRectFromScene2(x: Float, y: Float, w: Float, h: Float) -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "MapRectFromScene2", x as Any, y as Any, w as Any, h as Any]) as! QRectF }
    public func MapRectToItem(item: QGraphicsItem_ITF? = nil, rect: QRectF_ITF? = nil) -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "MapRectToItem", item as Any, rect as Any]) as! QRectF }
    public func MapRectToItem2(item: QGraphicsItem_ITF? = nil, x: Float, y: Float, w: Float, h: Float) -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "MapRectToItem2", item as Any, x as Any, y as Any, w as Any, h as Any]) as! QRectF }
    public func MapRectToParent(rect: QRectF_ITF? = nil) -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "MapRectToParent", rect as Any]) as! QRectF }
    public func MapRectToParent2(x: Float, y: Float, w: Float, h: Float) -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "MapRectToParent2", x as Any, y as Any, w as Any, h as Any]) as! QRectF }
    public func MapRectToScene(rect: QRectF_ITF? = nil) -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "MapRectToScene", rect as Any]) as! QRectF }
    public func MapRectToScene2(x: Float, y: Float, w: Float, h: Float) -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "MapRectToScene2", x as Any, y as Any, w as Any, h as Any]) as! QRectF }
    public func MapToItem(item: QGraphicsItem_ITF? = nil, point: QPointF_ITF? = nil) -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "MapToItem", item as Any, point as Any]) as! QPointF }
    public func MapToItem2(item: QGraphicsItem_ITF? = nil, rect: QRectF_ITF? = nil) -> QPolygonF { callLocalFunction(l: ["", Pointer(), ___className, "MapToItem2", item as Any, rect as Any]) as! QPolygonF }
    public func MapToItem3(item: QGraphicsItem_ITF? = nil, polygon: QPolygonF_ITF? = nil) -> QPolygonF { callLocalFunction(l: ["", Pointer(), ___className, "MapToItem3", item as Any, polygon as Any]) as! QPolygonF }
    public func MapToItem4(item: QGraphicsItem_ITF? = nil, path: QPainterPath_ITF? = nil) -> QPainterPath { callLocalFunction(l: ["", Pointer(), ___className, "MapToItem4", item as Any, path as Any]) as! QPainterPath }
    public func MapToItem5(item: QGraphicsItem_ITF? = nil, x: Float, y: Float) -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "MapToItem5", item as Any, x as Any, y as Any]) as! QPointF }
    public func MapToItem6(item: QGraphicsItem_ITF? = nil, x: Float, y: Float, w: Float, h: Float) -> QPolygonF { callLocalFunction(l: ["", Pointer(), ___className, "MapToItem6", item as Any, x as Any, y as Any, w as Any, h as Any]) as! QPolygonF }
    public func MapToParent(point: QPointF_ITF? = nil) -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "MapToParent", point as Any]) as! QPointF }
    public func MapToParent2(rect: QRectF_ITF? = nil) -> QPolygonF { callLocalFunction(l: ["", Pointer(), ___className, "MapToParent2", rect as Any]) as! QPolygonF }
    public func MapToParent3(polygon: QPolygonF_ITF? = nil) -> QPolygonF { callLocalFunction(l: ["", Pointer(), ___className, "MapToParent3", polygon as Any]) as! QPolygonF }
    public func MapToParent4(path: QPainterPath_ITF? = nil) -> QPainterPath { callLocalFunction(l: ["", Pointer(), ___className, "MapToParent4", path as Any]) as! QPainterPath }
    public func MapToParent5(x: Float, y: Float) -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "MapToParent5", x as Any, y as Any]) as! QPointF }
    public func MapToParent6(x: Float, y: Float, w: Float, h: Float) -> QPolygonF { callLocalFunction(l: ["", Pointer(), ___className, "MapToParent6", x as Any, y as Any, w as Any, h as Any]) as! QPolygonF }
    public func MapToScene(point: QPointF_ITF? = nil) -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "MapToScene", point as Any]) as! QPointF }
    public func MapToScene2(rect: QRectF_ITF? = nil) -> QPolygonF { callLocalFunction(l: ["", Pointer(), ___className, "MapToScene2", rect as Any]) as! QPolygonF }
    public func MapToScene3(polygon: QPolygonF_ITF? = nil) -> QPolygonF { callLocalFunction(l: ["", Pointer(), ___className, "MapToScene3", polygon as Any]) as! QPolygonF }
    public func MapToScene4(path: QPainterPath_ITF? = nil) -> QPainterPath { callLocalFunction(l: ["", Pointer(), ___className, "MapToScene4", path as Any]) as! QPainterPath }
    public func MapToScene5(x: Float, y: Float) -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "MapToScene5", x as Any, y as Any]) as! QPointF }
    public func MapToScene6(x: Float, y: Float, w: Float, h: Float) -> QPolygonF { callLocalFunction(l: ["", Pointer(), ___className, "MapToScene6", x as Any, y as Any, w as Any, h as Any]) as! QPolygonF }
    public func ConnectMouseDoubleClickEvent(f: @escaping (_ event: QGraphicsSceneMouseEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMouseDoubleClickEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QGraphicsSceneMouseEvent) } as Any) }
    public func DisconnectMouseDoubleClickEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMouseDoubleClickEvent"]) }
    public func MouseDoubleClickEvent(event: QGraphicsSceneMouseEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MouseDoubleClickEvent", event as Any]) }
    public func MouseDoubleClickEventDefault(event: QGraphicsSceneMouseEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MouseDoubleClickEventDefault", event as Any]) }
    public func ConnectMouseMoveEvent(f: @escaping (_ event: QGraphicsSceneMouseEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMouseMoveEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QGraphicsSceneMouseEvent) } as Any) }
    public func DisconnectMouseMoveEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMouseMoveEvent"]) }
    public func MouseMoveEvent(event: QGraphicsSceneMouseEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MouseMoveEvent", event as Any]) }
    public func MouseMoveEventDefault(event: QGraphicsSceneMouseEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MouseMoveEventDefault", event as Any]) }
    public func ConnectMousePressEvent(f: @escaping (_ event: QGraphicsSceneMouseEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMousePressEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QGraphicsSceneMouseEvent) } as Any) }
    public func DisconnectMousePressEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMousePressEvent"]) }
    public func MousePressEvent(event: QGraphicsSceneMouseEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MousePressEvent", event as Any]) }
    public func MousePressEventDefault(event: QGraphicsSceneMouseEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MousePressEventDefault", event as Any]) }
    public func ConnectMouseReleaseEvent(f: @escaping (_ event: QGraphicsSceneMouseEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMouseReleaseEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QGraphicsSceneMouseEvent) } as Any) }
    public func DisconnectMouseReleaseEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMouseReleaseEvent"]) }
    public func MouseReleaseEvent(event: QGraphicsSceneMouseEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MouseReleaseEvent", event as Any]) }
    public func MouseReleaseEventDefault(event: QGraphicsSceneMouseEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MouseReleaseEventDefault", event as Any]) }
    public func MoveBy(dx: Float, dy: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MoveBy", dx as Any, dy as Any]) }
    public func Opacity() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "Opacity"]) as! Float }
    public func ConnectOpaqueArea(f: @escaping () -> QPainterPath) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectOpaqueArea", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectOpaqueArea() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectOpaqueArea"]) }
    public func OpaqueArea() -> QPainterPath { callLocalFunction(l: ["", Pointer(), ___className, "OpaqueArea"]) as! QPainterPath }
    public func OpaqueAreaDefault() -> QPainterPath { callLocalFunction(l: ["", Pointer(), ___className, "OpaqueAreaDefault"]) as! QPainterPath }
    public func ConnectPaint(f: @escaping (_ painter: QPainter, _ option: QStyleOptionGraphicsItem, _ widget: QWidget) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPaint", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainter, inp[1] as! QStyleOptionGraphicsItem, inp[2] as! QWidget) } as Any) }
    public func DisconnectPaint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPaint"]) }
    public func Paint(painter: QPainter_ITF? = nil, option: QStyleOptionGraphicsItem_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Paint", painter as Any, option as Any, widget as Any]) }
    public func Panel() -> QGraphicsItem { callLocalFunction(l: ["", Pointer(), ___className, "Panel"]) as! QGraphicsItem }
    public func PanelModality() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "PanelModality"]) as! Float) }
    public func ParentItem() -> QGraphicsItem { callLocalFunction(l: ["", Pointer(), ___className, "ParentItem"]) as! QGraphicsItem }
    public func ParentObject() -> QGraphicsObject { callLocalFunction(l: ["", Pointer(), ___className, "ParentObject"]) as! QGraphicsObject }
    public func ParentWidget() -> QGraphicsWidget { callLocalFunction(l: ["", Pointer(), ___className, "ParentWidget"]) as! QGraphicsWidget }
    public func Pos() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "Pos"]) as! QPointF }
    public func PrepareGeometryChange() { _ = callLocalFunction(l: ["", Pointer(), ___className, "PrepareGeometryChange"]) }
    public func RemoveSceneEventFilter(filterItem: QGraphicsItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveSceneEventFilter", filterItem as Any]) }
    public func ResetTransform() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResetTransform"]) }
    public func Rotation() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "Rotation"]) as! Float }
    public func Scale2() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "Scale2"]) as! Float }
    public func Scene() -> QGraphicsScene { callLocalFunction(l: ["", Pointer(), ___className, "Scene"]) as! QGraphicsScene }
    public func SceneBoundingRect() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "SceneBoundingRect"]) as! QRectF }
    public func ConnectSceneEvent(f: @escaping (_ event: QEvent) -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSceneEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QEvent) } as Any) }
    public func DisconnectSceneEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSceneEvent"]) }
    public func SceneEvent(event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "SceneEvent", event as Any]) as! Bool }
    public func SceneEventDefault(event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "SceneEventDefault", event as Any]) as! Bool }
    public func ConnectSceneEventFilter(f: @escaping (_ watched: QGraphicsItem, _ event: QEvent) -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSceneEventFilter", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QGraphicsItem, inp[1] as! QEvent) } as Any) }
    public func DisconnectSceneEventFilter() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSceneEventFilter"]) }
    public func SceneEventFilter(watched: QGraphicsItem_ITF? = nil, event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "SceneEventFilter", watched as Any, event as Any]) as! Bool }
    public func SceneEventFilterDefault(watched: QGraphicsItem_ITF? = nil, event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "SceneEventFilterDefault", watched as Any, event as Any]) as! Bool }
    public func ScenePos() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "ScenePos"]) as! QPointF }
    public func SceneTransform() -> QTransform { callLocalFunction(l: ["", Pointer(), ___className, "SceneTransform"]) as! QTransform }
    public func Scroll(dx: Float, dy: Float, rect: QRectF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Scroll", dx as Any, dy as Any, rect as Any]) }
    public func SetAcceptDrops(on: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAcceptDrops", on as Any]) }
    public func SetAcceptHoverEvents(enabled: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAcceptHoverEvents", enabled as Any]) }
    public func SetAcceptTouchEvents(enabled: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAcceptTouchEvents", enabled as Any]) }
    public func SetAcceptedMouseButtons(buttons: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAcceptedMouseButtons", buttons as Any]) }
    public func SetActive(active: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetActive", active as Any]) }
    public func SetBoundingRegionGranularity(granularity: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetBoundingRegionGranularity", granularity as Any]) }
    public func SetCacheMode(mode: Int, logicalCacheSize: QSize_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCacheMode", mode as Any, logicalCacheSize as Any]) }
    public func SetCursor(cursor: QCursor_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCursor", cursor as Any]) }
    public func SetData(key: Int, value: QVariant_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetData", key as Any, value as Any]) }
    public func SetEnabled(enabled: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetEnabled", enabled as Any]) }
    public func SetFiltersChildEvents(enabled: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFiltersChildEvents", enabled as Any]) }
    public func SetFlag(flag: Int, enabled: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFlag", flag as Any, enabled as Any]) }
    public func SetFlags(flags: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFlags", flags as Any]) }
    public func SetFocus(focusReason: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFocus", focusReason as Any]) }
    public func SetFocusProxy(item: QGraphicsItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFocusProxy", item as Any]) }
    public func SetGraphicsEffect(effect: QGraphicsEffect_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetGraphicsEffect", effect as Any]) }
    public func SetGroup(group: QGraphicsItemGroup_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetGroup", group as Any]) }
    public func SetInputMethodHints(hints: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetInputMethodHints", hints as Any]) }
    public func SetOpacity(opacity: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOpacity", opacity as Any]) }
    public func SetPanelModality(panelModality: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPanelModality", panelModality as Any]) }
    public func SetParentItem(newParent: QGraphicsItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetParentItem", newParent as Any]) }
    public func SetPos(pos: QPointF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPos", pos as Any]) }
    public func SetPos2(x: Float, y: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPos2", x as Any, y as Any]) }
    public func SetRotation(angle: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRotation", angle as Any]) }
    public func SetScale(factor: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetScale", factor as Any]) }
    public func SetSelected(selected: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSelected", selected as Any]) }
    public func SetToolTip(toolTip: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetToolTip", toolTip as Any]) }
    public func SetTransform(matrix: QTransform_ITF? = nil, combine: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTransform", matrix as Any, combine as Any]) }
    public func SetTransformOriginPoint(origi: QPointF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTransformOriginPoint", origi as Any]) }
    public func SetTransformOriginPoint2(x: Float, y: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTransformOriginPoint2", x as Any, y as Any]) }
    public func SetTransformations(transformations: [QGraphicsTransform]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTransformations", transformations as Any]) }
    public func SetVisible(visible: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetVisible", visible as Any]) }
    public func SetX(x: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetX", x as Any]) }
    public func SetY(y: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetY", y as Any]) }
    public func SetZValue(z: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetZValue", z as Any]) }
    public func ConnectShape(f: @escaping () -> QPainterPath) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectShape", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectShape() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectShape"]) }
    public func Shape() -> QPainterPath { callLocalFunction(l: ["", Pointer(), ___className, "Shape"]) as! QPainterPath }
    public func ShapeDefault() -> QPainterPath { callLocalFunction(l: ["", Pointer(), ___className, "ShapeDefault"]) as! QPainterPath }
    public func Show() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Show"]) }
    public func StackBefore(sibling: QGraphicsItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "StackBefore", sibling as Any]) }
    public func ToGraphicsObject() -> QGraphicsObject { callLocalFunction(l: ["", Pointer(), ___className, "ToGraphicsObject"]) as! QGraphicsObject }
    public func ToGraphicsObject2() -> QGraphicsObject { callLocalFunction(l: ["", Pointer(), ___className, "ToGraphicsObject2"]) as! QGraphicsObject }
    public func ToolTip() -> String { callLocalFunction(l: ["", Pointer(), ___className, "ToolTip"]) as! String }
    public func TopLevelItem() -> QGraphicsItem { callLocalFunction(l: ["", Pointer(), ___className, "TopLevelItem"]) as! QGraphicsItem }
    public func TopLevelWidget() -> QGraphicsWidget { callLocalFunction(l: ["", Pointer(), ___className, "TopLevelWidget"]) as! QGraphicsWidget }
    public func Transform() -> QTransform { callLocalFunction(l: ["", Pointer(), ___className, "Transform"]) as! QTransform }
    public func TransformOriginPoint() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "TransformOriginPoint"]) as! QPointF }
    public func Transformations() -> [QGraphicsTransform] { callLocalFunction(l: ["", Pointer(), ___className, "Transformations"]) as! [QGraphicsTransform] }
    public func ConnectType(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectType", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectType() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectType"]) }
    public func Type() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Type"]) as! Float) }
    public func TypeDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TypeDefault"]) as! Float) }
    public func UngrabKeyboard() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UngrabKeyboard"]) }
    public func UngrabMouse() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UngrabMouse"]) }
    public func UnsetCursor() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UnsetCursor"]) }
    public func Update(rect: QRectF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Update", rect as Any]) }
    public func Update2(x: Float, y: Float, width: Float, height: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Update2", x as Any, y as Any, width as Any, height as Any]) }
    public func ConnectWheelEvent(f: @escaping (_ event: QGraphicsSceneWheelEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectWheelEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QGraphicsSceneWheelEvent) } as Any) }
    public func DisconnectWheelEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectWheelEvent"]) }
    public func WheelEvent(event: QGraphicsSceneWheelEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "WheelEvent", event as Any]) }
    public func WheelEventDefault(event: QGraphicsSceneWheelEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "WheelEventDefault", event as Any]) }
    public func Window() -> QGraphicsWidget { callLocalFunction(l: ["", Pointer(), ___className, "Window"]) as! QGraphicsWidget }
    public func X() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "X"]) as! Float }
    public func Y() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "Y"]) as! Float }
    public func ZValue() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "ZValue"]) as! Float }
    public func ConnectDestroyQGraphicsItem(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsItem", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsItem() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsItem"]) }
    public func DestroyQGraphicsItem() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsItem"]) }
    public func DestroyQGraphicsItemDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsItemDefault"]) }
}

public func NewQGraphicsItemFromPointer(ptr: String) -> QGraphicsItem { let r = QGraphicsItem(); r.initFrom(p: ptr, n: "widgets.QGraphicsItem"); return r }
public func NewQGraphicsItem(parent: QGraphicsItem_ITF? = nil) -> QGraphicsItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsItem", "", parent as Any]) as! QGraphicsItem }
public protocol QGraphicsItemAnimation_ITF: QObject_ITF {
    func QGraphicsItemAnimation_PTR() -> QGraphicsItemAnimation
}

public class QGraphicsItemAnimation: QObject, QGraphicsItemAnimation_ITF {
    public func QGraphicsItemAnimation_PTR() -> QGraphicsItemAnimation { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsItemAnimation_PTR"]) as! QGraphicsItemAnimation }
    public func ConnectAfterAnimationStep(f: @escaping (_ step: Float) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectAfterAnimationStep", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Float) } as Any) }
    public func DisconnectAfterAnimationStep() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectAfterAnimationStep"]) }
    public func AfterAnimationStep(step: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AfterAnimationStep", step as Any]) }
    public func AfterAnimationStepDefault(step: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AfterAnimationStepDefault", step as Any]) }
    public func ConnectBeforeAnimationStep(f: @escaping (_ step: Float) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectBeforeAnimationStep", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Float) } as Any) }
    public func DisconnectBeforeAnimationStep() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectBeforeAnimationStep"]) }
    public func BeforeAnimationStep(step: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "BeforeAnimationStep", step as Any]) }
    public func BeforeAnimationStepDefault(step: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "BeforeAnimationStepDefault", step as Any]) }
    public func Clear() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Clear"]) }
    public func HorizontalScaleAt(step: Float) -> Float { callLocalFunction(l: ["", Pointer(), ___className, "HorizontalScaleAt", step as Any]) as! Float }
    public func HorizontalShearAt(step: Float) -> Float { callLocalFunction(l: ["", Pointer(), ___className, "HorizontalShearAt", step as Any]) as! Float }
    public func Item() -> QGraphicsItem { callLocalFunction(l: ["", Pointer(), ___className, "Item"]) as! QGraphicsItem }
    public func MatrixAt(step: Float) -> QMatrix { callLocalFunction(l: ["", Pointer(), ___className, "MatrixAt", step as Any]) as! QMatrix }
    public func PosAt(step: Float) -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "PosAt", step as Any]) as! QPointF }
    public func RotationAt(step: Float) -> Float { callLocalFunction(l: ["", Pointer(), ___className, "RotationAt", step as Any]) as! Float }
    public func SetItem(item: QGraphicsItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetItem", item as Any]) }
    public func SetPosAt(step: Float, point: QPointF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPosAt", step as Any, point as Any]) }
    public func SetRotationAt(step: Float, angle: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRotationAt", step as Any, angle as Any]) }
    public func SetScaleAt(step: Float, sx: Float, sy: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetScaleAt", step as Any, sx as Any, sy as Any]) }
    public func SetShearAt(step: Float, sh: Float, sv: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetShearAt", step as Any, sh as Any, sv as Any]) }
    public func ConnectSetStep(f: @escaping (_ step: Float) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetStep", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Float) } as Any) }
    public func DisconnectSetStep() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetStep"]) }
    public func SetStep(step: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStep", step as Any]) }
    public func SetStepDefault(step: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStepDefault", step as Any]) }
    public func SetTimeLine(timeLine: QTimeLine_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTimeLine", timeLine as Any]) }
    public func SetTranslationAt(step: Float, dx: Float, dy: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTranslationAt", step as Any, dx as Any, dy as Any]) }
    public func TimeLine() -> QTimeLine { callLocalFunction(l: ["", Pointer(), ___className, "TimeLine"]) as! QTimeLine }
    public func VerticalScaleAt(step: Float) -> Float { callLocalFunction(l: ["", Pointer(), ___className, "VerticalScaleAt", step as Any]) as! Float }
    public func VerticalShearAt(step: Float) -> Float { callLocalFunction(l: ["", Pointer(), ___className, "VerticalShearAt", step as Any]) as! Float }
    public func XTranslationAt(step: Float) -> Float { callLocalFunction(l: ["", Pointer(), ___className, "XTranslationAt", step as Any]) as! Float }
    public func YTranslationAt(step: Float) -> Float { callLocalFunction(l: ["", Pointer(), ___className, "YTranslationAt", step as Any]) as! Float }
    public func ConnectDestroyQGraphicsItemAnimation(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsItemAnimation", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsItemAnimation() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsItemAnimation"]) }
    public func DestroyQGraphicsItemAnimation() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsItemAnimation"]) }
    public func DestroyQGraphicsItemAnimationDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsItemAnimationDefault"]) }
    override public func ChildEventDefault(event: QChildEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ChildEventDefault", event as Any]) }
    override public func ConnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ConnectNotifyDefault", sign as Any]) }
    override public func CustomEventDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CustomEventDefault", event as Any]) }
    override public func DeleteLaterDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DeleteLaterDefault"]) }
    override public func DisconnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DisconnectNotifyDefault", sign as Any]) }
    override public func EventDefault(e: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventDefault", e as Any]) as! Bool }
    override public func EventFilterDefault(watched: QObject_ITF? = nil, event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventFilterDefault", watched as Any, event as Any]) as! Bool }
    override public func MetaObjectDefault() -> QMetaObject { callLocalFunction(l: ["", Pointer(), ___className, "MetaObjectDefault"]) as! QMetaObject }
    override public func TimerEventDefault(event: QTimerEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TimerEventDefault", event as Any]) }
}

public func NewQGraphicsItemAnimationFromPointer(ptr: String) -> QGraphicsItemAnimation { let r = QGraphicsItemAnimation(); r.initFrom(p: ptr, n: "widgets.QGraphicsItemAnimation"); return r }
public func NewQGraphicsItemAnimation(parent: QObject_ITF? = nil) -> QGraphicsItemAnimation { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsItemAnimation", "", parent as Any]) as! QGraphicsItemAnimation }
public protocol QGraphicsItemGroup_ITF: QGraphicsItem_ITF {
    func QGraphicsItemGroup_PTR() -> QGraphicsItemGroup
}

public class QGraphicsItemGroup: QGraphicsItem, QGraphicsItemGroup_ITF {
    public func QGraphicsItemGroup_PTR() -> QGraphicsItemGroup { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsItemGroup_PTR"]) as! QGraphicsItemGroup }
    public func AddToGroup(item: QGraphicsItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddToGroup", item as Any]) }
    override public func ConnectBoundingRect(f: @escaping () -> QRectF) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectBoundingRect", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectBoundingRect() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectBoundingRect"]) }
    override public func BoundingRect() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "BoundingRect"]) as! QRectF }
    public func BoundingRectDefault() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "BoundingRectDefault"]) as! QRectF }
    override public func ConnectPaint(f: @escaping (_ painter: QPainter, _ option: QStyleOptionGraphicsItem, _ widget: QWidget) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPaint", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainter, inp[1] as! QStyleOptionGraphicsItem, inp[2] as! QWidget) } as Any) }
    override public func DisconnectPaint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPaint"]) }
    override public func Paint(painter: QPainter_ITF? = nil, option: QStyleOptionGraphicsItem_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Paint", painter as Any, option as Any, widget as Any]) }
    public func PaintDefault(painter: QPainter_ITF? = nil, option: QStyleOptionGraphicsItem_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "PaintDefault", painter as Any, option as Any, widget as Any]) }
    public func RemoveFromGroup(item: QGraphicsItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveFromGroup", item as Any]) }
    public func ConnectDestroyQGraphicsItemGroup(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsItemGroup", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsItemGroup() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsItemGroup"]) }
    public func DestroyQGraphicsItemGroup() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsItemGroup"]) }
    public func DestroyQGraphicsItemGroupDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsItemGroupDefault"]) }
}

public func NewQGraphicsItemGroupFromPointer(ptr: String) -> QGraphicsItemGroup { let r = QGraphicsItemGroup(); r.initFrom(p: ptr, n: "widgets.QGraphicsItemGroup"); return r }
public func NewQGraphicsItemGroup(parent: QGraphicsItem_ITF? = nil) -> QGraphicsItemGroup { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsItemGroup", "", parent as Any]) as! QGraphicsItemGroup }
public protocol QGraphicsLayout_ITF: QGraphicsLayoutItem_ITF {
    func QGraphicsLayout_PTR() -> QGraphicsLayout
}

public class QGraphicsLayout: QGraphicsLayoutItem, QGraphicsLayout_ITF {
    public func QGraphicsLayout_PTR() -> QGraphicsLayout { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsLayout_PTR"]) as! QGraphicsLayout }
    public func Activate() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Activate"]) }
    public func AddChildLayoutItem(layoutItem: QGraphicsLayoutItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddChildLayoutItem", layoutItem as Any]) }
    public func ConnectCount(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCount", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectCount() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCount"]) }
    public func Count() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Count"]) as! Float) }
    public func ConnectInvalidate(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectInvalidate", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectInvalidate() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectInvalidate"]) }
    public func Invalidate() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Invalidate"]) }
    public func InvalidateDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "InvalidateDefault"]) }
    public func IsActivated() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsActivated"]) as! Bool }
    public func ConnectItemAt(f: @escaping (_ i: Int) -> QGraphicsLayoutItem) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectItemAt", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectItemAt() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectItemAt"]) }
    public func ItemAt(i: Int) -> QGraphicsLayoutItem { callLocalFunction(l: ["", Pointer(), ___className, "ItemAt", i as Any]) as! QGraphicsLayoutItem }
    public func ConnectRemoveAt(f: @escaping (_ index: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRemoveAt", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectRemoveAt() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRemoveAt"]) }
    public func RemoveAt(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveAt", index as Any]) }
    public func SetContentsMargins(left: Float, top: Float, right: Float, bottom: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetContentsMargins", left as Any, top as Any, right as Any, bottom as Any]) }
    public func ConnectWidgetEvent(f: @escaping (_ e: QEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectWidgetEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QEvent) } as Any) }
    public func DisconnectWidgetEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectWidgetEvent"]) }
    public func WidgetEvent(e: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "WidgetEvent", e as Any]) }
    public func WidgetEventDefault(e: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "WidgetEventDefault", e as Any]) }
    public func ConnectDestroyQGraphicsLayout(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsLayout", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsLayout() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsLayout"]) }
    public func DestroyQGraphicsLayout() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsLayout"]) }
    public func DestroyQGraphicsLayoutDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsLayoutDefault"]) }
    override public func SizeHint(which: Int, constraint: QSizeF_ITF? = nil) -> QSizeF { callLocalFunction(l: ["", Pointer(), ___className, "SizeHint", which as Any, constraint as Any]) as! QSizeF }
    public func SizeHintDefault(which: Int, constraint: QSizeF_ITF? = nil) -> QSizeF { callLocalFunction(l: ["", Pointer(), ___className, "SizeHintDefault", which as Any, constraint as Any]) as! QSizeF }
}

public func NewQGraphicsLayoutFromPointer(ptr: String) -> QGraphicsLayout { let r = QGraphicsLayout(); r.initFrom(p: ptr, n: "widgets.QGraphicsLayout"); return r }
public func NewQGraphicsLayout(parent: QGraphicsLayoutItem_ITF? = nil) -> QGraphicsLayout { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsLayout", "", parent as Any]) as! QGraphicsLayout }
public protocol QGraphicsLayoutItem_ITF {
    func QGraphicsLayoutItem_PTR() -> QGraphicsLayoutItem
}

public class QGraphicsLayoutItem: Internal, QGraphicsLayoutItem_ITF {
    public func QGraphicsLayoutItem_PTR() -> QGraphicsLayoutItem { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsLayoutItem_PTR"]) as! QGraphicsLayoutItem }
    public func ContentsRect() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "ContentsRect"]) as! QRectF }
    public func EffectiveSizeHint(which: Int, constraint: QSizeF_ITF? = nil) -> QSizeF { callLocalFunction(l: ["", Pointer(), ___className, "EffectiveSizeHint", which as Any, constraint as Any]) as! QSizeF }
    public func Geometry() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "Geometry"]) as! QRectF }
    public func ConnectGetContentsMargins(f: @escaping (_ left: Float, _ top: Float, _ right: Float, _ bottom: Float) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectGetContentsMargins", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Float, inp[1] as! Float, inp[2] as! Float, inp[3] as! Float) } as Any) }
    public func DisconnectGetContentsMargins() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectGetContentsMargins"]) }
    public func GetContentsMargins(left: Float, top: Float, right: Float, bottom: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "GetContentsMargins", left as Any, top as Any, right as Any, bottom as Any]) }
    public func GetContentsMarginsDefault(left: Float, top: Float, right: Float, bottom: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "GetContentsMarginsDefault", left as Any, top as Any, right as Any, bottom as Any]) }
    public func GraphicsItem() -> QGraphicsItem { callLocalFunction(l: ["", Pointer(), ___className, "GraphicsItem"]) as! QGraphicsItem }
    public func IsLayout() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsLayout"]) as! Bool }
    public func MaximumHeight() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "MaximumHeight"]) as! Float }
    public func MaximumSize() -> QSizeF { callLocalFunction(l: ["", Pointer(), ___className, "MaximumSize"]) as! QSizeF }
    public func MaximumWidth() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "MaximumWidth"]) as! Float }
    public func MinimumHeight() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "MinimumHeight"]) as! Float }
    public func MinimumSize() -> QSizeF { callLocalFunction(l: ["", Pointer(), ___className, "MinimumSize"]) as! QSizeF }
    public func MinimumWidth() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "MinimumWidth"]) as! Float }
    public func OwnedByLayout() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "OwnedByLayout"]) as! Bool }
    public func ParentLayoutItem() -> QGraphicsLayoutItem { callLocalFunction(l: ["", Pointer(), ___className, "ParentLayoutItem"]) as! QGraphicsLayoutItem }
    public func PreferredHeight() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "PreferredHeight"]) as! Float }
    public func PreferredSize() -> QSizeF { callLocalFunction(l: ["", Pointer(), ___className, "PreferredSize"]) as! QSizeF }
    public func PreferredWidth() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "PreferredWidth"]) as! Float }
    public func ConnectSetGeometry(f: @escaping (_ rect: QRectF) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetGeometry", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QRectF) } as Any) }
    public func DisconnectSetGeometry() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetGeometry"]) }
    public func SetGeometry(rect: QRectF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetGeometry", rect as Any]) }
    public func SetGeometryDefault(rect: QRectF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetGeometryDefault", rect as Any]) }
    public func SetGraphicsItem(item: QGraphicsItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetGraphicsItem", item as Any]) }
    public func SetMaximumHeight(height: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMaximumHeight", height as Any]) }
    public func SetMaximumSize(size: QSizeF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMaximumSize", size as Any]) }
    public func SetMaximumSize2(w: Float, h: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMaximumSize2", w as Any, h as Any]) }
    public func SetMaximumWidth(width: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMaximumWidth", width as Any]) }
    public func SetMinimumHeight(height: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMinimumHeight", height as Any]) }
    public func SetMinimumSize(size: QSizeF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMinimumSize", size as Any]) }
    public func SetMinimumSize2(w: Float, h: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMinimumSize2", w as Any, h as Any]) }
    public func SetMinimumWidth(width: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMinimumWidth", width as Any]) }
    public func SetOwnedByLayout(ownership: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOwnedByLayout", ownership as Any]) }
    public func SetParentLayoutItem(parent: QGraphicsLayoutItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetParentLayoutItem", parent as Any]) }
    public func SetPreferredHeight(height: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPreferredHeight", height as Any]) }
    public func SetPreferredSize(size: QSizeF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPreferredSize", size as Any]) }
    public func SetPreferredSize2(w: Float, h: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPreferredSize2", w as Any, h as Any]) }
    public func SetPreferredWidth(width: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPreferredWidth", width as Any]) }
    public func SetSizePolicy(policy: QSizePolicy_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSizePolicy", policy as Any]) }
    public func SetSizePolicy2(hPolicy: Int, vPolicy: Int, controlType: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSizePolicy2", hPolicy as Any, vPolicy as Any, controlType as Any]) }
    public func ConnectSizeHint(f: @escaping (_ which: Int, _ constraint: QSizeF) -> QSizeF) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSizeHint", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! QSizeF) } as Any) }
    public func DisconnectSizeHint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSizeHint"]) }
    public func SizeHint(which: Int, constraint: QSizeF_ITF? = nil) -> QSizeF { callLocalFunction(l: ["", Pointer(), ___className, "SizeHint", which as Any, constraint as Any]) as! QSizeF }
    public func SizePolicy() -> QSizePolicy { callLocalFunction(l: ["", Pointer(), ___className, "SizePolicy"]) as! QSizePolicy }
    public func ConnectUpdateGeometry(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectUpdateGeometry", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectUpdateGeometry() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectUpdateGeometry"]) }
    public func UpdateGeometry() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UpdateGeometry"]) }
    public func UpdateGeometryDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UpdateGeometryDefault"]) }
    public func ConnectDestroyQGraphicsLayoutItem(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsLayoutItem", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsLayoutItem() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsLayoutItem"]) }
    public func DestroyQGraphicsLayoutItem() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsLayoutItem"]) }
    public func DestroyQGraphicsLayoutItemDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsLayoutItemDefault"]) }
}

public func NewQGraphicsLayoutItemFromPointer(ptr: String) -> QGraphicsLayoutItem { let r = QGraphicsLayoutItem(); r.initFrom(p: ptr, n: "widgets.QGraphicsLayoutItem"); return r }
public func NewQGraphicsLayoutItem(parent: QGraphicsLayoutItem_ITF? = nil, isLayout: Bool) -> QGraphicsLayoutItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsLayoutItem", "", parent as Any, isLayout as Any]) as! QGraphicsLayoutItem }
public protocol QGraphicsLineItem_ITF: QGraphicsItem_ITF {
    func QGraphicsLineItem_PTR() -> QGraphicsLineItem
}

public class QGraphicsLineItem: QGraphicsItem, QGraphicsLineItem_ITF {
    public func QGraphicsLineItem_PTR() -> QGraphicsLineItem { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsLineItem_PTR"]) as! QGraphicsLineItem }
    override public func ConnectBoundingRect(f: @escaping () -> QRectF) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectBoundingRect", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectBoundingRect() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectBoundingRect"]) }
    override public func BoundingRect() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "BoundingRect"]) as! QRectF }
    public func BoundingRectDefault() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "BoundingRectDefault"]) as! QRectF }
    public func Line() -> QLineF { callLocalFunction(l: ["", Pointer(), ___className, "Line"]) as! QLineF }
    override public func ConnectPaint(f: @escaping (_ painter: QPainter, _ option: QStyleOptionGraphicsItem, _ widget: QWidget) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPaint", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainter, inp[1] as! QStyleOptionGraphicsItem, inp[2] as! QWidget) } as Any) }
    override public func DisconnectPaint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPaint"]) }
    override public func Paint(painter: QPainter_ITF? = nil, option: QStyleOptionGraphicsItem_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Paint", painter as Any, option as Any, widget as Any]) }
    public func PaintDefault(painter: QPainter_ITF? = nil, option: QStyleOptionGraphicsItem_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "PaintDefault", painter as Any, option as Any, widget as Any]) }
    public func Pen() -> QPen { callLocalFunction(l: ["", Pointer(), ___className, "Pen"]) as! QPen }
    public func SetLine(line: QLineF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetLine", line as Any]) }
    public func SetLine2(x1: Float, y1: Float, x2: Float, y2: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetLine2", x1 as Any, y1 as Any, x2 as Any, y2 as Any]) }
    public func SetPen(pen: QPen_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPen", pen as Any]) }
    public func ConnectDestroyQGraphicsLineItem(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsLineItem", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsLineItem() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsLineItem"]) }
    public func DestroyQGraphicsLineItem() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsLineItem"]) }
    public func DestroyQGraphicsLineItemDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsLineItemDefault"]) }
}

public func NewQGraphicsLineItemFromPointer(ptr: String) -> QGraphicsLineItem { let r = QGraphicsLineItem(); r.initFrom(p: ptr, n: "widgets.QGraphicsLineItem"); return r }
public func NewQGraphicsLineItem(parent: QGraphicsItem_ITF? = nil) -> QGraphicsLineItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsLineItem", "", parent as Any]) as! QGraphicsLineItem }
public func NewQGraphicsLineItem2(line: QLineF_ITF? = nil, parent: QGraphicsItem_ITF? = nil) -> QGraphicsLineItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsLineItem2", "", line as Any, parent as Any]) as! QGraphicsLineItem }
public func NewQGraphicsLineItem3(x1: Float, y1: Float, x2: Float, y2: Float, parent: QGraphicsItem_ITF? = nil) -> QGraphicsLineItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsLineItem3", "", x1 as Any, y1 as Any, x2 as Any, y2 as Any, parent as Any]) as! QGraphicsLineItem }
public protocol QGraphicsLinearLayout_ITF: QGraphicsLayout_ITF {
    func QGraphicsLinearLayout_PTR() -> QGraphicsLinearLayout
}

public class QGraphicsLinearLayout: QGraphicsLayout, QGraphicsLinearLayout_ITF {
    public func QGraphicsLinearLayout_PTR() -> QGraphicsLinearLayout { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsLinearLayout_PTR"]) as! QGraphicsLinearLayout }
    public func AddItem(item: QGraphicsLayoutItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddItem", item as Any]) }
    public func AddStretch(stretch: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddStretch", stretch as Any]) }
    public func Alignment(item: QGraphicsLayoutItem_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Alignment", item as Any]) as! Float) }
    override public func ConnectCount(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCount", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectCount() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCount"]) }
    override public func Count() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Count"]) as! Float) }
    public func CountDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CountDefault"]) as! Float) }
    public func InsertItem(index: Int, item: QGraphicsLayoutItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertItem", index as Any, item as Any]) }
    public func InsertStretch(index: Int, stretch: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertStretch", index as Any, stretch as Any]) }
    override public func ConnectItemAt(f: @escaping (_ index: Int) -> QGraphicsLayoutItem) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectItemAt", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    override public func DisconnectItemAt() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectItemAt"]) }
    override public func ItemAt(i: Int) -> QGraphicsLayoutItem { callLocalFunction(l: ["", Pointer(), ___className, "ItemAt", i as Any]) as! QGraphicsLayoutItem }
    public func ItemAtDefault(index: Int) -> QGraphicsLayoutItem { callLocalFunction(l: ["", Pointer(), ___className, "ItemAtDefault", index as Any]) as! QGraphicsLayoutItem }
    public func ItemSpacing(index: Int) -> Float { callLocalFunction(l: ["", Pointer(), ___className, "ItemSpacing", index as Any]) as! Float }
    public func Orientation() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Orientation"]) as! Float) }
    override public func ConnectRemoveAt(f: @escaping (_ index: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRemoveAt", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    override public func DisconnectRemoveAt() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRemoveAt"]) }
    override public func RemoveAt(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveAt", index as Any]) }
    public func RemoveAtDefault(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveAtDefault", index as Any]) }
    public func RemoveItem(item: QGraphicsLayoutItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveItem", item as Any]) }
    public func SetAlignment(item: QGraphicsLayoutItem_ITF? = nil, alignment: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAlignment", item as Any, alignment as Any]) }
    public func SetItemSpacing(index: Int, spacing: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetItemSpacing", index as Any, spacing as Any]) }
    public func SetOrientation(orientation: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOrientation", orientation as Any]) }
    public func SetSpacing(spacing: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSpacing", spacing as Any]) }
    public func SetStretchFactor(item: QGraphicsLayoutItem_ITF? = nil, stretch: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStretchFactor", item as Any, stretch as Any]) }
    override public func ConnectSizeHint(f: @escaping (_ which: Int, _ constraint: QSizeF) -> QSizeF) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSizeHint", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! QSizeF) } as Any) }
    override public func DisconnectSizeHint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSizeHint"]) }
    override public func SizeHint(which: Int, constraint: QSizeF_ITF? = nil) -> QSizeF { callLocalFunction(l: ["", Pointer(), ___className, "SizeHint", which as Any, constraint as Any]) as! QSizeF }
    override public func SizeHintDefault(which: Int, constraint: QSizeF_ITF? = nil) -> QSizeF { callLocalFunction(l: ["", Pointer(), ___className, "SizeHintDefault", which as Any, constraint as Any]) as! QSizeF }
    public func Spacing() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "Spacing"]) as! Float }
    public func StretchFactor(item: QGraphicsLayoutItem_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "StretchFactor", item as Any]) as! Float) }
    public func ConnectDestroyQGraphicsLinearLayout(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsLinearLayout", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsLinearLayout() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsLinearLayout"]) }
    public func DestroyQGraphicsLinearLayout() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsLinearLayout"]) }
    public func DestroyQGraphicsLinearLayoutDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsLinearLayoutDefault"]) }
}

public func NewQGraphicsLinearLayoutFromPointer(ptr: String) -> QGraphicsLinearLayout { let r = QGraphicsLinearLayout(); r.initFrom(p: ptr, n: "widgets.QGraphicsLinearLayout"); return r }
public func NewQGraphicsLinearLayout(parent: QGraphicsLayoutItem_ITF? = nil) -> QGraphicsLinearLayout { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsLinearLayout", "", parent as Any]) as! QGraphicsLinearLayout }
public func NewQGraphicsLinearLayout2(orientation: Int, parent: QGraphicsLayoutItem_ITF? = nil) -> QGraphicsLinearLayout { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsLinearLayout2", "", orientation as Any, parent as Any]) as! QGraphicsLinearLayout }
public protocol QGraphicsObject_ITF: QGraphicsItem_ITF {
    func QGraphicsObject_PTR() -> QGraphicsObject
    func QObject_PTR() -> QObject
}

public class QGraphicsObject: QGraphicsItem, QGraphicsObject_ITF {
    public func QObject_PTR() -> QObject { callLocalFunction(l: ["", Pointer(), ___className, "QObject_PTR"]) as! QObject }
    public func QGraphicsObject_PTR() -> QGraphicsObject { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsObject_PTR"]) as! QGraphicsObject }
    public func ConnectEnabledChanged(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectEnabledChanged", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectEnabledChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectEnabledChanged"]) }
    public func EnabledChanged() { _ = callLocalFunction(l: ["", Pointer(), ___className, "EnabledChanged"]) }
    public func ConnectEvent(f: @escaping (_ ev: QEvent) -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QEvent) } as Any) }
    public func DisconnectEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectEvent"]) }
    public func Event(ev: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "Event", ev as Any]) as! Bool }
    public func EventDefault(ev: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventDefault", ev as Any]) as! Bool }
    public func GrabGesture(gesture: Int, flags: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "GrabGesture", gesture as Any, flags as Any]) }
    public func ConnectOpacityChanged(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectOpacityChanged", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectOpacityChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectOpacityChanged"]) }
    public func OpacityChanged() { _ = callLocalFunction(l: ["", Pointer(), ___className, "OpacityChanged"]) }
    public func ConnectParentChanged(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectParentChanged", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectParentChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectParentChanged"]) }
    public func ParentChanged() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ParentChanged"]) }
    public func ConnectRotationChanged(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRotationChanged", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectRotationChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRotationChanged"]) }
    public func RotationChanged() { _ = callLocalFunction(l: ["", Pointer(), ___className, "RotationChanged"]) }
    public func ConnectScaleChanged(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectScaleChanged", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectScaleChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectScaleChanged"]) }
    public func ScaleChanged() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ScaleChanged"]) }
    public func UngrabGesture(gesture: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "UngrabGesture", gesture as Any]) }
    public func ConnectUpdateMicroFocus(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectUpdateMicroFocus", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectUpdateMicroFocus() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectUpdateMicroFocus"]) }
    public func UpdateMicroFocus() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UpdateMicroFocus"]) }
    public func UpdateMicroFocusDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UpdateMicroFocusDefault"]) }
    public func ConnectVisibleChanged(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectVisibleChanged", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectVisibleChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectVisibleChanged"]) }
    public func VisibleChanged() { _ = callLocalFunction(l: ["", Pointer(), ___className, "VisibleChanged"]) }
    public func ConnectXChanged(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectXChanged", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectXChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectXChanged"]) }
    public func XChanged() { _ = callLocalFunction(l: ["", Pointer(), ___className, "XChanged"]) }
    public func ConnectYChanged(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectYChanged", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectYChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectYChanged"]) }
    public func YChanged() { _ = callLocalFunction(l: ["", Pointer(), ___className, "YChanged"]) }
    public func ConnectZChanged(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectZChanged", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectZChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectZChanged"]) }
    public func ZChanged() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ZChanged"]) }
    public func ConnectDestroyQGraphicsObject(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsObject", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsObject() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsObject"]) }
    public func DestroyQGraphicsObject() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsObject"]) }
    public func DestroyQGraphicsObjectDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsObjectDefault"]) }
    public func Parent_QGraphicsObject() -> QGraphicsObject { callLocalFunction(l: ["", Pointer(), ___className, "Parent"]) as! QGraphicsObject }
    public func SetParent_QGraphicsObject(parent: QGraphicsObject_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetParent", parent as Any]) }
    override public func Opacity() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "Opacity"]) as! Float }
    override public func SetOpacity(opacity: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOpacity", opacity as Any]) }
    override public func IsEnabled() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsEnabled"]) as! Bool }
    override public func SetEnabled(enabled: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetEnabled", enabled as Any]) }
    override public func IsVisible() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsVisible"]) as! Bool }
    override public func SetVisible(visible: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetVisible", visible as Any]) }
    override public func Pos() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "Pos"]) as! QPointF }
    public func SetPos_QObject(pos: QPointF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPos", pos as Any]) }
    override public func X() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "X"]) as! Float }
    override public func SetX(x: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetX", x as Any]) }
    override public func Y() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "Y"]) as! Float }
    override public func SetY(y: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetY", y as Any]) }
    override public func ZValue() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "ZValue"]) as! Float }
    override public func SetZValue(z: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetZValue", z as Any]) }
    override public func Rotation() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "Rotation"]) as! Float }
    override public func SetRotation(angle: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRotation", angle as Any]) }
    public func Scale() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "Scale"]) as! Float }
    override public func SetScale(factor: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetScale", factor as Any]) }
    override public func TransformOriginPoint() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "TransformOriginPoint"]) as! QPointF }
    public func SetTransformOriginPoint_QObject(transformOriginPoint: QPointF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTransformOriginPoint", transformOriginPoint as Any]) }
    public func GraphicsEffect_QObject() -> QGraphicsEffect { callLocalFunction(l: ["", Pointer(), ___className, "GraphicsEffect"]) as! QGraphicsEffect }
    public func SetGraphicsEffect_QObject(effect: QGraphicsEffect_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetGraphicsEffect", effect as Any]) }
    public func ChildEvent(event: QChildEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ChildEvent", event as Any]) }
    public func ChildEventDefault(event: QChildEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ChildEventDefault", event as Any]) }
    public func ConnectNotify(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ConnectNotify", sign as Any]) }
    public func ConnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ConnectNotifyDefault", sign as Any]) }
    public func CustomEvent(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CustomEvent", event as Any]) }
    public func CustomEventDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CustomEventDefault", event as Any]) }
    public func DeleteLater() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DeleteLater"]) }
    public func DeleteLaterDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DeleteLaterDefault"]) }
    public func DisconnectNotify(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DisconnectNotify", sign as Any]) }
    public func DisconnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DisconnectNotifyDefault", sign as Any]) }
    public func EventFilter(watched: QObject_ITF? = nil, event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventFilter", watched as Any, event as Any]) as! Bool }
    public func EventFilterDefault(watched: QObject_ITF? = nil, event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventFilterDefault", watched as Any, event as Any]) as! Bool }
    public func MetaObject() -> QMetaObject { callLocalFunction(l: ["", Pointer(), ___className, "MetaObject"]) as! QMetaObject }
    public func MetaObjectDefault() -> QMetaObject { callLocalFunction(l: ["", Pointer(), ___className, "MetaObjectDefault"]) as! QMetaObject }
    public func TimerEvent(event: QTimerEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TimerEvent", event as Any]) }
    public func TimerEventDefault(event: QTimerEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TimerEventDefault", event as Any]) }
    override public func BoundingRect() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "BoundingRect"]) as! QRectF }
    public func BoundingRectDefault() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "BoundingRectDefault"]) as! QRectF }
    override public func Paint(painter: QPainter_ITF? = nil, option: QStyleOptionGraphicsItem_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Paint", painter as Any, option as Any, widget as Any]) }
    public func PaintDefault(painter: QPainter_ITF? = nil, option: QStyleOptionGraphicsItem_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "PaintDefault", painter as Any, option as Any, widget as Any]) }
}

public func NewQGraphicsObjectFromPointer(ptr: String) -> QGraphicsObject { let r = QGraphicsObject(); r.initFrom(p: ptr, n: "widgets.QGraphicsObject"); return r }
public func NewQGraphicsObject(parent: QGraphicsItem_ITF? = nil) -> QGraphicsObject { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsObject", "", parent as Any]) as! QGraphicsObject }
public protocol QGraphicsOpacityEffect_ITF: QGraphicsEffect_ITF {
    func QGraphicsOpacityEffect_PTR() -> QGraphicsOpacityEffect
}

public class QGraphicsOpacityEffect: QGraphicsEffect, QGraphicsOpacityEffect_ITF {
    public func QGraphicsOpacityEffect_PTR() -> QGraphicsOpacityEffect { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsOpacityEffect_PTR"]) as! QGraphicsOpacityEffect }
    override public func ConnectDraw(f: @escaping (_ painter: QPainter) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDraw", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainter) } as Any) }
    override public func DisconnectDraw() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDraw"]) }
    override public func Draw(painter: QPainter_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Draw", painter as Any]) }
    public func DrawDefault(painter: QPainter_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawDefault", painter as Any]) }
    public func Opacity() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "Opacity"]) as! Float }
    public func ConnectOpacityChanged(f: @escaping (_ opacity: Float) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectOpacityChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Float) } as Any) }
    public func DisconnectOpacityChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectOpacityChanged"]) }
    public func OpacityChanged(opacity: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "OpacityChanged", opacity as Any]) }
    public func OpacityMask() -> QBrush { callLocalFunction(l: ["", Pointer(), ___className, "OpacityMask"]) as! QBrush }
    public func ConnectOpacityMaskChanged(f: @escaping (_ mask: QBrush) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectOpacityMaskChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QBrush) } as Any) }
    public func DisconnectOpacityMaskChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectOpacityMaskChanged"]) }
    public func OpacityMaskChanged(mask: QBrush_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "OpacityMaskChanged", mask as Any]) }
    public func ConnectSetOpacity(f: @escaping (_ opacity: Float) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetOpacity", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Float) } as Any) }
    public func DisconnectSetOpacity() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetOpacity"]) }
    public func SetOpacity(opacity: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOpacity", opacity as Any]) }
    public func SetOpacityDefault(opacity: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOpacityDefault", opacity as Any]) }
    public func ConnectSetOpacityMask(f: @escaping (_ mask: QBrush) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetOpacityMask", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QBrush) } as Any) }
    public func DisconnectSetOpacityMask() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetOpacityMask"]) }
    public func SetOpacityMask(mask: QBrush_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOpacityMask", mask as Any]) }
    public func SetOpacityMaskDefault(mask: QBrush_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOpacityMaskDefault", mask as Any]) }
    public func ConnectDestroyQGraphicsOpacityEffect(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsOpacityEffect", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsOpacityEffect() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsOpacityEffect"]) }
    public func DestroyQGraphicsOpacityEffect() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsOpacityEffect"]) }
    public func DestroyQGraphicsOpacityEffectDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsOpacityEffectDefault"]) }
}

public func NewQGraphicsOpacityEffectFromPointer(ptr: String) -> QGraphicsOpacityEffect { let r = QGraphicsOpacityEffect(); r.initFrom(p: ptr, n: "widgets.QGraphicsOpacityEffect"); return r }
public func NewQGraphicsOpacityEffect(parent: QObject_ITF? = nil) -> QGraphicsOpacityEffect { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsOpacityEffect", "", parent as Any]) as! QGraphicsOpacityEffect }
public protocol QGraphicsPathItem_ITF: QAbstractGraphicsShapeItem_ITF {
    func QGraphicsPathItem_PTR() -> QGraphicsPathItem
}

public class QGraphicsPathItem: QAbstractGraphicsShapeItem, QGraphicsPathItem_ITF {
    public func QGraphicsPathItem_PTR() -> QGraphicsPathItem { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsPathItem_PTR"]) as! QGraphicsPathItem }
    override public func ConnectBoundingRect(f: @escaping () -> QRectF) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectBoundingRect", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectBoundingRect() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectBoundingRect"]) }
    override public func BoundingRect() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "BoundingRect"]) as! QRectF }
    override public func BoundingRectDefault() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "BoundingRectDefault"]) as! QRectF }
    override public func ConnectPaint(f: @escaping (_ painter: QPainter, _ option: QStyleOptionGraphicsItem, _ widget: QWidget) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPaint", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainter, inp[1] as! QStyleOptionGraphicsItem, inp[2] as! QWidget) } as Any) }
    override public func DisconnectPaint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPaint"]) }
    override public func Paint(painter: QPainter_ITF? = nil, option: QStyleOptionGraphicsItem_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Paint", painter as Any, option as Any, widget as Any]) }
    override public func PaintDefault(painter: QPainter_ITF? = nil, option: QStyleOptionGraphicsItem_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "PaintDefault", painter as Any, option as Any, widget as Any]) }
    public func Path() -> QPainterPath { callLocalFunction(l: ["", Pointer(), ___className, "Path"]) as! QPainterPath }
    public func SetPath(path: QPainterPath_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPath", path as Any]) }
    public func ConnectDestroyQGraphicsPathItem(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsPathItem", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsPathItem() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsPathItem"]) }
    public func DestroyQGraphicsPathItem() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsPathItem"]) }
    public func DestroyQGraphicsPathItemDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsPathItemDefault"]) }
}

public func NewQGraphicsPathItemFromPointer(ptr: String) -> QGraphicsPathItem { let r = QGraphicsPathItem(); r.initFrom(p: ptr, n: "widgets.QGraphicsPathItem"); return r }
public func NewQGraphicsPathItem(parent: QGraphicsItem_ITF? = nil) -> QGraphicsPathItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsPathItem", "", parent as Any]) as! QGraphicsPathItem }
public func NewQGraphicsPathItem2(path: QPainterPath_ITF? = nil, parent: QGraphicsItem_ITF? = nil) -> QGraphicsPathItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsPathItem2", "", path as Any, parent as Any]) as! QGraphicsPathItem }
public protocol QGraphicsPixmapItem_ITF: QGraphicsItem_ITF {
    func QGraphicsPixmapItem_PTR() -> QGraphicsPixmapItem
}

public class QGraphicsPixmapItem: QGraphicsItem, QGraphicsPixmapItem_ITF {
    public func QGraphicsPixmapItem_PTR() -> QGraphicsPixmapItem { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsPixmapItem_PTR"]) as! QGraphicsPixmapItem }
    override public func ConnectBoundingRect(f: @escaping () -> QRectF) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectBoundingRect", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectBoundingRect() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectBoundingRect"]) }
    override public func BoundingRect() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "BoundingRect"]) as! QRectF }
    public func BoundingRectDefault() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "BoundingRectDefault"]) as! QRectF }
    public func Offset() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "Offset"]) as! QPointF }
    override public func ConnectPaint(f: @escaping (_ painter: QPainter, _ option: QStyleOptionGraphicsItem, _ widget: QWidget) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPaint", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainter, inp[1] as! QStyleOptionGraphicsItem, inp[2] as! QWidget) } as Any) }
    override public func DisconnectPaint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPaint"]) }
    override public func Paint(painter: QPainter_ITF? = nil, option: QStyleOptionGraphicsItem_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Paint", painter as Any, option as Any, widget as Any]) }
    public func PaintDefault(painter: QPainter_ITF? = nil, option: QStyleOptionGraphicsItem_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "PaintDefault", painter as Any, option as Any, widget as Any]) }
    public func Pixmap() -> QPixmap { callLocalFunction(l: ["", Pointer(), ___className, "Pixmap"]) as! QPixmap }
    public func SetOffset(offset: QPointF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOffset", offset as Any]) }
    public func SetOffset2(x: Float, y: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOffset2", x as Any, y as Any]) }
    public func SetPixmap(pixmap: QPixmap_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPixmap", pixmap as Any]) }
    public func SetShapeMode(mode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetShapeMode", mode as Any]) }
    public func SetTransformationMode(mode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTransformationMode", mode as Any]) }
    public func ShapeMode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ShapeMode"]) as! Float) }
    public func TransformationMode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TransformationMode"]) as! Float) }
    public func ConnectDestroyQGraphicsPixmapItem(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsPixmapItem", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsPixmapItem() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsPixmapItem"]) }
    public func DestroyQGraphicsPixmapItem() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsPixmapItem"]) }
    public func DestroyQGraphicsPixmapItemDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsPixmapItemDefault"]) }
}

public func NewQGraphicsPixmapItemFromPointer(ptr: String) -> QGraphicsPixmapItem { let r = QGraphicsPixmapItem(); r.initFrom(p: ptr, n: "widgets.QGraphicsPixmapItem"); return r }
public func NewQGraphicsPixmapItem(parent: QGraphicsItem_ITF? = nil) -> QGraphicsPixmapItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsPixmapItem", "", parent as Any]) as! QGraphicsPixmapItem }
public func NewQGraphicsPixmapItem2(pixmap: QPixmap_ITF? = nil, parent: QGraphicsItem_ITF? = nil) -> QGraphicsPixmapItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsPixmapItem2", "", pixmap as Any, parent as Any]) as! QGraphicsPixmapItem }
public protocol QGraphicsPolygonItem_ITF: QAbstractGraphicsShapeItem_ITF {
    func QGraphicsPolygonItem_PTR() -> QGraphicsPolygonItem
}

public class QGraphicsPolygonItem: QAbstractGraphicsShapeItem, QGraphicsPolygonItem_ITF {
    public func QGraphicsPolygonItem_PTR() -> QGraphicsPolygonItem { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsPolygonItem_PTR"]) as! QGraphicsPolygonItem }
    override public func ConnectBoundingRect(f: @escaping () -> QRectF) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectBoundingRect", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectBoundingRect() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectBoundingRect"]) }
    override public func BoundingRect() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "BoundingRect"]) as! QRectF }
    override public func BoundingRectDefault() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "BoundingRectDefault"]) as! QRectF }
    public func FillRule() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "FillRule"]) as! Float) }
    override public func ConnectPaint(f: @escaping (_ painter: QPainter, _ option: QStyleOptionGraphicsItem, _ widget: QWidget) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPaint", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainter, inp[1] as! QStyleOptionGraphicsItem, inp[2] as! QWidget) } as Any) }
    override public func DisconnectPaint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPaint"]) }
    override public func Paint(painter: QPainter_ITF? = nil, option: QStyleOptionGraphicsItem_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Paint", painter as Any, option as Any, widget as Any]) }
    override public func PaintDefault(painter: QPainter_ITF? = nil, option: QStyleOptionGraphicsItem_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "PaintDefault", painter as Any, option as Any, widget as Any]) }
    public func Polygon() -> QPolygonF { callLocalFunction(l: ["", Pointer(), ___className, "Polygon"]) as! QPolygonF }
    public func SetFillRule(rule: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFillRule", rule as Any]) }
    public func SetPolygon(polygon: QPolygonF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPolygon", polygon as Any]) }
    public func ConnectDestroyQGraphicsPolygonItem(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsPolygonItem", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsPolygonItem() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsPolygonItem"]) }
    public func DestroyQGraphicsPolygonItem() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsPolygonItem"]) }
    public func DestroyQGraphicsPolygonItemDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsPolygonItemDefault"]) }
}

public func NewQGraphicsPolygonItemFromPointer(ptr: String) -> QGraphicsPolygonItem { let r = QGraphicsPolygonItem(); r.initFrom(p: ptr, n: "widgets.QGraphicsPolygonItem"); return r }
public func NewQGraphicsPolygonItem(parent: QGraphicsItem_ITF? = nil) -> QGraphicsPolygonItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsPolygonItem", "", parent as Any]) as! QGraphicsPolygonItem }
public func NewQGraphicsPolygonItem2(polygon: QPolygonF_ITF? = nil, parent: QGraphicsItem_ITF? = nil) -> QGraphicsPolygonItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsPolygonItem2", "", polygon as Any, parent as Any]) as! QGraphicsPolygonItem }
public protocol QGraphicsProxyWidget_ITF: QGraphicsWidget_ITF {
    func QGraphicsProxyWidget_PTR() -> QGraphicsProxyWidget
}

public class QGraphicsProxyWidget: QGraphicsWidget, QGraphicsProxyWidget_ITF {
    public func QGraphicsProxyWidget_PTR() -> QGraphicsProxyWidget { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsProxyWidget_PTR"]) as! QGraphicsProxyWidget }
    public func CreateProxyForChildWidget(child: QWidget_ITF? = nil) -> QGraphicsProxyWidget { callLocalFunction(l: ["", Pointer(), ___className, "CreateProxyForChildWidget", child as Any]) as! QGraphicsProxyWidget }
    public func ConnectNewProxyWidget(f: @escaping (_ child: QWidget) -> QGraphicsProxyWidget) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectNewProxyWidget", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QWidget) } as Any) }
    public func DisconnectNewProxyWidget() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectNewProxyWidget"]) }
    public func NewProxyWidget(child: QWidget_ITF? = nil) -> QGraphicsProxyWidget { callLocalFunction(l: ["", Pointer(), ___className, "NewProxyWidget", child as Any]) as! QGraphicsProxyWidget }
    public func NewProxyWidgetDefault(child: QWidget_ITF? = nil) -> QGraphicsProxyWidget { callLocalFunction(l: ["", Pointer(), ___className, "NewProxyWidgetDefault", child as Any]) as! QGraphicsProxyWidget }
    public func SetWidget(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWidget", widget as Any]) }
    public func SubWidgetRect(widget: QWidget_ITF? = nil) -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "SubWidgetRect", widget as Any]) as! QRectF }
    public func Widget() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "Widget"]) as! QWidget }
    public func ConnectDestroyQGraphicsProxyWidget(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsProxyWidget", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsProxyWidget() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsProxyWidget"]) }
    public func DestroyQGraphicsProxyWidget() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsProxyWidget"]) }
    public func DestroyQGraphicsProxyWidgetDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsProxyWidgetDefault"]) }
}

public func NewQGraphicsProxyWidgetFromPointer(ptr: String) -> QGraphicsProxyWidget { let r = QGraphicsProxyWidget(); r.initFrom(p: ptr, n: "widgets.QGraphicsProxyWidget"); return r }
public func NewQGraphicsProxyWidget(parent: QGraphicsItem_ITF? = nil, wFlags: Int) -> QGraphicsProxyWidget { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsProxyWidget", "", parent as Any, wFlags as Any]) as! QGraphicsProxyWidget }
public protocol QGraphicsRectItem_ITF: QAbstractGraphicsShapeItem_ITF {
    func QGraphicsRectItem_PTR() -> QGraphicsRectItem
}

public class QGraphicsRectItem: QAbstractGraphicsShapeItem, QGraphicsRectItem_ITF {
    public func QGraphicsRectItem_PTR() -> QGraphicsRectItem { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsRectItem_PTR"]) as! QGraphicsRectItem }
    override public func ConnectBoundingRect(f: @escaping () -> QRectF) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectBoundingRect", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectBoundingRect() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectBoundingRect"]) }
    override public func BoundingRect() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "BoundingRect"]) as! QRectF }
    override public func BoundingRectDefault() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "BoundingRectDefault"]) as! QRectF }
    override public func ConnectPaint(f: @escaping (_ painter: QPainter, _ option: QStyleOptionGraphicsItem, _ widget: QWidget) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPaint", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainter, inp[1] as! QStyleOptionGraphicsItem, inp[2] as! QWidget) } as Any) }
    override public func DisconnectPaint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPaint"]) }
    override public func Paint(painter: QPainter_ITF? = nil, option: QStyleOptionGraphicsItem_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Paint", painter as Any, option as Any, widget as Any]) }
    override public func PaintDefault(painter: QPainter_ITF? = nil, option: QStyleOptionGraphicsItem_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "PaintDefault", painter as Any, option as Any, widget as Any]) }
    public func Rect() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "Rect"]) as! QRectF }
    public func SetRect(rectangle: QRectF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRect", rectangle as Any]) }
    public func SetRect2(x: Float, y: Float, width: Float, height: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRect2", x as Any, y as Any, width as Any, height as Any]) }
    public func ConnectDestroyQGraphicsRectItem(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsRectItem", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsRectItem() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsRectItem"]) }
    public func DestroyQGraphicsRectItem() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsRectItem"]) }
    public func DestroyQGraphicsRectItemDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsRectItemDefault"]) }
}

public func NewQGraphicsRectItemFromPointer(ptr: String) -> QGraphicsRectItem { let r = QGraphicsRectItem(); r.initFrom(p: ptr, n: "widgets.QGraphicsRectItem"); return r }
public func NewQGraphicsRectItem(parent: QGraphicsItem_ITF? = nil) -> QGraphicsRectItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsRectItem", "", parent as Any]) as! QGraphicsRectItem }
public func NewQGraphicsRectItem2(rect: QRectF_ITF? = nil, parent: QGraphicsItem_ITF? = nil) -> QGraphicsRectItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsRectItem2", "", rect as Any, parent as Any]) as! QGraphicsRectItem }
public func NewQGraphicsRectItem3(x: Float, y: Float, width: Float, height: Float, parent: QGraphicsItem_ITF? = nil) -> QGraphicsRectItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsRectItem3", "", x as Any, y as Any, width as Any, height as Any, parent as Any]) as! QGraphicsRectItem }
public protocol QGraphicsRotation_ITF: QGraphicsTransform_ITF {
    func QGraphicsRotation_PTR() -> QGraphicsRotation
}

public class QGraphicsRotation: QGraphicsTransform, QGraphicsRotation_ITF {
    public func QGraphicsRotation_PTR() -> QGraphicsRotation { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsRotation_PTR"]) as! QGraphicsRotation }
    public func Angle() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "Angle"]) as! Float }
    public func ConnectAngleChanged(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectAngleChanged", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectAngleChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectAngleChanged"]) }
    public func AngleChanged() { _ = callLocalFunction(l: ["", Pointer(), ___className, "AngleChanged"]) }
    override public func ConnectApplyTo(f: @escaping (_ matrix: QMatrix4x4) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectApplyTo", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QMatrix4x4) } as Any) }
    override public func DisconnectApplyTo() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectApplyTo"]) }
    override public func ApplyTo(matrix: QMatrix4x4_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ApplyTo", matrix as Any]) }
    public func ApplyToDefault(matrix: QMatrix4x4_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ApplyToDefault", matrix as Any]) }
    public func Axis() -> QVector3D { callLocalFunction(l: ["", Pointer(), ___className, "Axis"]) as! QVector3D }
    public func ConnectAxisChanged(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectAxisChanged", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectAxisChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectAxisChanged"]) }
    public func AxisChanged() { _ = callLocalFunction(l: ["", Pointer(), ___className, "AxisChanged"]) }
    public func Origin() -> QVector3D { callLocalFunction(l: ["", Pointer(), ___className, "Origin"]) as! QVector3D }
    public func ConnectOriginChanged(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectOriginChanged", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectOriginChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectOriginChanged"]) }
    public func OriginChanged() { _ = callLocalFunction(l: ["", Pointer(), ___className, "OriginChanged"]) }
    public func SetAngle(vqr: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAngle", vqr as Any]) }
    public func SetAxis(axis: QVector3D_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAxis", axis as Any]) }
    public func SetAxis2(axis: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAxis2", axis as Any]) }
    public func SetOrigin(point: QVector3D_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOrigin", point as Any]) }
    public func ConnectDestroyQGraphicsRotation(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsRotation", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsRotation() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsRotation"]) }
    public func DestroyQGraphicsRotation() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsRotation"]) }
    public func DestroyQGraphicsRotationDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsRotationDefault"]) }
}

public func NewQGraphicsRotationFromPointer(ptr: String) -> QGraphicsRotation { let r = QGraphicsRotation(); r.initFrom(p: ptr, n: "widgets.QGraphicsRotation"); return r }
public func NewQGraphicsRotation(parent: QObject_ITF? = nil) -> QGraphicsRotation { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsRotation", "", parent as Any]) as! QGraphicsRotation }
public protocol QGraphicsScale_ITF: QGraphicsTransform_ITF {
    func QGraphicsScale_PTR() -> QGraphicsScale
}

public class QGraphicsScale: QGraphicsTransform, QGraphicsScale_ITF {
    public func QGraphicsScale_PTR() -> QGraphicsScale { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsScale_PTR"]) as! QGraphicsScale }
    override public func ConnectApplyTo(f: @escaping (_ matrix: QMatrix4x4) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectApplyTo", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QMatrix4x4) } as Any) }
    override public func DisconnectApplyTo() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectApplyTo"]) }
    override public func ApplyTo(matrix: QMatrix4x4_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ApplyTo", matrix as Any]) }
    public func ApplyToDefault(matrix: QMatrix4x4_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ApplyToDefault", matrix as Any]) }
    public func Origin() -> QVector3D { callLocalFunction(l: ["", Pointer(), ___className, "Origin"]) as! QVector3D }
    public func ConnectOriginChanged(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectOriginChanged", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectOriginChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectOriginChanged"]) }
    public func OriginChanged() { _ = callLocalFunction(l: ["", Pointer(), ___className, "OriginChanged"]) }
    public func ConnectScaleChanged(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectScaleChanged", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectScaleChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectScaleChanged"]) }
    public func ScaleChanged() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ScaleChanged"]) }
    public func SetOrigin(point: QVector3D_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOrigin", point as Any]) }
    public func SetXScale(vqr: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetXScale", vqr as Any]) }
    public func SetYScale(vqr: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetYScale", vqr as Any]) }
    public func SetZScale(vqr: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetZScale", vqr as Any]) }
    public func XScale() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "XScale"]) as! Float }
    public func ConnectXScaleChanged(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectXScaleChanged", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectXScaleChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectXScaleChanged"]) }
    public func XScaleChanged() { _ = callLocalFunction(l: ["", Pointer(), ___className, "XScaleChanged"]) }
    public func YScale() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "YScale"]) as! Float }
    public func ConnectYScaleChanged(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectYScaleChanged", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectYScaleChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectYScaleChanged"]) }
    public func YScaleChanged() { _ = callLocalFunction(l: ["", Pointer(), ___className, "YScaleChanged"]) }
    public func ZScale() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "ZScale"]) as! Float }
    public func ConnectZScaleChanged(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectZScaleChanged", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectZScaleChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectZScaleChanged"]) }
    public func ZScaleChanged() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ZScaleChanged"]) }
    public func ConnectDestroyQGraphicsScale(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsScale", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsScale() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsScale"]) }
    public func DestroyQGraphicsScale() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsScale"]) }
    public func DestroyQGraphicsScaleDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsScaleDefault"]) }
}

public func NewQGraphicsScaleFromPointer(ptr: String) -> QGraphicsScale { let r = QGraphicsScale(); r.initFrom(p: ptr, n: "widgets.QGraphicsScale"); return r }
public func NewQGraphicsScale(parent: QObject_ITF? = nil) -> QGraphicsScale { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsScale", "", parent as Any]) as! QGraphicsScale }
public protocol QGraphicsScene_ITF: QObject_ITF {
    func QGraphicsScene_PTR() -> QGraphicsScene
}

public class QGraphicsScene: QObject, QGraphicsScene_ITF {
    public func QGraphicsScene_PTR() -> QGraphicsScene { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsScene_PTR"]) as! QGraphicsScene }
    public func ActivePanel() -> QGraphicsItem { callLocalFunction(l: ["", Pointer(), ___className, "ActivePanel"]) as! QGraphicsItem }
    public func ActiveWindow() -> QGraphicsWidget { callLocalFunction(l: ["", Pointer(), ___className, "ActiveWindow"]) as! QGraphicsWidget }
    public func AddEllipse(rect: QRectF_ITF? = nil, pen: QPen_ITF? = nil, brush: QBrush_ITF? = nil) -> QGraphicsEllipseItem { callLocalFunction(l: ["", Pointer(), ___className, "AddEllipse", rect as Any, pen as Any, brush as Any]) as! QGraphicsEllipseItem }
    public func AddEllipse2(x: Float, y: Float, w: Float, h: Float, pen: QPen_ITF? = nil, brush: QBrush_ITF? = nil) -> QGraphicsEllipseItem { callLocalFunction(l: ["", Pointer(), ___className, "AddEllipse2", x as Any, y as Any, w as Any, h as Any, pen as Any, brush as Any]) as! QGraphicsEllipseItem }
    public func AddItem(item: QGraphicsItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddItem", item as Any]) }
    public func AddLine(line: QLineF_ITF? = nil, pen: QPen_ITF? = nil) -> QGraphicsLineItem { callLocalFunction(l: ["", Pointer(), ___className, "AddLine", line as Any, pen as Any]) as! QGraphicsLineItem }
    public func AddLine2(x1: Float, y1: Float, x2: Float, y2: Float, pen: QPen_ITF? = nil) -> QGraphicsLineItem { callLocalFunction(l: ["", Pointer(), ___className, "AddLine2", x1 as Any, y1 as Any, x2 as Any, y2 as Any, pen as Any]) as! QGraphicsLineItem }
    public func AddPath(path: QPainterPath_ITF? = nil, pen: QPen_ITF? = nil, brush: QBrush_ITF? = nil) -> QGraphicsPathItem { callLocalFunction(l: ["", Pointer(), ___className, "AddPath", path as Any, pen as Any, brush as Any]) as! QGraphicsPathItem }
    public func AddPixmap(pixmap: QPixmap_ITF? = nil) -> QGraphicsPixmapItem { callLocalFunction(l: ["", Pointer(), ___className, "AddPixmap", pixmap as Any]) as! QGraphicsPixmapItem }
    public func AddPolygon(polygon: QPolygonF_ITF? = nil, pen: QPen_ITF? = nil, brush: QBrush_ITF? = nil) -> QGraphicsPolygonItem { callLocalFunction(l: ["", Pointer(), ___className, "AddPolygon", polygon as Any, pen as Any, brush as Any]) as! QGraphicsPolygonItem }
    public func AddRect(rect: QRectF_ITF? = nil, pen: QPen_ITF? = nil, brush: QBrush_ITF? = nil) -> QGraphicsRectItem { callLocalFunction(l: ["", Pointer(), ___className, "AddRect", rect as Any, pen as Any, brush as Any]) as! QGraphicsRectItem }
    public func AddRect2(x: Float, y: Float, w: Float, h: Float, pen: QPen_ITF? = nil, brush: QBrush_ITF? = nil) -> QGraphicsRectItem { callLocalFunction(l: ["", Pointer(), ___className, "AddRect2", x as Any, y as Any, w as Any, h as Any, pen as Any, brush as Any]) as! QGraphicsRectItem }
    public func AddSimpleText(text: String, font: QFont_ITF? = nil) -> QGraphicsSimpleTextItem { callLocalFunction(l: ["", Pointer(), ___className, "AddSimpleText", text as Any, font as Any]) as! QGraphicsSimpleTextItem }
    public func AddText(text: String, font: QFont_ITF? = nil) -> QGraphicsTextItem { callLocalFunction(l: ["", Pointer(), ___className, "AddText", text as Any, font as Any]) as! QGraphicsTextItem }
    public func AddWidget(widget: QWidget_ITF? = nil, wFlags: Int) -> QGraphicsProxyWidget { callLocalFunction(l: ["", Pointer(), ___className, "AddWidget", widget as Any, wFlags as Any]) as! QGraphicsProxyWidget }
    public func ConnectAdvance(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectAdvance", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectAdvance() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectAdvance"]) }
    public func Advance() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Advance"]) }
    public func AdvanceDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "AdvanceDefault"]) }
    public func BackgroundBrush() -> QBrush { callLocalFunction(l: ["", Pointer(), ___className, "BackgroundBrush"]) as! QBrush }
    public func BspTreeDepth() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "BspTreeDepth"]) as! Float) }
    public func ConnectChanged(f: @escaping (_ region: [QRectF]) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! [QRectF]) } as Any) }
    public func DisconnectChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectChanged"]) }
    public func Changed(region: [QRectF]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Changed", region as Any]) }
    public func ConnectClear(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectClear", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectClear() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectClear"]) }
    public func Clear() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Clear"]) }
    public func ClearDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearDefault"]) }
    public func ClearFocus() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearFocus"]) }
    public func ConnectClearSelection(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectClearSelection", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectClearSelection() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectClearSelection"]) }
    public func ClearSelection() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearSelection"]) }
    public func ClearSelectionDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearSelectionDefault"]) }
    public func CollidingItems(item: QGraphicsItem_ITF? = nil, mode: Int) -> [QGraphicsItem] { callLocalFunction(l: ["", Pointer(), ___className, "CollidingItems", item as Any, mode as Any]) as! [QGraphicsItem] }
    public func ConnectContextMenuEvent(f: @escaping (_ contextMenuEvent: QGraphicsSceneContextMenuEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectContextMenuEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QGraphicsSceneContextMenuEvent) } as Any) }
    public func DisconnectContextMenuEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectContextMenuEvent"]) }
    public func ContextMenuEvent(contextMenuEvent: QGraphicsSceneContextMenuEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ContextMenuEvent", contextMenuEvent as Any]) }
    public func ContextMenuEventDefault(contextMenuEvent: QGraphicsSceneContextMenuEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ContextMenuEventDefault", contextMenuEvent as Any]) }
    public func CreateItemGroup(items: [QGraphicsItem]) -> QGraphicsItemGroup { callLocalFunction(l: ["", Pointer(), ___className, "CreateItemGroup", items as Any]) as! QGraphicsItemGroup }
    public func DestroyItemGroup(group: QGraphicsItemGroup_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyItemGroup", group as Any]) }
    public func ConnectDragEnterEvent(f: @escaping (_ event: QGraphicsSceneDragDropEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDragEnterEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QGraphicsSceneDragDropEvent) } as Any) }
    public func DisconnectDragEnterEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDragEnterEvent"]) }
    public func DragEnterEvent(event: QGraphicsSceneDragDropEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DragEnterEvent", event as Any]) }
    public func DragEnterEventDefault(event: QGraphicsSceneDragDropEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DragEnterEventDefault", event as Any]) }
    public func ConnectDragLeaveEvent(f: @escaping (_ event: QGraphicsSceneDragDropEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDragLeaveEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QGraphicsSceneDragDropEvent) } as Any) }
    public func DisconnectDragLeaveEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDragLeaveEvent"]) }
    public func DragLeaveEvent(event: QGraphicsSceneDragDropEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DragLeaveEvent", event as Any]) }
    public func DragLeaveEventDefault(event: QGraphicsSceneDragDropEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DragLeaveEventDefault", event as Any]) }
    public func ConnectDragMoveEvent(f: @escaping (_ event: QGraphicsSceneDragDropEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDragMoveEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QGraphicsSceneDragDropEvent) } as Any) }
    public func DisconnectDragMoveEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDragMoveEvent"]) }
    public func DragMoveEvent(event: QGraphicsSceneDragDropEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DragMoveEvent", event as Any]) }
    public func DragMoveEventDefault(event: QGraphicsSceneDragDropEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DragMoveEventDefault", event as Any]) }
    public func ConnectDrawBackground(f: @escaping (_ painter: QPainter, _ rect: QRectF) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDrawBackground", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainter, inp[1] as! QRectF) } as Any) }
    public func DisconnectDrawBackground() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDrawBackground"]) }
    public func DrawBackground(painter: QPainter_ITF? = nil, rect: QRectF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawBackground", painter as Any, rect as Any]) }
    public func DrawBackgroundDefault(painter: QPainter_ITF? = nil, rect: QRectF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawBackgroundDefault", painter as Any, rect as Any]) }
    public func ConnectDrawForeground(f: @escaping (_ painter: QPainter, _ rect: QRectF) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDrawForeground", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainter, inp[1] as! QRectF) } as Any) }
    public func DisconnectDrawForeground() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDrawForeground"]) }
    public func DrawForeground(painter: QPainter_ITF? = nil, rect: QRectF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawForeground", painter as Any, rect as Any]) }
    public func DrawForegroundDefault(painter: QPainter_ITF? = nil, rect: QRectF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawForegroundDefault", painter as Any, rect as Any]) }
    public func ConnectDropEvent(f: @escaping (_ event: QGraphicsSceneDragDropEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDropEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QGraphicsSceneDragDropEvent) } as Any) }
    public func DisconnectDropEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDropEvent"]) }
    public func DropEvent(event: QGraphicsSceneDragDropEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DropEvent", event as Any]) }
    public func DropEventDefault(event: QGraphicsSceneDragDropEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DropEventDefault", event as Any]) }
    public func EventDefault(event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventDefault", event as Any]) as! Bool }
    override public func EventFilterDefault(watched: QObject_ITF? = nil, event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventFilterDefault", watched as Any, event as Any]) as! Bool }
    public func ConnectFocusInEvent(f: @escaping (_ focusEvent: QFocusEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectFocusInEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QFocusEvent) } as Any) }
    public func DisconnectFocusInEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectFocusInEvent"]) }
    public func FocusInEvent(focusEvent: QFocusEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "FocusInEvent", focusEvent as Any]) }
    public func FocusInEventDefault(focusEvent: QFocusEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "FocusInEventDefault", focusEvent as Any]) }
    public func FocusItem() -> QGraphicsItem { callLocalFunction(l: ["", Pointer(), ___className, "FocusItem"]) as! QGraphicsItem }
    public func ConnectFocusItemChanged(f: @escaping (_ newFocusItem: QGraphicsItem, _ oldFocusItem: QGraphicsItem, _ reason: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectFocusItemChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QGraphicsItem, inp[1] as! QGraphicsItem, Int(inp[2] as! Float)) } as Any) }
    public func DisconnectFocusItemChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectFocusItemChanged"]) }
    public func FocusItemChanged(newFocusItem: QGraphicsItem_ITF? = nil, oldFocusItem: QGraphicsItem_ITF? = nil, reason: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "FocusItemChanged", newFocusItem as Any, oldFocusItem as Any, reason as Any]) }
    public func ConnectFocusNextPrevChild(f: @escaping (_ next: Bool) -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectFocusNextPrevChild", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectFocusNextPrevChild() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectFocusNextPrevChild"]) }
    public func FocusNextPrevChild(next: Bool) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "FocusNextPrevChild", next as Any]) as! Bool }
    public func FocusNextPrevChildDefault(next: Bool) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "FocusNextPrevChildDefault", next as Any]) as! Bool }
    public func FocusOnTouch() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "FocusOnTouch"]) as! Bool }
    public func ConnectFocusOutEvent(f: @escaping (_ focusEvent: QFocusEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectFocusOutEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QFocusEvent) } as Any) }
    public func DisconnectFocusOutEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectFocusOutEvent"]) }
    public func FocusOutEvent(focusEvent: QFocusEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "FocusOutEvent", focusEvent as Any]) }
    public func FocusOutEventDefault(focusEvent: QFocusEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "FocusOutEventDefault", focusEvent as Any]) }
    public func Font() -> QFont { callLocalFunction(l: ["", Pointer(), ___className, "Font"]) as! QFont }
    public func ForegroundBrush() -> QBrush { callLocalFunction(l: ["", Pointer(), ___className, "ForegroundBrush"]) as! QBrush }
    public func HasFocus() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "HasFocus"]) as! Bool }
    public func Height() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "Height"]) as! Float }
    public func ConnectHelpEvent(f: @escaping (_ helpEvent: QGraphicsSceneHelpEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHelpEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QGraphicsSceneHelpEvent) } as Any) }
    public func DisconnectHelpEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHelpEvent"]) }
    public func HelpEvent(helpEvent: QGraphicsSceneHelpEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "HelpEvent", helpEvent as Any]) }
    public func HelpEventDefault(helpEvent: QGraphicsSceneHelpEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "HelpEventDefault", helpEvent as Any]) }
    public func ConnectInputMethodEvent(f: @escaping (_ event: QInputMethodEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectInputMethodEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QInputMethodEvent) } as Any) }
    public func DisconnectInputMethodEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectInputMethodEvent"]) }
    public func InputMethodEvent(event: QInputMethodEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InputMethodEvent", event as Any]) }
    public func InputMethodEventDefault(event: QInputMethodEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InputMethodEventDefault", event as Any]) }
    public func ConnectInputMethodQuery(f: @escaping (_ query: Int) -> QVariant) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectInputMethodQuery", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectInputMethodQuery() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectInputMethodQuery"]) }
    public func InputMethodQuery(query: Int) -> QVariant { callLocalFunction(l: ["", Pointer(), ___className, "InputMethodQuery", query as Any]) as! QVariant }
    public func InputMethodQueryDefault(query: Int) -> QVariant { callLocalFunction(l: ["", Pointer(), ___className, "InputMethodQueryDefault", query as Any]) as! QVariant }
    public func ConnectInvalidate(f: @escaping (_ rect: QRectF, _ layers: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectInvalidate", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QRectF, Int(inp[1] as! Float)) } as Any) }
    public func DisconnectInvalidate() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectInvalidate"]) }
    public func Invalidate(rect: QRectF_ITF? = nil, layers: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Invalidate", rect as Any, layers as Any]) }
    public func InvalidateDefault(rect: QRectF_ITF? = nil, layers: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InvalidateDefault", rect as Any, layers as Any]) }
    public func Invalidate2(x: Float, y: Float, w: Float, h: Float, layers: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Invalidate2", x as Any, y as Any, w as Any, h as Any, layers as Any]) }
    public func IsActive() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsActive"]) as! Bool }
    public func IsSortCacheEnabled() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsSortCacheEnabled"]) as! Bool }
    public func ItemAt(position: QPointF_ITF? = nil, deviceTransform: QTransform_ITF? = nil) -> QGraphicsItem { callLocalFunction(l: ["", Pointer(), ___className, "ItemAt", position as Any, deviceTransform as Any]) as! QGraphicsItem }
    public func ItemAt4(x: Float, y: Float, deviceTransform: QTransform_ITF? = nil) -> QGraphicsItem { callLocalFunction(l: ["", Pointer(), ___className, "ItemAt4", x as Any, y as Any, deviceTransform as Any]) as! QGraphicsItem }
    public func ItemIndexMethod() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ItemIndexMethod"]) as! Float) }
    public func Items(order: Int) -> [QGraphicsItem] { callLocalFunction(l: ["", Pointer(), ___className, "Items", order as Any]) as! [QGraphicsItem] }
    public func Items2(pos: QPointF_ITF? = nil, mode: Int, order: Int, deviceTransform: QTransform_ITF? = nil) -> [QGraphicsItem] { callLocalFunction(l: ["", Pointer(), ___className, "Items2", pos as Any, mode as Any, order as Any, deviceTransform as Any]) as! [QGraphicsItem] }
    public func Items3(rect: QRectF_ITF? = nil, mode: Int, order: Int, deviceTransform: QTransform_ITF? = nil) -> [QGraphicsItem] { callLocalFunction(l: ["", Pointer(), ___className, "Items3", rect as Any, mode as Any, order as Any, deviceTransform as Any]) as! [QGraphicsItem] }
    public func Items4(polygon: QPolygonF_ITF? = nil, mode: Int, order: Int, deviceTransform: QTransform_ITF? = nil) -> [QGraphicsItem] { callLocalFunction(l: ["", Pointer(), ___className, "Items4", polygon as Any, mode as Any, order as Any, deviceTransform as Any]) as! [QGraphicsItem] }
    public func Items5(path: QPainterPath_ITF? = nil, mode: Int, order: Int, deviceTransform: QTransform_ITF? = nil) -> [QGraphicsItem] { callLocalFunction(l: ["", Pointer(), ___className, "Items5", path as Any, mode as Any, order as Any, deviceTransform as Any]) as! [QGraphicsItem] }
    public func Items7(x: Float, y: Float, w: Float, h: Float, mode: Int, order: Int, deviceTransform: QTransform_ITF? = nil) -> [QGraphicsItem] { callLocalFunction(l: ["", Pointer(), ___className, "Items7", x as Any, y as Any, w as Any, h as Any, mode as Any, order as Any, deviceTransform as Any]) as! [QGraphicsItem] }
    public func ItemsBoundingRect() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "ItemsBoundingRect"]) as! QRectF }
    public func ConnectKeyPressEvent(f: @escaping (_ keyEvent: QKeyEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectKeyPressEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QKeyEvent) } as Any) }
    public func DisconnectKeyPressEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectKeyPressEvent"]) }
    public func KeyPressEvent(keyEvent: QKeyEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "KeyPressEvent", keyEvent as Any]) }
    public func KeyPressEventDefault(keyEvent: QKeyEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "KeyPressEventDefault", keyEvent as Any]) }
    public func ConnectKeyReleaseEvent(f: @escaping (_ keyEvent: QKeyEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectKeyReleaseEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QKeyEvent) } as Any) }
    public func DisconnectKeyReleaseEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectKeyReleaseEvent"]) }
    public func KeyReleaseEvent(keyEvent: QKeyEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "KeyReleaseEvent", keyEvent as Any]) }
    public func KeyReleaseEventDefault(keyEvent: QKeyEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "KeyReleaseEventDefault", keyEvent as Any]) }
    public func MinimumRenderSize() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "MinimumRenderSize"]) as! Float }
    public func ConnectMouseDoubleClickEvent(f: @escaping (_ mouseEvent: QGraphicsSceneMouseEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMouseDoubleClickEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QGraphicsSceneMouseEvent) } as Any) }
    public func DisconnectMouseDoubleClickEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMouseDoubleClickEvent"]) }
    public func MouseDoubleClickEvent(mouseEvent: QGraphicsSceneMouseEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MouseDoubleClickEvent", mouseEvent as Any]) }
    public func MouseDoubleClickEventDefault(mouseEvent: QGraphicsSceneMouseEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MouseDoubleClickEventDefault", mouseEvent as Any]) }
    public func MouseGrabberItem() -> QGraphicsItem { callLocalFunction(l: ["", Pointer(), ___className, "MouseGrabberItem"]) as! QGraphicsItem }
    public func ConnectMouseMoveEvent(f: @escaping (_ mouseEvent: QGraphicsSceneMouseEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMouseMoveEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QGraphicsSceneMouseEvent) } as Any) }
    public func DisconnectMouseMoveEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMouseMoveEvent"]) }
    public func MouseMoveEvent(mouseEvent: QGraphicsSceneMouseEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MouseMoveEvent", mouseEvent as Any]) }
    public func MouseMoveEventDefault(mouseEvent: QGraphicsSceneMouseEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MouseMoveEventDefault", mouseEvent as Any]) }
    public func ConnectMousePressEvent(f: @escaping (_ mouseEvent: QGraphicsSceneMouseEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMousePressEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QGraphicsSceneMouseEvent) } as Any) }
    public func DisconnectMousePressEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMousePressEvent"]) }
    public func MousePressEvent(mouseEvent: QGraphicsSceneMouseEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MousePressEvent", mouseEvent as Any]) }
    public func MousePressEventDefault(mouseEvent: QGraphicsSceneMouseEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MousePressEventDefault", mouseEvent as Any]) }
    public func ConnectMouseReleaseEvent(f: @escaping (_ mouseEvent: QGraphicsSceneMouseEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMouseReleaseEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QGraphicsSceneMouseEvent) } as Any) }
    public func DisconnectMouseReleaseEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMouseReleaseEvent"]) }
    public func MouseReleaseEvent(mouseEvent: QGraphicsSceneMouseEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MouseReleaseEvent", mouseEvent as Any]) }
    public func MouseReleaseEventDefault(mouseEvent: QGraphicsSceneMouseEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MouseReleaseEventDefault", mouseEvent as Any]) }
    public func Palette() -> QPalette { callLocalFunction(l: ["", Pointer(), ___className, "Palette"]) as! QPalette }
    public func RemoveItem(item: QGraphicsItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveItem", item as Any]) }
    public func Render(painter: QPainter_ITF? = nil, target: QRectF_ITF? = nil, source: QRectF_ITF? = nil, aspectRatioMode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Render", painter as Any, target as Any, source as Any, aspectRatioMode as Any]) }
    public func SceneRect() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "SceneRect"]) as! QRectF }
    public func ConnectSceneRectChanged(f: @escaping (_ rect: QRectF) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSceneRectChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QRectF) } as Any) }
    public func DisconnectSceneRectChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSceneRectChanged"]) }
    public func SceneRectChanged(rect: QRectF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SceneRectChanged", rect as Any]) }
    public func SelectedItems() -> [QGraphicsItem] { callLocalFunction(l: ["", Pointer(), ___className, "SelectedItems"]) as! [QGraphicsItem] }
    public func SelectionArea() -> QPainterPath { callLocalFunction(l: ["", Pointer(), ___className, "SelectionArea"]) as! QPainterPath }
    public func ConnectSelectionChanged(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSelectionChanged", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectSelectionChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSelectionChanged"]) }
    public func SelectionChanged() { _ = callLocalFunction(l: ["", Pointer(), ___className, "SelectionChanged"]) }
    public func SendEvent(item: QGraphicsItem_ITF? = nil, event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "SendEvent", item as Any, event as Any]) as! Bool }
    public func SetActivePanel(item: QGraphicsItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetActivePanel", item as Any]) }
    public func SetActiveWindow(widget: QGraphicsWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetActiveWindow", widget as Any]) }
    public func SetBackgroundBrush(brush: QBrush_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetBackgroundBrush", brush as Any]) }
    public func SetBspTreeDepth(depth: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetBspTreeDepth", depth as Any]) }
    public func SetFocus(focusReason: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFocus", focusReason as Any]) }
    public func SetFocusItem(item: QGraphicsItem_ITF? = nil, focusReason: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFocusItem", item as Any, focusReason as Any]) }
    public func SetFocusOnTouch(enabled: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFocusOnTouch", enabled as Any]) }
    public func SetFont(font: QFont_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFont", font as Any]) }
    public func SetForegroundBrush(brush: QBrush_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetForegroundBrush", brush as Any]) }
    public func SetItemIndexMethod(method: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetItemIndexMethod", method as Any]) }
    public func SetMinimumRenderSize(minSize: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMinimumRenderSize", minSize as Any]) }
    public func SetPalette(palette: QPalette_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPalette", palette as Any]) }
    public func SetSceneRect(rect: QRectF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSceneRect", rect as Any]) }
    public func SetSceneRect2(x: Float, y: Float, w: Float, h: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSceneRect2", x as Any, y as Any, w as Any, h as Any]) }
    public func SetSelectionArea(path: QPainterPath_ITF? = nil, deviceTransform: QTransform_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSelectionArea", path as Any, deviceTransform as Any]) }
    public func SetSelectionArea2(path: QPainterPath_ITF? = nil, mode: Int, deviceTransform: QTransform_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSelectionArea2", path as Any, mode as Any, deviceTransform as Any]) }
    public func SetSelectionArea3(path: QPainterPath_ITF? = nil, selectionOperation: Int, mode: Int, deviceTransform: QTransform_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSelectionArea3", path as Any, selectionOperation as Any, mode as Any, deviceTransform as Any]) }
    public func SetSortCacheEnabled(enabled: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSortCacheEnabled", enabled as Any]) }
    public func SetStickyFocus(enabled: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStickyFocus", enabled as Any]) }
    public func SetStyle(style: QStyle_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStyle", style as Any]) }
    public func StickyFocus() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "StickyFocus"]) as! Bool }
    public func Style() -> QStyle { callLocalFunction(l: ["", Pointer(), ___className, "Style"]) as! QStyle }
    public func ConnectUpdate(f: @escaping (_ rect: QRectF) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectUpdate", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QRectF) } as Any) }
    public func DisconnectUpdate() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectUpdate"]) }
    public func Update(rect: QRectF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Update", rect as Any]) }
    public func UpdateDefault(rect: QRectF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "UpdateDefault", rect as Any]) }
    public func Update2(x: Float, y: Float, w: Float, h: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Update2", x as Any, y as Any, w as Any, h as Any]) }
    public func Views() -> [QGraphicsView] { callLocalFunction(l: ["", Pointer(), ___className, "Views"]) as! [QGraphicsView] }
    public func ConnectWheelEvent(f: @escaping (_ wheelEvent: QGraphicsSceneWheelEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectWheelEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QGraphicsSceneWheelEvent) } as Any) }
    public func DisconnectWheelEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectWheelEvent"]) }
    public func WheelEvent(wheelEvent: QGraphicsSceneWheelEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "WheelEvent", wheelEvent as Any]) }
    public func WheelEventDefault(wheelEvent: QGraphicsSceneWheelEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "WheelEventDefault", wheelEvent as Any]) }
    public func Width() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "Width"]) as! Float }
    public func ConnectDestroyQGraphicsScene(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsScene", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsScene() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsScene"]) }
    public func DestroyQGraphicsScene() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsScene"]) }
    public func DestroyQGraphicsSceneDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsSceneDefault"]) }
    override public func ChildEventDefault(event: QChildEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ChildEventDefault", event as Any]) }
    override public func ConnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ConnectNotifyDefault", sign as Any]) }
    override public func CustomEventDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CustomEventDefault", event as Any]) }
    override public func DeleteLaterDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DeleteLaterDefault"]) }
    override public func DisconnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DisconnectNotifyDefault", sign as Any]) }
    override public func MetaObjectDefault() -> QMetaObject { callLocalFunction(l: ["", Pointer(), ___className, "MetaObjectDefault"]) as! QMetaObject }
    override public func TimerEventDefault(event: QTimerEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TimerEventDefault", event as Any]) }
}

public func NewQGraphicsSceneFromPointer(ptr: String) -> QGraphicsScene { let r = QGraphicsScene(); r.initFrom(p: ptr, n: "widgets.QGraphicsScene"); return r }
public func NewQGraphicsScene(parent: QObject_ITF? = nil) -> QGraphicsScene { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsScene", "", parent as Any]) as! QGraphicsScene }
public func NewQGraphicsScene2(sceneRect: QRectF_ITF? = nil, parent: QObject_ITF? = nil) -> QGraphicsScene { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsScene2", "", sceneRect as Any, parent as Any]) as! QGraphicsScene }
public func NewQGraphicsScene3(x: Float, y: Float, width: Float, height: Float, parent: QObject_ITF? = nil) -> QGraphicsScene { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsScene3", "", x as Any, y as Any, width as Any, height as Any, parent as Any]) as! QGraphicsScene }
public protocol QGraphicsSceneContextMenuEvent_ITF: QGraphicsSceneEvent_ITF {
    func QGraphicsSceneContextMenuEvent_PTR() -> QGraphicsSceneContextMenuEvent
}

public class QGraphicsSceneContextMenuEvent: QGraphicsSceneEvent, QGraphicsSceneContextMenuEvent_ITF {
    public func QGraphicsSceneContextMenuEvent_PTR() -> QGraphicsSceneContextMenuEvent { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsSceneContextMenuEvent_PTR"]) as! QGraphicsSceneContextMenuEvent }
    public func Modifiers() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Modifiers"]) as! Float) }
    public func Pos() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "Pos"]) as! QPointF }
    public func Reason() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Reason"]) as! Float) }
    public func ScenePos() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "ScenePos"]) as! QPointF }
    public func ScreenPos() -> QPoint { callLocalFunction(l: ["", Pointer(), ___className, "ScreenPos"]) as! QPoint }
    public func ConnectDestroyQGraphicsSceneContextMenuEvent(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsSceneContextMenuEvent", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsSceneContextMenuEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsSceneContextMenuEvent"]) }
    public func DestroyQGraphicsSceneContextMenuEvent() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsSceneContextMenuEvent"]) }
    public func DestroyQGraphicsSceneContextMenuEventDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsSceneContextMenuEventDefault"]) }
}

public func NewQGraphicsSceneContextMenuEventFromPointer(ptr: String) -> QGraphicsSceneContextMenuEvent { let r = QGraphicsSceneContextMenuEvent(); r.initFrom(p: ptr, n: "widgets.QGraphicsSceneContextMenuEvent"); return r }
public protocol QGraphicsSceneDragDropEvent_ITF: QGraphicsSceneEvent_ITF {
    func QGraphicsSceneDragDropEvent_PTR() -> QGraphicsSceneDragDropEvent
}

public class QGraphicsSceneDragDropEvent: QGraphicsSceneEvent, QGraphicsSceneDragDropEvent_ITF {
    public func QGraphicsSceneDragDropEvent_PTR() -> QGraphicsSceneDragDropEvent { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsSceneDragDropEvent_PTR"]) as! QGraphicsSceneDragDropEvent }
    public func AcceptProposedAction() { _ = callLocalFunction(l: ["", Pointer(), ___className, "AcceptProposedAction"]) }
    public func Buttons() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Buttons"]) as! Float) }
    public func DropAction() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "DropAction"]) as! Float) }
    public func MimeData() -> QMimeData { callLocalFunction(l: ["", Pointer(), ___className, "MimeData"]) as! QMimeData }
    public func Modifiers() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Modifiers"]) as! Float) }
    public func Pos() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "Pos"]) as! QPointF }
    public func PossibleActions() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "PossibleActions"]) as! Float) }
    public func ProposedAction() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ProposedAction"]) as! Float) }
    public func ScenePos() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "ScenePos"]) as! QPointF }
    public func ScreenPos() -> QPoint { callLocalFunction(l: ["", Pointer(), ___className, "ScreenPos"]) as! QPoint }
    public func SetDropAction(action: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDropAction", action as Any]) }
    public func Source() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "Source"]) as! QWidget }
    public func ConnectDestroyQGraphicsSceneDragDropEvent(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsSceneDragDropEvent", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsSceneDragDropEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsSceneDragDropEvent"]) }
    public func DestroyQGraphicsSceneDragDropEvent() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsSceneDragDropEvent"]) }
    public func DestroyQGraphicsSceneDragDropEventDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsSceneDragDropEventDefault"]) }
}

public func NewQGraphicsSceneDragDropEventFromPointer(ptr: String) -> QGraphicsSceneDragDropEvent { let r = QGraphicsSceneDragDropEvent(); r.initFrom(p: ptr, n: "widgets.QGraphicsSceneDragDropEvent"); return r }
public protocol QGraphicsSceneEvent_ITF: QEvent_ITF {
    func QGraphicsSceneEvent_PTR() -> QGraphicsSceneEvent
}

public class QGraphicsSceneEvent: QEvent, QGraphicsSceneEvent_ITF {
    public func QGraphicsSceneEvent_PTR() -> QGraphicsSceneEvent { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsSceneEvent_PTR"]) as! QGraphicsSceneEvent }
    public func Widget() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "Widget"]) as! QWidget }
    public func ConnectDestroyQGraphicsSceneEvent(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsSceneEvent", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsSceneEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsSceneEvent"]) }
    public func DestroyQGraphicsSceneEvent() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsSceneEvent"]) }
    public func DestroyQGraphicsSceneEventDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsSceneEventDefault"]) }
}

public func NewQGraphicsSceneEventFromPointer(ptr: String) -> QGraphicsSceneEvent { let r = QGraphicsSceneEvent(); r.initFrom(p: ptr, n: "widgets.QGraphicsSceneEvent"); return r }
public protocol QGraphicsSceneHelpEvent_ITF: QGraphicsSceneEvent_ITF {
    func QGraphicsSceneHelpEvent_PTR() -> QGraphicsSceneHelpEvent
}

public class QGraphicsSceneHelpEvent: QGraphicsSceneEvent, QGraphicsSceneHelpEvent_ITF {
    public func QGraphicsSceneHelpEvent_PTR() -> QGraphicsSceneHelpEvent { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsSceneHelpEvent_PTR"]) as! QGraphicsSceneHelpEvent }
    public func ScenePos() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "ScenePos"]) as! QPointF }
    public func ScreenPos() -> QPoint { callLocalFunction(l: ["", Pointer(), ___className, "ScreenPos"]) as! QPoint }
    public func ConnectDestroyQGraphicsSceneHelpEvent(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsSceneHelpEvent", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsSceneHelpEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsSceneHelpEvent"]) }
    public func DestroyQGraphicsSceneHelpEvent() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsSceneHelpEvent"]) }
    public func DestroyQGraphicsSceneHelpEventDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsSceneHelpEventDefault"]) }
}

public func NewQGraphicsSceneHelpEventFromPointer(ptr: String) -> QGraphicsSceneHelpEvent { let r = QGraphicsSceneHelpEvent(); r.initFrom(p: ptr, n: "widgets.QGraphicsSceneHelpEvent"); return r }
public protocol QGraphicsSceneHoverEvent_ITF: QGraphicsSceneEvent_ITF {
    func QGraphicsSceneHoverEvent_PTR() -> QGraphicsSceneHoverEvent
}

public class QGraphicsSceneHoverEvent: QGraphicsSceneEvent, QGraphicsSceneHoverEvent_ITF {
    public func QGraphicsSceneHoverEvent_PTR() -> QGraphicsSceneHoverEvent { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsSceneHoverEvent_PTR"]) as! QGraphicsSceneHoverEvent }
    public func LastPos() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "LastPos"]) as! QPointF }
    public func LastScenePos() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "LastScenePos"]) as! QPointF }
    public func LastScreenPos() -> QPoint { callLocalFunction(l: ["", Pointer(), ___className, "LastScreenPos"]) as! QPoint }
    public func Modifiers() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Modifiers"]) as! Float) }
    public func Pos() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "Pos"]) as! QPointF }
    public func ScenePos() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "ScenePos"]) as! QPointF }
    public func ScreenPos() -> QPoint { callLocalFunction(l: ["", Pointer(), ___className, "ScreenPos"]) as! QPoint }
    public func ConnectDestroyQGraphicsSceneHoverEvent(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsSceneHoverEvent", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsSceneHoverEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsSceneHoverEvent"]) }
    public func DestroyQGraphicsSceneHoverEvent() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsSceneHoverEvent"]) }
    public func DestroyQGraphicsSceneHoverEventDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsSceneHoverEventDefault"]) }
}

public func NewQGraphicsSceneHoverEventFromPointer(ptr: String) -> QGraphicsSceneHoverEvent { let r = QGraphicsSceneHoverEvent(); r.initFrom(p: ptr, n: "widgets.QGraphicsSceneHoverEvent"); return r }
public protocol QGraphicsSceneMouseEvent_ITF: QGraphicsSceneEvent_ITF {
    func QGraphicsSceneMouseEvent_PTR() -> QGraphicsSceneMouseEvent
}

public class QGraphicsSceneMouseEvent: QGraphicsSceneEvent, QGraphicsSceneMouseEvent_ITF {
    public func QGraphicsSceneMouseEvent_PTR() -> QGraphicsSceneMouseEvent { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsSceneMouseEvent_PTR"]) as! QGraphicsSceneMouseEvent }
    public func Button() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Button"]) as! Float) }
    public func ButtonDownPos(button: Int) -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "ButtonDownPos", button as Any]) as! QPointF }
    public func ButtonDownScenePos(button: Int) -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "ButtonDownScenePos", button as Any]) as! QPointF }
    public func ButtonDownScreenPos(button: Int) -> QPoint { callLocalFunction(l: ["", Pointer(), ___className, "ButtonDownScreenPos", button as Any]) as! QPoint }
    public func Buttons() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Buttons"]) as! Float) }
    public func Flags() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Flags"]) as! Float) }
    public func LastPos() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "LastPos"]) as! QPointF }
    public func LastScenePos() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "LastScenePos"]) as! QPointF }
    public func LastScreenPos() -> QPoint { callLocalFunction(l: ["", Pointer(), ___className, "LastScreenPos"]) as! QPoint }
    public func Modifiers() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Modifiers"]) as! Float) }
    public func Pos() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "Pos"]) as! QPointF }
    public func ScenePos() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "ScenePos"]) as! QPointF }
    public func ScreenPos() -> QPoint { callLocalFunction(l: ["", Pointer(), ___className, "ScreenPos"]) as! QPoint }
    public func Source() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Source"]) as! Float) }
    public func ConnectDestroyQGraphicsSceneMouseEvent(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsSceneMouseEvent", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsSceneMouseEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsSceneMouseEvent"]) }
    public func DestroyQGraphicsSceneMouseEvent() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsSceneMouseEvent"]) }
    public func DestroyQGraphicsSceneMouseEventDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsSceneMouseEventDefault"]) }
}

public func NewQGraphicsSceneMouseEventFromPointer(ptr: String) -> QGraphicsSceneMouseEvent { let r = QGraphicsSceneMouseEvent(); r.initFrom(p: ptr, n: "widgets.QGraphicsSceneMouseEvent"); return r }
public protocol QGraphicsSceneMoveEvent_ITF: QGraphicsSceneEvent_ITF {
    func QGraphicsSceneMoveEvent_PTR() -> QGraphicsSceneMoveEvent
}

public class QGraphicsSceneMoveEvent: QGraphicsSceneEvent, QGraphicsSceneMoveEvent_ITF {
    public func QGraphicsSceneMoveEvent_PTR() -> QGraphicsSceneMoveEvent { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsSceneMoveEvent_PTR"]) as! QGraphicsSceneMoveEvent }
    public func NewPos() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "NewPos"]) as! QPointF }
    public func OldPos() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "OldPos"]) as! QPointF }
    public func ConnectDestroyQGraphicsSceneMoveEvent(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsSceneMoveEvent", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsSceneMoveEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsSceneMoveEvent"]) }
    public func DestroyQGraphicsSceneMoveEvent() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsSceneMoveEvent"]) }
    public func DestroyQGraphicsSceneMoveEventDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsSceneMoveEventDefault"]) }
}

public func NewQGraphicsSceneMoveEventFromPointer(ptr: String) -> QGraphicsSceneMoveEvent { let r = QGraphicsSceneMoveEvent(); r.initFrom(p: ptr, n: "widgets.QGraphicsSceneMoveEvent"); return r }
public func NewQGraphicsSceneMoveEvent2() -> QGraphicsSceneMoveEvent { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsSceneMoveEvent2", ""]) as! QGraphicsSceneMoveEvent }
public protocol QGraphicsSceneResizeEvent_ITF: QGraphicsSceneEvent_ITF {
    func QGraphicsSceneResizeEvent_PTR() -> QGraphicsSceneResizeEvent
}

public class QGraphicsSceneResizeEvent: QGraphicsSceneEvent, QGraphicsSceneResizeEvent_ITF {
    public func QGraphicsSceneResizeEvent_PTR() -> QGraphicsSceneResizeEvent { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsSceneResizeEvent_PTR"]) as! QGraphicsSceneResizeEvent }
    public func NewSize() -> QSizeF { callLocalFunction(l: ["", Pointer(), ___className, "NewSize"]) as! QSizeF }
    public func OldSize() -> QSizeF { callLocalFunction(l: ["", Pointer(), ___className, "OldSize"]) as! QSizeF }
    public func ConnectDestroyQGraphicsSceneResizeEvent(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsSceneResizeEvent", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsSceneResizeEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsSceneResizeEvent"]) }
    public func DestroyQGraphicsSceneResizeEvent() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsSceneResizeEvent"]) }
    public func DestroyQGraphicsSceneResizeEventDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsSceneResizeEventDefault"]) }
}

public func NewQGraphicsSceneResizeEventFromPointer(ptr: String) -> QGraphicsSceneResizeEvent { let r = QGraphicsSceneResizeEvent(); r.initFrom(p: ptr, n: "widgets.QGraphicsSceneResizeEvent"); return r }
public func NewQGraphicsSceneResizeEvent2() -> QGraphicsSceneResizeEvent { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsSceneResizeEvent2", ""]) as! QGraphicsSceneResizeEvent }
public protocol QGraphicsSceneWheelEvent_ITF: QGraphicsSceneEvent_ITF {
    func QGraphicsSceneWheelEvent_PTR() -> QGraphicsSceneWheelEvent
}

public class QGraphicsSceneWheelEvent: QGraphicsSceneEvent, QGraphicsSceneWheelEvent_ITF {
    public func QGraphicsSceneWheelEvent_PTR() -> QGraphicsSceneWheelEvent { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsSceneWheelEvent_PTR"]) as! QGraphicsSceneWheelEvent }
    public func Buttons() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Buttons"]) as! Float) }
    public func Delta() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Delta"]) as! Float) }
    public func Modifiers() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Modifiers"]) as! Float) }
    public func Orientation() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Orientation"]) as! Float) }
    public func Pos() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "Pos"]) as! QPointF }
    public func ScenePos() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "ScenePos"]) as! QPointF }
    public func ScreenPos() -> QPoint { callLocalFunction(l: ["", Pointer(), ___className, "ScreenPos"]) as! QPoint }
    public func ConnectDestroyQGraphicsSceneWheelEvent(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsSceneWheelEvent", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsSceneWheelEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsSceneWheelEvent"]) }
    public func DestroyQGraphicsSceneWheelEvent() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsSceneWheelEvent"]) }
    public func DestroyQGraphicsSceneWheelEventDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsSceneWheelEventDefault"]) }
}

public func NewQGraphicsSceneWheelEventFromPointer(ptr: String) -> QGraphicsSceneWheelEvent { let r = QGraphicsSceneWheelEvent(); r.initFrom(p: ptr, n: "widgets.QGraphicsSceneWheelEvent"); return r }
public protocol QGraphicsSimpleTextItem_ITF: QAbstractGraphicsShapeItem_ITF {
    func QGraphicsSimpleTextItem_PTR() -> QGraphicsSimpleTextItem
}

public class QGraphicsSimpleTextItem: QAbstractGraphicsShapeItem, QGraphicsSimpleTextItem_ITF {
    public func QGraphicsSimpleTextItem_PTR() -> QGraphicsSimpleTextItem { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsSimpleTextItem_PTR"]) as! QGraphicsSimpleTextItem }
    override public func ConnectBoundingRect(f: @escaping () -> QRectF) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectBoundingRect", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectBoundingRect() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectBoundingRect"]) }
    override public func BoundingRect() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "BoundingRect"]) as! QRectF }
    override public func BoundingRectDefault() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "BoundingRectDefault"]) as! QRectF }
    public func Font() -> QFont { callLocalFunction(l: ["", Pointer(), ___className, "Font"]) as! QFont }
    override public func ConnectPaint(f: @escaping (_ painter: QPainter, _ option: QStyleOptionGraphicsItem, _ widget: QWidget) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPaint", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainter, inp[1] as! QStyleOptionGraphicsItem, inp[2] as! QWidget) } as Any) }
    override public func DisconnectPaint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPaint"]) }
    override public func Paint(painter: QPainter_ITF? = nil, option: QStyleOptionGraphicsItem_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Paint", painter as Any, option as Any, widget as Any]) }
    override public func PaintDefault(painter: QPainter_ITF? = nil, option: QStyleOptionGraphicsItem_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "PaintDefault", painter as Any, option as Any, widget as Any]) }
    public func SetFont(font: QFont_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFont", font as Any]) }
    public func SetText(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetText", text as Any]) }
    public func Text() -> String { callLocalFunction(l: ["", Pointer(), ___className, "Text"]) as! String }
    public func ConnectDestroyQGraphicsSimpleTextItem(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsSimpleTextItem", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsSimpleTextItem() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsSimpleTextItem"]) }
    public func DestroyQGraphicsSimpleTextItem() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsSimpleTextItem"]) }
    public func DestroyQGraphicsSimpleTextItemDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsSimpleTextItemDefault"]) }
}

public func NewQGraphicsSimpleTextItemFromPointer(ptr: String) -> QGraphicsSimpleTextItem { let r = QGraphicsSimpleTextItem(); r.initFrom(p: ptr, n: "widgets.QGraphicsSimpleTextItem"); return r }
public func NewQGraphicsSimpleTextItem(parent: QGraphicsItem_ITF? = nil) -> QGraphicsSimpleTextItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsSimpleTextItem", "", parent as Any]) as! QGraphicsSimpleTextItem }
public func NewQGraphicsSimpleTextItem2(text: String, parent: QGraphicsItem_ITF? = nil) -> QGraphicsSimpleTextItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsSimpleTextItem2", "", text as Any, parent as Any]) as! QGraphicsSimpleTextItem }
public protocol QGraphicsTextItem_ITF: QGraphicsObject_ITF {
    func QGraphicsTextItem_PTR() -> QGraphicsTextItem
}

public class QGraphicsTextItem: QGraphicsObject, QGraphicsTextItem_ITF {
    public func QGraphicsTextItem_PTR() -> QGraphicsTextItem { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsTextItem_PTR"]) as! QGraphicsTextItem }
    public func AdjustSize() { _ = callLocalFunction(l: ["", Pointer(), ___className, "AdjustSize"]) }
    override public func ConnectBoundingRect(f: @escaping () -> QRectF) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectBoundingRect", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectBoundingRect() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectBoundingRect"]) }
    override public func BoundingRect() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "BoundingRect"]) as! QRectF }
    override public func BoundingRectDefault() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "BoundingRectDefault"]) as! QRectF }
    public func DefaultTextColor() -> QColor { callLocalFunction(l: ["", Pointer(), ___className, "DefaultTextColor"]) as! QColor }
    public func Document() -> QTextDocument { callLocalFunction(l: ["", Pointer(), ___className, "Document"]) as! QTextDocument }
    public func Font() -> QFont { callLocalFunction(l: ["", Pointer(), ___className, "Font"]) as! QFont }
    public func ConnectLinkActivated(f: @escaping (_ link: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectLinkActivated", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectLinkActivated() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectLinkActivated"]) }
    public func LinkActivated(link: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "LinkActivated", link as Any]) }
    public func ConnectLinkHovered(f: @escaping (_ link: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectLinkHovered", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectLinkHovered() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectLinkHovered"]) }
    public func LinkHovered(link: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "LinkHovered", link as Any]) }
    public func OpenExternalLinks() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "OpenExternalLinks"]) as! Bool }
    override public func ConnectPaint(f: @escaping (_ painter: QPainter, _ option: QStyleOptionGraphicsItem, _ widget: QWidget) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPaint", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainter, inp[1] as! QStyleOptionGraphicsItem, inp[2] as! QWidget) } as Any) }
    override public func DisconnectPaint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPaint"]) }
    override public func Paint(painter: QPainter_ITF? = nil, option: QStyleOptionGraphicsItem_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Paint", painter as Any, option as Any, widget as Any]) }
    override public func PaintDefault(painter: QPainter_ITF? = nil, option: QStyleOptionGraphicsItem_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "PaintDefault", painter as Any, option as Any, widget as Any]) }
    public func SetDefaultTextColor(col: QColor_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDefaultTextColor", col as Any]) }
    public func SetDocument(document: QTextDocument_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDocument", document as Any]) }
    public func SetFont(font: QFont_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFont", font as Any]) }
    public func SetHtml(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetHtml", text as Any]) }
    public func SetOpenExternalLinks(open: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOpenExternalLinks", open as Any]) }
    public func SetPlainText(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPlainText", text as Any]) }
    public func SetTabChangesFocus(b: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabChangesFocus", b as Any]) }
    public func SetTextCursor(cursor: QTextCursor_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTextCursor", cursor as Any]) }
    public func SetTextInteractionFlags(flags: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTextInteractionFlags", flags as Any]) }
    public func SetTextWidth(width: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTextWidth", width as Any]) }
    public func TabChangesFocus() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "TabChangesFocus"]) as! Bool }
    public func TextCursor() -> QTextCursor { callLocalFunction(l: ["", Pointer(), ___className, "TextCursor"]) as! QTextCursor }
    public func TextInteractionFlags() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TextInteractionFlags"]) as! Float) }
    public func TextWidth() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "TextWidth"]) as! Float }
    public func ToHtml() -> String { callLocalFunction(l: ["", Pointer(), ___className, "ToHtml"]) as! String }
    public func ToPlainText() -> String { callLocalFunction(l: ["", Pointer(), ___className, "ToPlainText"]) as! String }
    public func ConnectDestroyQGraphicsTextItem(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsTextItem", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsTextItem() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsTextItem"]) }
    public func DestroyQGraphicsTextItem() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsTextItem"]) }
    public func DestroyQGraphicsTextItemDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsTextItemDefault"]) }
}

public func NewQGraphicsTextItemFromPointer(ptr: String) -> QGraphicsTextItem { let r = QGraphicsTextItem(); r.initFrom(p: ptr, n: "widgets.QGraphicsTextItem"); return r }
public func NewQGraphicsTextItem(parent: QGraphicsItem_ITF? = nil) -> QGraphicsTextItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsTextItem", "", parent as Any]) as! QGraphicsTextItem }
public func NewQGraphicsTextItem2(text: String, parent: QGraphicsItem_ITF? = nil) -> QGraphicsTextItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsTextItem2", "", text as Any, parent as Any]) as! QGraphicsTextItem }
public protocol QGraphicsTransform_ITF: QObject_ITF {
    func QGraphicsTransform_PTR() -> QGraphicsTransform
}

public class QGraphicsTransform: QObject, QGraphicsTransform_ITF {
    public func QGraphicsTransform_PTR() -> QGraphicsTransform { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsTransform_PTR"]) as! QGraphicsTransform }
    public func ConnectApplyTo(f: @escaping (_ matrix: QMatrix4x4) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectApplyTo", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QMatrix4x4) } as Any) }
    public func DisconnectApplyTo() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectApplyTo"]) }
    public func ApplyTo(matrix: QMatrix4x4_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ApplyTo", matrix as Any]) }
    public func ConnectUpdate(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectUpdate", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectUpdate() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectUpdate"]) }
    public func Update() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Update"]) }
    public func UpdateDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UpdateDefault"]) }
    public func ConnectDestroyQGraphicsTransform(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsTransform", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsTransform() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsTransform"]) }
    public func DestroyQGraphicsTransform() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsTransform"]) }
    public func DestroyQGraphicsTransformDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsTransformDefault"]) }
    override public func ChildEventDefault(event: QChildEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ChildEventDefault", event as Any]) }
    override public func ConnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ConnectNotifyDefault", sign as Any]) }
    override public func CustomEventDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CustomEventDefault", event as Any]) }
    override public func DeleteLaterDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DeleteLaterDefault"]) }
    override public func DisconnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DisconnectNotifyDefault", sign as Any]) }
    override public func EventDefault(e: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventDefault", e as Any]) as! Bool }
    override public func EventFilterDefault(watched: QObject_ITF? = nil, event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventFilterDefault", watched as Any, event as Any]) as! Bool }
    override public func MetaObjectDefault() -> QMetaObject { callLocalFunction(l: ["", Pointer(), ___className, "MetaObjectDefault"]) as! QMetaObject }
    override public func TimerEventDefault(event: QTimerEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TimerEventDefault", event as Any]) }
}

public func NewQGraphicsTransformFromPointer(ptr: String) -> QGraphicsTransform { let r = QGraphicsTransform(); r.initFrom(p: ptr, n: "widgets.QGraphicsTransform"); return r }
public func NewQGraphicsTransform(parent: QObject_ITF? = nil) -> QGraphicsTransform { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsTransform", "", parent as Any]) as! QGraphicsTransform }
public protocol QGraphicsView_ITF: QAbstractScrollArea_ITF {
    func QGraphicsView_PTR() -> QGraphicsView
}

public class QGraphicsView: QAbstractScrollArea, QGraphicsView_ITF {
    public func QGraphicsView_PTR() -> QGraphicsView { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsView_PTR"]) as! QGraphicsView }
    public func Alignment() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Alignment"]) as! Float) }
    public func BackgroundBrush() -> QBrush { callLocalFunction(l: ["", Pointer(), ___className, "BackgroundBrush"]) as! QBrush }
    public func CacheMode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CacheMode"]) as! Float) }
    public func CenterOn(pos: QPointF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CenterOn", pos as Any]) }
    public func CenterOn2(x: Float, y: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CenterOn2", x as Any, y as Any]) }
    public func CenterOn3(item: QGraphicsItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CenterOn3", item as Any]) }
    public func DragMode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "DragMode"]) as! Float) }
    public func ConnectDrawBackground(f: @escaping (_ painter: QPainter, _ rect: QRectF) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDrawBackground", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainter, inp[1] as! QRectF) } as Any) }
    public func DisconnectDrawBackground() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDrawBackground"]) }
    public func DrawBackground(painter: QPainter_ITF? = nil, rect: QRectF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawBackground", painter as Any, rect as Any]) }
    public func DrawBackgroundDefault(painter: QPainter_ITF? = nil, rect: QRectF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawBackgroundDefault", painter as Any, rect as Any]) }
    public func ConnectDrawForeground(f: @escaping (_ painter: QPainter, _ rect: QRectF) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDrawForeground", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainter, inp[1] as! QRectF) } as Any) }
    public func DisconnectDrawForeground() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDrawForeground"]) }
    public func DrawForeground(painter: QPainter_ITF? = nil, rect: QRectF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawForeground", painter as Any, rect as Any]) }
    public func DrawForegroundDefault(painter: QPainter_ITF? = nil, rect: QRectF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawForegroundDefault", painter as Any, rect as Any]) }
    public func EnsureVisible(rect: QRectF_ITF? = nil, xmargi: Int, ymargi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "EnsureVisible", rect as Any, xmargi as Any, ymargi as Any]) }
    public func EnsureVisible2(x: Float, y: Float, w: Float, h: Float, xmargi: Int, ymargi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "EnsureVisible2", x as Any, y as Any, w as Any, h as Any, xmargi as Any, ymargi as Any]) }
    public func EnsureVisible3(item: QGraphicsItem_ITF? = nil, xmargi: Int, ymargi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "EnsureVisible3", item as Any, xmargi as Any, ymargi as Any]) }
    public func FitInView(rect: QRectF_ITF? = nil, aspectRatioMode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "FitInView", rect as Any, aspectRatioMode as Any]) }
    public func FitInView2(x: Float, y: Float, w: Float, h: Float, aspectRatioMode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "FitInView2", x as Any, y as Any, w as Any, h as Any, aspectRatioMode as Any]) }
    public func FitInView3(item: QGraphicsItem_ITF? = nil, aspectRatioMode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "FitInView3", item as Any, aspectRatioMode as Any]) }
    public func ForegroundBrush() -> QBrush { callLocalFunction(l: ["", Pointer(), ___className, "ForegroundBrush"]) as! QBrush }
    public func ConnectInvalidateScene(f: @escaping (_ rect: QRectF, _ layers: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectInvalidateScene", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QRectF, Int(inp[1] as! Float)) } as Any) }
    public func DisconnectInvalidateScene() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectInvalidateScene"]) }
    public func InvalidateScene(rect: QRectF_ITF? = nil, layers: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InvalidateScene", rect as Any, layers as Any]) }
    public func InvalidateSceneDefault(rect: QRectF_ITF? = nil, layers: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InvalidateSceneDefault", rect as Any, layers as Any]) }
    public func IsInteractive() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsInteractive"]) as! Bool }
    public func IsTransformed() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsTransformed"]) as! Bool }
    public func ItemAt(pos: QPoint_ITF? = nil) -> QGraphicsItem { callLocalFunction(l: ["", Pointer(), ___className, "ItemAt", pos as Any]) as! QGraphicsItem }
    public func ItemAt2(x: Int, y: Int) -> QGraphicsItem { callLocalFunction(l: ["", Pointer(), ___className, "ItemAt2", x as Any, y as Any]) as! QGraphicsItem }
    public func Items() -> [QGraphicsItem] { callLocalFunction(l: ["", Pointer(), ___className, "Items"]) as! [QGraphicsItem] }
    public func Items2(pos: QPoint_ITF? = nil) -> [QGraphicsItem] { callLocalFunction(l: ["", Pointer(), ___className, "Items2", pos as Any]) as! [QGraphicsItem] }
    public func Items3(x: Int, y: Int) -> [QGraphicsItem] { callLocalFunction(l: ["", Pointer(), ___className, "Items3", x as Any, y as Any]) as! [QGraphicsItem] }
    public func Items4(rect: QRect_ITF? = nil, mode: Int) -> [QGraphicsItem] { callLocalFunction(l: ["", Pointer(), ___className, "Items4", rect as Any, mode as Any]) as! [QGraphicsItem] }
    public func Items5(x: Int, y: Int, w: Int, h: Int, mode: Int) -> [QGraphicsItem] { callLocalFunction(l: ["", Pointer(), ___className, "Items5", x as Any, y as Any, w as Any, h as Any, mode as Any]) as! [QGraphicsItem] }
    public func Items6(polygon: QPolygon_ITF? = nil, mode: Int) -> [QGraphicsItem] { callLocalFunction(l: ["", Pointer(), ___className, "Items6", polygon as Any, mode as Any]) as! [QGraphicsItem] }
    public func Items7(path: QPainterPath_ITF? = nil, mode: Int) -> [QGraphicsItem] { callLocalFunction(l: ["", Pointer(), ___className, "Items7", path as Any, mode as Any]) as! [QGraphicsItem] }
    public func MapFromScene(point: QPointF_ITF? = nil) -> QPoint { callLocalFunction(l: ["", Pointer(), ___className, "MapFromScene", point as Any]) as! QPoint }
    public func MapFromScene2(rect: QRectF_ITF? = nil) -> QPolygon { callLocalFunction(l: ["", Pointer(), ___className, "MapFromScene2", rect as Any]) as! QPolygon }
    public func MapFromScene3(polygon: QPolygonF_ITF? = nil) -> QPolygon { callLocalFunction(l: ["", Pointer(), ___className, "MapFromScene3", polygon as Any]) as! QPolygon }
    public func MapFromScene4(path: QPainterPath_ITF? = nil) -> QPainterPath { callLocalFunction(l: ["", Pointer(), ___className, "MapFromScene4", path as Any]) as! QPainterPath }
    public func MapFromScene5(x: Float, y: Float) -> QPoint { callLocalFunction(l: ["", Pointer(), ___className, "MapFromScene5", x as Any, y as Any]) as! QPoint }
    public func MapFromScene6(x: Float, y: Float, w: Float, h: Float) -> QPolygon { callLocalFunction(l: ["", Pointer(), ___className, "MapFromScene6", x as Any, y as Any, w as Any, h as Any]) as! QPolygon }
    public func MapToScene(point: QPoint_ITF? = nil) -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "MapToScene", point as Any]) as! QPointF }
    public func MapToScene2(rect: QRect_ITF? = nil) -> QPolygonF { callLocalFunction(l: ["", Pointer(), ___className, "MapToScene2", rect as Any]) as! QPolygonF }
    public func MapToScene3(polygon: QPolygon_ITF? = nil) -> QPolygonF { callLocalFunction(l: ["", Pointer(), ___className, "MapToScene3", polygon as Any]) as! QPolygonF }
    public func MapToScene4(path: QPainterPath_ITF? = nil) -> QPainterPath { callLocalFunction(l: ["", Pointer(), ___className, "MapToScene4", path as Any]) as! QPainterPath }
    public func MapToScene5(x: Int, y: Int) -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "MapToScene5", x as Any, y as Any]) as! QPointF }
    public func MapToScene6(x: Int, y: Int, w: Int, h: Int) -> QPolygonF { callLocalFunction(l: ["", Pointer(), ___className, "MapToScene6", x as Any, y as Any, w as Any, h as Any]) as! QPolygonF }
    public func Matrix() -> QMatrix { callLocalFunction(l: ["", Pointer(), ___className, "Matrix"]) as! QMatrix }
    public func OptimizationFlags() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "OptimizationFlags"]) as! Float) }
    public func Render_QFrame(painter: QPainter_ITF? = nil, target: QRectF_ITF? = nil, source: QRect_ITF? = nil, aspectRatioMode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Render", painter as Any, target as Any, source as Any, aspectRatioMode as Any]) }
    public func RenderHints() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "RenderHints"]) as! Float) }
    public func ResetCachedContent() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResetCachedContent"]) }
    public func ResetMatrix() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResetMatrix"]) }
    public func ResetTransform() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResetTransform"]) }
    public func ResizeAnchor() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ResizeAnchor"]) as! Float) }
    public func Rotate(angle: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Rotate", angle as Any]) }
    public func ConnectRubberBandChanged(f: @escaping (_ rubberBandRect: QRect, _ fromScenePoint: QPointF, _ toScenePoint: QPointF) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRubberBandChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QRect, inp[1] as! QPointF, inp[2] as! QPointF) } as Any) }
    public func DisconnectRubberBandChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRubberBandChanged"]) }
    public func RubberBandChanged(rubberBandRect: QRect_ITF? = nil, fromScenePoint: QPointF_ITF? = nil, toScenePoint: QPointF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RubberBandChanged", rubberBandRect as Any, fromScenePoint as Any, toScenePoint as Any]) }
    public func RubberBandRect() -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "RubberBandRect"]) as! QRect }
    public func RubberBandSelectionMode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "RubberBandSelectionMode"]) as! Float) }
    public func Scale(sx: Float, sy: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Scale", sx as Any, sy as Any]) }
    public func Scene() -> QGraphicsScene { callLocalFunction(l: ["", Pointer(), ___className, "Scene"]) as! QGraphicsScene }
    public func SceneRect() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "SceneRect"]) as! QRectF }
    public func SetAlignment(alignment: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAlignment", alignment as Any]) }
    public func SetBackgroundBrush(brush: QBrush_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetBackgroundBrush", brush as Any]) }
    public func SetCacheMode(mode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCacheMode", mode as Any]) }
    public func SetDragMode(mode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDragMode", mode as Any]) }
    public func SetForegroundBrush(brush: QBrush_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetForegroundBrush", brush as Any]) }
    public func SetInteractive(allowed: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetInteractive", allowed as Any]) }
    public func SetMatrix(matrix: QMatrix_ITF? = nil, combine: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMatrix", matrix as Any, combine as Any]) }
    public func SetOptimizationFlag(flag: Int, enabled: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOptimizationFlag", flag as Any, enabled as Any]) }
    public func SetOptimizationFlags(flags: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOptimizationFlags", flags as Any]) }
    public func SetRenderHint(hint: Int, enabled: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRenderHint", hint as Any, enabled as Any]) }
    public func SetRenderHints(hints: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRenderHints", hints as Any]) }
    public func SetResizeAnchor(anchor: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetResizeAnchor", anchor as Any]) }
    public func SetRubberBandSelectionMode(mode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRubberBandSelectionMode", mode as Any]) }
    public func SetScene(scene: QGraphicsScene_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetScene", scene as Any]) }
    public func SetSceneRect(rect: QRectF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSceneRect", rect as Any]) }
    public func SetSceneRect2(x: Float, y: Float, w: Float, h: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSceneRect2", x as Any, y as Any, w as Any, h as Any]) }
    public func SetTransform(matrix: QTransform_ITF? = nil, combine: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTransform", matrix as Any, combine as Any]) }
    public func SetTransformationAnchor(anchor: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTransformationAnchor", anchor as Any]) }
    public func SetViewportUpdateMode(mode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetViewportUpdateMode", mode as Any]) }
    override public func ConnectSetupViewport(f: @escaping (_ widget: QWidget) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetupViewport", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QWidget) } as Any) }
    override public func DisconnectSetupViewport() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetupViewport"]) }
    override public func SetupViewport(viewport: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetupViewport", viewport as Any]) }
    public func SetupViewportDefault(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetupViewportDefault", widget as Any]) }
    public func Shear(sh: Float, sv: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Shear", sh as Any, sv as Any]) }
    public func Transform() -> QTransform { callLocalFunction(l: ["", Pointer(), ___className, "Transform"]) as! QTransform }
    public func TransformationAnchor() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TransformationAnchor"]) as! Float) }
    public func Translate(dx: Float, dy: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Translate", dx as Any, dy as Any]) }
    public func ConnectUpdateScene(f: @escaping (_ rects: [QRectF]) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectUpdateScene", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! [QRectF]) } as Any) }
    public func DisconnectUpdateScene() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectUpdateScene"]) }
    public func UpdateScene(rects: [QRectF]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "UpdateScene", rects as Any]) }
    public func UpdateSceneDefault(rects: [QRectF]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "UpdateSceneDefault", rects as Any]) }
    public func ConnectUpdateSceneRect(f: @escaping (_ rect: QRectF) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectUpdateSceneRect", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QRectF) } as Any) }
    public func DisconnectUpdateSceneRect() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectUpdateSceneRect"]) }
    public func UpdateSceneRect(rect: QRectF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "UpdateSceneRect", rect as Any]) }
    public func UpdateSceneRectDefault(rect: QRectF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "UpdateSceneRectDefault", rect as Any]) }
    public func ViewportTransform() -> QTransform { callLocalFunction(l: ["", Pointer(), ___className, "ViewportTransform"]) as! QTransform }
    public func ViewportUpdateMode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ViewportUpdateMode"]) as! Float) }
    public func ConnectDestroyQGraphicsView(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsView", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsView() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsView"]) }
    public func DestroyQGraphicsView() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsView"]) }
    public func DestroyQGraphicsViewDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsViewDefault"]) }
}

public func NewQGraphicsViewFromPointer(ptr: String) -> QGraphicsView { let r = QGraphicsView(); r.initFrom(p: ptr, n: "widgets.QGraphicsView"); return r }
public func NewQGraphicsView(parent: QWidget_ITF? = nil) -> QGraphicsView { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsView", "", parent as Any]) as! QGraphicsView }
public func NewQGraphicsView2(scene: QGraphicsScene_ITF? = nil, parent: QWidget_ITF? = nil) -> QGraphicsView { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsView2", "", scene as Any, parent as Any]) as! QGraphicsView }
public protocol QGraphicsWidget_ITF: QGraphicsLayoutItem_ITF {
    func QGraphicsWidget_PTR() -> QGraphicsWidget
    func QGraphicsObject_PTR() -> QGraphicsObject
}

public class QGraphicsWidget: QGraphicsLayoutItem, QGraphicsWidget_ITF {
    public func QGraphicsObject_PTR() -> QGraphicsObject { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsObject_PTR"]) as! QGraphicsObject }
    public func QGraphicsWidget_PTR() -> QGraphicsWidget { callLocalFunction(l: ["", Pointer(), ___className, "QGraphicsWidget_PTR"]) as! QGraphicsWidget }
    public func Actions() -> [QAction] { callLocalFunction(l: ["", Pointer(), ___className, "Actions"]) as! [QAction] }
    public func AddAction(action: QAction_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddAction", action as Any]) }
    public func AddActions(actions: [QAction]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddActions", actions as Any]) }
    public func AdjustSize() { _ = callLocalFunction(l: ["", Pointer(), ___className, "AdjustSize"]) }
    public func AutoFillBackground() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "AutoFillBackground"]) as! Bool }
    public func ConnectBoundingRect(f: @escaping () -> QRectF) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectBoundingRect", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectBoundingRect() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectBoundingRect"]) }
    public func BoundingRect() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "BoundingRect"]) as! QRectF }
    public func BoundingRectDefault() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "BoundingRectDefault"]) as! QRectF }
    public func ConnectChangeEvent(f: @escaping (_ event: QEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectChangeEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QEvent) } as Any) }
    public func DisconnectChangeEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectChangeEvent"]) }
    public func ChangeEvent(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ChangeEvent", event as Any]) }
    public func ChangeEventDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ChangeEventDefault", event as Any]) }
    public func ConnectClose(f: @escaping () -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectClose", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectClose() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectClose"]) }
    public func Close() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "Close"]) as! Bool }
    public func CloseDefault() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "CloseDefault"]) as! Bool }
    public func ConnectCloseEvent(f: @escaping (_ event: QCloseEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCloseEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QCloseEvent) } as Any) }
    public func DisconnectCloseEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCloseEvent"]) }
    public func CloseEvent(event: QCloseEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CloseEvent", event as Any]) }
    public func CloseEventDefault(event: QCloseEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CloseEventDefault", event as Any]) }
    public func ConnectFocusNextPrevChild(f: @escaping (_ next: Bool) -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectFocusNextPrevChild", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectFocusNextPrevChild() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectFocusNextPrevChild"]) }
    public func FocusNextPrevChild(next: Bool) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "FocusNextPrevChild", next as Any]) as! Bool }
    public func FocusNextPrevChildDefault(next: Bool) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "FocusNextPrevChildDefault", next as Any]) as! Bool }
    public func FocusPolicy() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "FocusPolicy"]) as! Float) }
    public func FocusWidget() -> QGraphicsWidget { callLocalFunction(l: ["", Pointer(), ___className, "FocusWidget"]) as! QGraphicsWidget }
    public func Font() -> QFont { callLocalFunction(l: ["", Pointer(), ___className, "Font"]) as! QFont }
    public func ConnectGeometryChanged(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectGeometryChanged", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectGeometryChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectGeometryChanged"]) }
    public func GeometryChanged() { _ = callLocalFunction(l: ["", Pointer(), ___className, "GeometryChanged"]) }
    public func GetWindowFrameMargins(left: Float, top: Float, right: Float, bottom: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "GetWindowFrameMargins", left as Any, top as Any, right as Any, bottom as Any]) }
    public func ConnectGrabKeyboardEvent(f: @escaping (_ event: QEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectGrabKeyboardEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QEvent) } as Any) }
    public func DisconnectGrabKeyboardEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectGrabKeyboardEvent"]) }
    public func GrabKeyboardEvent(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "GrabKeyboardEvent", event as Any]) }
    public func GrabKeyboardEventDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "GrabKeyboardEventDefault", event as Any]) }
    public func ConnectGrabMouseEvent(f: @escaping (_ event: QEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectGrabMouseEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QEvent) } as Any) }
    public func DisconnectGrabMouseEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectGrabMouseEvent"]) }
    public func GrabMouseEvent(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "GrabMouseEvent", event as Any]) }
    public func GrabMouseEventDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "GrabMouseEventDefault", event as Any]) }
    public func GrabShortcut(sequence: QKeySequence_ITF? = nil, context: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "GrabShortcut", sequence as Any, context as Any]) as! Float) }
    public func ConnectHideEvent(f: @escaping (_ event: QHideEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHideEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QHideEvent) } as Any) }
    public func DisconnectHideEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHideEvent"]) }
    public func HideEvent(event: QHideEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "HideEvent", event as Any]) }
    public func HideEventDefault(event: QHideEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "HideEventDefault", event as Any]) }
    public func ConnectInitStyleOption(f: @escaping (_ option: QStyleOption) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectInitStyleOption", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QStyleOption) } as Any) }
    public func DisconnectInitStyleOption() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectInitStyleOption"]) }
    public func InitStyleOption(option: QStyleOption_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InitStyleOption", option as Any]) }
    public func InitStyleOptionDefault(option: QStyleOption_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InitStyleOptionDefault", option as Any]) }
    public func InsertAction(before: QAction_ITF? = nil, action: QAction_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertAction", before as Any, action as Any]) }
    public func InsertActions(before: QAction_ITF? = nil, actions: [QAction]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertActions", before as Any, actions as Any]) }
    public func IsActiveWindow() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsActiveWindow"]) as! Bool }
    public func Layout() -> QGraphicsLayout { callLocalFunction(l: ["", Pointer(), ___className, "Layout"]) as! QGraphicsLayout }
    public func ConnectLayoutChanged(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectLayoutChanged", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectLayoutChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectLayoutChanged"]) }
    public func LayoutChanged() { _ = callLocalFunction(l: ["", Pointer(), ___className, "LayoutChanged"]) }
    public func LayoutDirection() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "LayoutDirection"]) as! Float) }
    public func ConnectMoveEvent(f: @escaping (_ event: QGraphicsSceneMoveEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMoveEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QGraphicsSceneMoveEvent) } as Any) }
    public func DisconnectMoveEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMoveEvent"]) }
    public func MoveEvent(event: QGraphicsSceneMoveEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MoveEvent", event as Any]) }
    public func MoveEventDefault(event: QGraphicsSceneMoveEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MoveEventDefault", event as Any]) }
    public func ConnectPaint(f: @escaping (_ painter: QPainter, _ option: QStyleOptionGraphicsItem, _ widget: QWidget) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPaint", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainter, inp[1] as! QStyleOptionGraphicsItem, inp[2] as! QWidget) } as Any) }
    public func DisconnectPaint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPaint"]) }
    public func Paint(painter: QPainter_ITF? = nil, option: QStyleOptionGraphicsItem_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Paint", painter as Any, option as Any, widget as Any]) }
    public func PaintDefault(painter: QPainter_ITF? = nil, option: QStyleOptionGraphicsItem_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "PaintDefault", painter as Any, option as Any, widget as Any]) }
    public func ConnectPaintWindowFrame(f: @escaping (_ painter: QPainter, _ option: QStyleOptionGraphicsItem, _ widget: QWidget) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPaintWindowFrame", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainter, inp[1] as! QStyleOptionGraphicsItem, inp[2] as! QWidget) } as Any) }
    public func DisconnectPaintWindowFrame() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPaintWindowFrame"]) }
    public func PaintWindowFrame(painter: QPainter_ITF? = nil, option: QStyleOptionGraphicsItem_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "PaintWindowFrame", painter as Any, option as Any, widget as Any]) }
    public func PaintWindowFrameDefault(painter: QPainter_ITF? = nil, option: QStyleOptionGraphicsItem_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "PaintWindowFrameDefault", painter as Any, option as Any, widget as Any]) }
    public func Palette() -> QPalette { callLocalFunction(l: ["", Pointer(), ___className, "Palette"]) as! QPalette }
    public func ConnectPolishEvent(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPolishEvent", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectPolishEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPolishEvent"]) }
    public func PolishEvent() { _ = callLocalFunction(l: ["", Pointer(), ___className, "PolishEvent"]) }
    public func PolishEventDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "PolishEventDefault"]) }
    public func Rect() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "Rect"]) as! QRectF }
    public func ReleaseShortcut(id: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ReleaseShortcut", id as Any]) }
    public func RemoveAction(action: QAction_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveAction", action as Any]) }
    public func Resize(size: QSizeF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Resize", size as Any]) }
    public func Resize2(w: Float, h: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Resize2", w as Any, h as Any]) }
    public func ConnectResizeEvent(f: @escaping (_ event: QGraphicsSceneResizeEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectResizeEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QGraphicsSceneResizeEvent) } as Any) }
    public func DisconnectResizeEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectResizeEvent"]) }
    public func ResizeEvent(event: QGraphicsSceneResizeEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResizeEvent", event as Any]) }
    public func ResizeEventDefault(event: QGraphicsSceneResizeEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResizeEventDefault", event as Any]) }
    public func SetAttribute(attribute: Int, on: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAttribute", attribute as Any, on as Any]) }
    public func SetAutoFillBackground(enabled: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAutoFillBackground", enabled as Any]) }
    public func SetContentsMargins(left: Float, top: Float, right: Float, bottom: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetContentsMargins", left as Any, top as Any, right as Any, bottom as Any]) }
    public func SetFocusPolicy(policy: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFocusPolicy", policy as Any]) }
    public func SetFont(font: QFont_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFont", font as Any]) }
    public func SetGeometry2(x: Float, y: Float, w: Float, h: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetGeometry2", x as Any, y as Any, w as Any, h as Any]) }
    public func SetLayout(layout: QGraphicsLayout_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetLayout", layout as Any]) }
    public func SetLayoutDirection(direction: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetLayoutDirection", direction as Any]) }
    public func SetPalette(palette: QPalette_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPalette", palette as Any]) }
    public func SetShortcutAutoRepeat(id: Int, enabled: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetShortcutAutoRepeat", id as Any, enabled as Any]) }
    public func SetShortcutEnabled(id: Int, enabled: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetShortcutEnabled", id as Any, enabled as Any]) }
    public func SetStyle(style: QStyle_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStyle", style as Any]) }
    public func SetTabOrder(first: QGraphicsWidget_ITF? = nil, second: QGraphicsWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabOrder", first as Any, second as Any]) }
    public func SetWindowFlags(wFlags: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWindowFlags", wFlags as Any]) }
    public func SetWindowFrameMargins(left: Float, top: Float, right: Float, bottom: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWindowFrameMargins", left as Any, top as Any, right as Any, bottom as Any]) }
    public func SetWindowTitle(title: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWindowTitle", title as Any]) }
    public func ConnectShowEvent(f: @escaping (_ event: QShowEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectShowEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QShowEvent) } as Any) }
    public func DisconnectShowEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectShowEvent"]) }
    public func ShowEvent(event: QShowEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowEvent", event as Any]) }
    public func ShowEventDefault(event: QShowEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowEventDefault", event as Any]) }
    public func Size() -> QSizeF { callLocalFunction(l: ["", Pointer(), ___className, "Size"]) as! QSizeF }
    override public func ConnectSizeHint(f: @escaping (_ which: Int, _ constraint: QSizeF) -> QSizeF) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSizeHint", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! QSizeF) } as Any) }
    override public func DisconnectSizeHint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSizeHint"]) }
    override public func SizeHint(which: Int, constraint: QSizeF_ITF? = nil) -> QSizeF { callLocalFunction(l: ["", Pointer(), ___className, "SizeHint", which as Any, constraint as Any]) as! QSizeF }
    public func SizeHintDefault(which: Int, constraint: QSizeF_ITF? = nil) -> QSizeF { callLocalFunction(l: ["", Pointer(), ___className, "SizeHintDefault", which as Any, constraint as Any]) as! QSizeF }
    public func Style() -> QStyle { callLocalFunction(l: ["", Pointer(), ___className, "Style"]) as! QStyle }
    public func TestAttribute(attribute: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "TestAttribute", attribute as Any]) as! Bool }
    public func ConnectUngrabKeyboardEvent(f: @escaping (_ event: QEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectUngrabKeyboardEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QEvent) } as Any) }
    public func DisconnectUngrabKeyboardEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectUngrabKeyboardEvent"]) }
    public func UngrabKeyboardEvent(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "UngrabKeyboardEvent", event as Any]) }
    public func UngrabKeyboardEventDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "UngrabKeyboardEventDefault", event as Any]) }
    public func ConnectUngrabMouseEvent(f: @escaping (_ event: QEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectUngrabMouseEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QEvent) } as Any) }
    public func DisconnectUngrabMouseEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectUngrabMouseEvent"]) }
    public func UngrabMouseEvent(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "UngrabMouseEvent", event as Any]) }
    public func UngrabMouseEventDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "UngrabMouseEventDefault", event as Any]) }
    public func UnsetLayoutDirection() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UnsetLayoutDirection"]) }
    public func UnsetWindowFrameMargins() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UnsetWindowFrameMargins"]) }
    public func WindowFlags() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "WindowFlags"]) as! Float) }
    public func ConnectWindowFrameEvent(f: @escaping (_ event: QEvent) -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectWindowFrameEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QEvent) } as Any) }
    public func DisconnectWindowFrameEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectWindowFrameEvent"]) }
    public func WindowFrameEvent(event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "WindowFrameEvent", event as Any]) as! Bool }
    public func WindowFrameEventDefault(event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "WindowFrameEventDefault", event as Any]) as! Bool }
    public func WindowFrameGeometry() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "WindowFrameGeometry"]) as! QRectF }
    public func WindowFrameRect() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "WindowFrameRect"]) as! QRectF }
    public func ConnectWindowFrameSectionAt(f: @escaping (_ pos: QPointF) -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectWindowFrameSectionAt", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPointF) } as Any) }
    public func DisconnectWindowFrameSectionAt() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectWindowFrameSectionAt"]) }
    public func WindowFrameSectionAt(pos: QPointF_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "WindowFrameSectionAt", pos as Any]) as! Float) }
    public func WindowFrameSectionAtDefault(pos: QPointF_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "WindowFrameSectionAtDefault", pos as Any]) as! Float) }
    public func WindowTitle() -> String { callLocalFunction(l: ["", Pointer(), ___className, "WindowTitle"]) as! String }
    public func WindowType() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "WindowType"]) as! Float) }
    public func ConnectDestroyQGraphicsWidget(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGraphicsWidget", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGraphicsWidget() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGraphicsWidget"]) }
    public func DestroyQGraphicsWidget() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsWidget"]) }
    public func DestroyQGraphicsWidgetDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGraphicsWidgetDefault"]) }
    override public func MinimumSize() -> QSizeF { callLocalFunction(l: ["", Pointer(), ___className, "MinimumSize"]) as! QSizeF }
    public func SetMinimumSize_QGraphicsItem(minimumSize: QSizeF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMinimumSize", minimumSize as Any]) }
    override public func PreferredSize() -> QSizeF { callLocalFunction(l: ["", Pointer(), ___className, "PreferredSize"]) as! QSizeF }
    public func SetPreferredSize_QGraphicsItem(preferredSize: QSizeF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPreferredSize", preferredSize as Any]) }
    override public func MaximumSize() -> QSizeF { callLocalFunction(l: ["", Pointer(), ___className, "MaximumSize"]) as! QSizeF }
    public func SetMaximumSize_QGraphicsItem(maximumSize: QSizeF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMaximumSize", maximumSize as Any]) }
    override public func SizePolicy() -> QSizePolicy { callLocalFunction(l: ["", Pointer(), ___className, "SizePolicy"]) as! QSizePolicy }
    public func SetSizePolicy_QGraphicsItem(sizePolicy: QSizePolicy_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSizePolicy", sizePolicy as Any]) }
    override public func Geometry() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "Geometry"]) as! QRectF }
}

public func NewQGraphicsWidgetFromPointer(ptr: String) -> QGraphicsWidget { let r = QGraphicsWidget(); r.initFrom(p: ptr, n: "widgets.QGraphicsWidget"); return r }
public func NewQGraphicsWidget(parent: QGraphicsItem_ITF? = nil, wFlags: Int) -> QGraphicsWidget { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGraphicsWidget", "", parent as Any, wFlags as Any]) as! QGraphicsWidget }
public func QGraphicsWidget_SetTabOrder(first: QGraphicsWidget_ITF? = nil, second: QGraphicsWidget_ITF? = nil) { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QGraphicsWidget_SetTabOrder", "", first as Any, second as Any]) }
public protocol QGridLayout_ITF: QLayout_ITF {
    func QGridLayout_PTR() -> QGridLayout
}

public class QGridLayout: QLayout, QGridLayout_ITF {
    public func QGridLayout_PTR() -> QGridLayout { callLocalFunction(l: ["", Pointer(), ___className, "QGridLayout_PTR"]) as! QGridLayout }
    public func AddItem_QGridLayout(item: QLayoutItem_ITF? = nil, row: Int, column: Int, rowSpan: Int, columnSpan: Int, alignment: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddItem", item as Any, row as Any, column as Any, rowSpan as Any, columnSpan as Any, alignment as Any]) }
    public func ConnectAddItem2(f: @escaping (_ item: QLayoutItem) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectAddItem2", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QLayoutItem) } as Any) }
    public func DisconnectAddItem2() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectAddItem2"]) }
    public func AddItem2(item: QLayoutItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddItem2", item as Any]) }
    public func AddItem2Default(item: QLayoutItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddItem2Default", item as Any]) }
    public func AddLayout(layout: QLayout_ITF? = nil, row: Int, column: Int, alignment: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddLayout", layout as Any, row as Any, column as Any, alignment as Any]) }
    public func AddLayout2(layout: QLayout_ITF? = nil, row: Int, column: Int, rowSpan: Int, columnSpan: Int, alignment: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddLayout2", layout as Any, row as Any, column as Any, rowSpan as Any, columnSpan as Any, alignment as Any]) }
    public func AddWidget2(widget: QWidget_ITF? = nil, row: Int, column: Int, alignment: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddWidget2", widget as Any, row as Any, column as Any, alignment as Any]) }
    public func AddWidget3(widget: QWidget_ITF? = nil, fromRow: Int, fromColumn: Int, rowSpan: Int, columnSpan: Int, alignment: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddWidget3", widget as Any, fromRow as Any, fromColumn as Any, rowSpan as Any, columnSpan as Any, alignment as Any]) }
    public func CellRect(row: Int, column: Int) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "CellRect", row as Any, column as Any]) as! QRect }
    public func ColumnCount() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ColumnCount"]) as! Float) }
    public func ColumnMinimumWidth(column: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ColumnMinimumWidth", column as Any]) as! Float) }
    public func ColumnStretch(column: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ColumnStretch", column as Any]) as! Float) }
    override public func ConnectCount(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCount", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectCount() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCount"]) }
    override public func Count() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Count"]) as! Float) }
    public func CountDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CountDefault"]) as! Float) }
    public func GetItemPosition(index: Int, row: Int, column: Int, rowSpan: Int, columnSpan: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "GetItemPosition", index as Any, row as Any, column as Any, rowSpan as Any, columnSpan as Any]) }
    public func HorizontalSpacing() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "HorizontalSpacing"]) as! Float) }
    override public func ConnectItemAt(f: @escaping (_ index: Int) -> QLayoutItem) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectItemAt", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    override public func DisconnectItemAt() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectItemAt"]) }
    override public func ItemAt(index: Int) -> QLayoutItem { callLocalFunction(l: ["", Pointer(), ___className, "ItemAt", index as Any]) as! QLayoutItem }
    public func ItemAtDefault(index: Int) -> QLayoutItem { callLocalFunction(l: ["", Pointer(), ___className, "ItemAtDefault", index as Any]) as! QLayoutItem }
    public func ItemAtPosition(row: Int, column: Int) -> QLayoutItem { callLocalFunction(l: ["", Pointer(), ___className, "ItemAtPosition", row as Any, column as Any]) as! QLayoutItem }
    public func OriginCorner() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "OriginCorner"]) as! Float) }
    public func RowCount() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "RowCount"]) as! Float) }
    public func RowMinimumHeight(row: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "RowMinimumHeight", row as Any]) as! Float) }
    public func RowStretch(row: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "RowStretch", row as Any]) as! Float) }
    public func SetColumnMinimumWidth(column: Int, minSize: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetColumnMinimumWidth", column as Any, minSize as Any]) }
    public func SetColumnStretch(column: Int, stretch: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetColumnStretch", column as Any, stretch as Any]) }
    public func SetHorizontalSpacing(spacing: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetHorizontalSpacing", spacing as Any]) }
    public func SetOriginCorner(corner: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOriginCorner", corner as Any]) }
    public func SetRowMinimumHeight(row: Int, minSize: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRowMinimumHeight", row as Any, minSize as Any]) }
    public func SetRowStretch(row: Int, stretch: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRowStretch", row as Any, stretch as Any]) }
    public func SetVerticalSpacing(spacing: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetVerticalSpacing", spacing as Any]) }
    override public func ConnectSizeHint(f: @escaping () -> QSize) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSizeHint", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectSizeHint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSizeHint"]) }
    override public func SizeHint() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "SizeHint"]) as! QSize }
    override public func SizeHintDefault() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "SizeHintDefault"]) as! QSize }
    override public func ConnectTakeAt(f: @escaping (_ index: Int) -> QLayoutItem) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTakeAt", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    override public func DisconnectTakeAt() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTakeAt"]) }
    override public func TakeAt(index: Int) -> QLayoutItem { callLocalFunction(l: ["", Pointer(), ___className, "TakeAt", index as Any]) as! QLayoutItem }
    public func TakeAtDefault(index: Int) -> QLayoutItem { callLocalFunction(l: ["", Pointer(), ___className, "TakeAtDefault", index as Any]) as! QLayoutItem }
    public func VerticalSpacing() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "VerticalSpacing"]) as! Float) }
    public func ConnectDestroyQGridLayout(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGridLayout", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGridLayout() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGridLayout"]) }
    public func DestroyQGridLayout() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGridLayout"]) }
    public func DestroyQGridLayoutDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGridLayoutDefault"]) }
}

public func NewQGridLayoutFromPointer(ptr: String) -> QGridLayout { let r = QGridLayout(); r.initFrom(p: ptr, n: "widgets.QGridLayout"); return r }
public func NewQGridLayout(parent: QWidget_ITF? = nil) -> QGridLayout { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGridLayout", "", parent as Any]) as! QGridLayout }
public func NewQGridLayout2() -> QGridLayout { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGridLayout2", ""]) as! QGridLayout }
public protocol QGroupBox_ITF: QWidget_ITF {
    func QGroupBox_PTR() -> QGroupBox
}

public class QGroupBox: QWidget, QGroupBox_ITF {
    public func QGroupBox_PTR() -> QGroupBox { callLocalFunction(l: ["", Pointer(), ___className, "QGroupBox_PTR"]) as! QGroupBox }
    public func Alignment() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Alignment"]) as! Float) }
    public func ConnectClicked(f: @escaping (_ checked: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectClicked", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectClicked() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectClicked"]) }
    public func Clicked(checked: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Clicked", checked as Any]) }
    public func InitStyleOption(option: QStyleOptionGroupBox_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InitStyleOption", option as Any]) }
    public func IsCheckable() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsCheckable"]) as! Bool }
    public func IsChecked() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsChecked"]) as! Bool }
    public func IsFlat() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsFlat"]) as! Bool }
    public func SetAlignment(alignment: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAlignment", alignment as Any]) }
    public func SetCheckable(checkable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCheckable", checkable as Any]) }
    public func ConnectSetChecked(f: @escaping (_ checked: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetChecked", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectSetChecked() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetChecked"]) }
    public func SetChecked(checked: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetChecked", checked as Any]) }
    public func SetCheckedDefault(checked: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCheckedDefault", checked as Any]) }
    public func SetFlat(flat: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFlat", flat as Any]) }
    public func SetTitle(title: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTitle", title as Any]) }
    public func Title() -> String { callLocalFunction(l: ["", Pointer(), ___className, "Title"]) as! String }
    public func ConnectToggled(f: @escaping (_ on: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectToggled", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectToggled() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectToggled"]) }
    public func Toggled(on: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Toggled", on as Any]) }
    public func ConnectDestroyQGroupBox(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQGroupBox", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQGroupBox() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQGroupBox"]) }
    public func DestroyQGroupBox() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGroupBox"]) }
    public func DestroyQGroupBoxDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQGroupBoxDefault"]) }
}

public func NewQGroupBoxFromPointer(ptr: String) -> QGroupBox { let r = QGroupBox(); r.initFrom(p: ptr, n: "widgets.QGroupBox"); return r }
public func NewQGroupBox(parent: QWidget_ITF? = nil) -> QGroupBox { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGroupBox", "", parent as Any]) as! QGroupBox }
public func NewQGroupBox2(title: String, parent: QWidget_ITF? = nil) -> QGroupBox { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQGroupBox2", "", title as Any, parent as Any]) as! QGroupBox }
public protocol QHBoxLayout_ITF: QBoxLayout_ITF {
    func QHBoxLayout_PTR() -> QHBoxLayout
}

public class QHBoxLayout: QBoxLayout, QHBoxLayout_ITF {
    public func QHBoxLayout_PTR() -> QHBoxLayout { callLocalFunction(l: ["", Pointer(), ___className, "QHBoxLayout_PTR"]) as! QHBoxLayout }
    public func ConnectDestroyQHBoxLayout(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQHBoxLayout", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQHBoxLayout() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQHBoxLayout"]) }
    public func DestroyQHBoxLayout() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQHBoxLayout"]) }
    public func DestroyQHBoxLayoutDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQHBoxLayoutDefault"]) }
}

public func NewQHBoxLayoutFromPointer(ptr: String) -> QHBoxLayout { let r = QHBoxLayout(); r.initFrom(p: ptr, n: "widgets.QHBoxLayout"); return r }
public func NewQHBoxLayout() -> QHBoxLayout { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQHBoxLayout", ""]) as! QHBoxLayout }
public func NewQHBoxLayout2(parent: QWidget_ITF? = nil) -> QHBoxLayout { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQHBoxLayout2", "", parent as Any]) as! QHBoxLayout }
public protocol QHeaderView_ITF: QAbstractItemView_ITF {
    func QHeaderView_PTR() -> QHeaderView
}

public class QHeaderView: QAbstractItemView, QHeaderView_ITF {
    public func QHeaderView_PTR() -> QHeaderView { callLocalFunction(l: ["", Pointer(), ___className, "QHeaderView_PTR"]) as! QHeaderView }
    public func CascadingSectionResizes() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "CascadingSectionResizes"]) as! Bool }
    public func Count() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Count"]) as! Float) }
    override public func ConnectCurrentChanged(f: @escaping (_ current: QModelIndex, _ old: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCurrentChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex, inp[1] as! QModelIndex) } as Any) }
    override public func DisconnectCurrentChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCurrentChanged"]) }
    override public func CurrentChanged(current: QModelIndex_ITF? = nil, previous: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CurrentChanged", current as Any, previous as Any]) }
    override public func CurrentChangedDefault(current: QModelIndex_ITF? = nil, previous: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CurrentChangedDefault", current as Any, previous as Any]) }
    public func DefaultAlignment() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "DefaultAlignment"]) as! Float) }
    public func DefaultSectionSize() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "DefaultSectionSize"]) as! Float) }
    public func ConnectGeometriesChanged(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectGeometriesChanged", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectGeometriesChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectGeometriesChanged"]) }
    public func GeometriesChanged() { _ = callLocalFunction(l: ["", Pointer(), ___className, "GeometriesChanged"]) }
    public func ConnectHeaderDataChanged(f: @escaping (_ orientation: Int, _ logicalFirst: Int, _ logicalLast: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHeaderDataChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float), Int(inp[2] as! Float)) } as Any) }
    public func DisconnectHeaderDataChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHeaderDataChanged"]) }
    public func HeaderDataChanged(orientation: Int, logicalFirst: Int, logicalLast: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "HeaderDataChanged", orientation as Any, logicalFirst as Any, logicalLast as Any]) }
    public func HeaderDataChangedDefault(orientation: Int, logicalFirst: Int, logicalLast: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "HeaderDataChangedDefault", orientation as Any, logicalFirst as Any, logicalLast as Any]) }
    public func HiddenSectionCount() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "HiddenSectionCount"]) as! Float) }
    public func HideSection(logicalIndex: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "HideSection", logicalIndex as Any]) }
    public func HighlightSections() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "HighlightSections"]) as! Bool }
    override public func ConnectHorizontalOffset(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHorizontalOffset", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectHorizontalOffset() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHorizontalOffset"]) }
    override public func HorizontalOffset() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "HorizontalOffset"]) as! Float) }
    public func HorizontalOffsetDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "HorizontalOffsetDefault"]) as! Float) }
    public func InitStyleOption_QAbstractScrollArea(option: QStyleOptionHeader_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InitStyleOption", option as Any]) }
    public func IsFirstSectionMovable() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsFirstSectionMovable"]) as! Bool }
    public func IsSectionHidden(logicalIndex: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsSectionHidden", logicalIndex as Any]) as! Bool }
    public func IsSortIndicatorShown() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsSortIndicatorShown"]) as! Bool }
    public func Length() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Length"]) as! Float) }
    public func LogicalIndex(visualIndex: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "LogicalIndex", visualIndex as Any]) as! Float) }
    public func LogicalIndexAt(position: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "LogicalIndexAt", position as Any]) as! Float) }
    public func LogicalIndexAt2(x: Int, y: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "LogicalIndexAt2", x as Any, y as Any]) as! Float) }
    public func LogicalIndexAt3(pos: QPoint_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "LogicalIndexAt3", pos as Any]) as! Float) }
    public func MaximumSectionSize() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "MaximumSectionSize"]) as! Float) }
    public func MinimumSectionSize() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "MinimumSectionSize"]) as! Float) }
    public func MoveSection(from: Int, to: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MoveSection", from as Any, to as Any]) }
    public func Offset() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Offset"]) as! Float) }
    public func Orientation() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Orientation"]) as! Float) }
    public func ConnectPaintSection(f: @escaping (_ painter: QPainter, _ rect: QRect, _ logicalIndex: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPaintSection", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainter, inp[1] as! QRect, Int(inp[2] as! Float)) } as Any) }
    public func DisconnectPaintSection() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPaintSection"]) }
    public func PaintSection(painter: QPainter_ITF? = nil, rect: QRect_ITF? = nil, logicalIndex: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "PaintSection", painter as Any, rect as Any, logicalIndex as Any]) }
    public func PaintSectionDefault(painter: QPainter_ITF? = nil, rect: QRect_ITF? = nil, logicalIndex: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "PaintSectionDefault", painter as Any, rect as Any, logicalIndex as Any]) }
    override public func ConnectReset(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectReset", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectReset() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectReset"]) }
    override public func Reset() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Reset"]) }
    override public func ResetDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResetDefault"]) }
    public func ResetDefaultSectionSize() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResetDefaultSectionSize"]) }
    public func ResizeContentsPrecision() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ResizeContentsPrecision"]) as! Float) }
    public func ResizeSection(logicalIndex: Int, size: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResizeSection", logicalIndex as Any, size as Any]) }
    public func ResizeSections(mode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResizeSections", mode as Any]) }
    public func ConnectResizeSections2(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectResizeSections2", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectResizeSections2() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectResizeSections2"]) }
    public func ResizeSections2() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResizeSections2"]) }
    public func ResizeSections2Default() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResizeSections2Default"]) }
    public func RestoreState(state: QByteArray_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "RestoreState", state as Any]) as! Bool }
    public func SaveState() -> QByteArray { callLocalFunction(l: ["", Pointer(), ___className, "SaveState"]) as! QByteArray }
    public func ConnectSectionClicked(f: @escaping (_ logicalIndex: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSectionClicked", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSectionClicked() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSectionClicked"]) }
    public func SectionClicked(logicalIndex: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SectionClicked", logicalIndex as Any]) }
    public func ConnectSectionCountChanged(f: @escaping (_ oldCount: Int, _ newCount: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSectionCountChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float)) } as Any) }
    public func DisconnectSectionCountChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSectionCountChanged"]) }
    public func SectionCountChanged(oldCount: Int, newCount: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SectionCountChanged", oldCount as Any, newCount as Any]) }
    public func ConnectSectionDoubleClicked(f: @escaping (_ logicalIndex: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSectionDoubleClicked", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSectionDoubleClicked() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSectionDoubleClicked"]) }
    public func SectionDoubleClicked(logicalIndex: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SectionDoubleClicked", logicalIndex as Any]) }
    public func ConnectSectionEntered(f: @escaping (_ logicalIndex: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSectionEntered", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSectionEntered() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSectionEntered"]) }
    public func SectionEntered(logicalIndex: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SectionEntered", logicalIndex as Any]) }
    public func ConnectSectionHandleDoubleClicked(f: @escaping (_ logicalIndex: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSectionHandleDoubleClicked", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSectionHandleDoubleClicked() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSectionHandleDoubleClicked"]) }
    public func SectionHandleDoubleClicked(logicalIndex: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SectionHandleDoubleClicked", logicalIndex as Any]) }
    public func ConnectSectionMoved(f: @escaping (_ logicalIndex: Int, _ oldVisualIndex: Int, _ newVisualIndex: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSectionMoved", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float), Int(inp[2] as! Float)) } as Any) }
    public func DisconnectSectionMoved() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSectionMoved"]) }
    public func SectionMoved(logicalIndex: Int, oldVisualIndex: Int, newVisualIndex: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SectionMoved", logicalIndex as Any, oldVisualIndex as Any, newVisualIndex as Any]) }
    public func SectionPosition(logicalIndex: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SectionPosition", logicalIndex as Any]) as! Float) }
    public func ConnectSectionPressed(f: @escaping (_ logicalIndex: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSectionPressed", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSectionPressed() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSectionPressed"]) }
    public func SectionPressed(logicalIndex: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SectionPressed", logicalIndex as Any]) }
    public func SectionResizeMode(logicalIndex: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SectionResizeMode", logicalIndex as Any]) as! Float) }
    public func ConnectSectionResized(f: @escaping (_ logicalIndex: Int, _ oldSize: Int, _ newSize: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSectionResized", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float), Int(inp[2] as! Float)) } as Any) }
    public func DisconnectSectionResized() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSectionResized"]) }
    public func SectionResized(logicalIndex: Int, oldSize: Int, newSize: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SectionResized", logicalIndex as Any, oldSize as Any, newSize as Any]) }
    public func SectionSize(logicalIndex: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SectionSize", logicalIndex as Any]) as! Float) }
    public func ConnectSectionSizeFromContents(f: @escaping (_ logicalIndex: Int) -> QSize) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSectionSizeFromContents", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSectionSizeFromContents() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSectionSizeFromContents"]) }
    public func SectionSizeFromContents(logicalIndex: Int) -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "SectionSizeFromContents", logicalIndex as Any]) as! QSize }
    public func SectionSizeFromContentsDefault(logicalIndex: Int) -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "SectionSizeFromContentsDefault", logicalIndex as Any]) as! QSize }
    public func SectionSizeHint(logicalIndex: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SectionSizeHint", logicalIndex as Any]) as! Float) }
    public func SectionViewportPosition(logicalIndex: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SectionViewportPosition", logicalIndex as Any]) as! Float) }
    public func ConnectSectionsAboutToBeRemoved(f: @escaping (_ parent: QModelIndex, _ logicalFirst: Int, _ logicalLast: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSectionsAboutToBeRemoved", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex, Int(inp[1] as! Float), Int(inp[2] as! Float)) } as Any) }
    public func DisconnectSectionsAboutToBeRemoved() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSectionsAboutToBeRemoved"]) }
    public func SectionsAboutToBeRemoved(parent: QModelIndex_ITF? = nil, logicalFirst: Int, logicalLast: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SectionsAboutToBeRemoved", parent as Any, logicalFirst as Any, logicalLast as Any]) }
    public func SectionsAboutToBeRemovedDefault(parent: QModelIndex_ITF? = nil, logicalFirst: Int, logicalLast: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SectionsAboutToBeRemovedDefault", parent as Any, logicalFirst as Any, logicalLast as Any]) }
    public func SectionsClickable() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "SectionsClickable"]) as! Bool }
    public func SectionsHidden() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "SectionsHidden"]) as! Bool }
    public func ConnectSectionsInserted(f: @escaping (_ parent: QModelIndex, _ logicalFirst: Int, _ logicalLast: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSectionsInserted", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex, Int(inp[1] as! Float), Int(inp[2] as! Float)) } as Any) }
    public func DisconnectSectionsInserted() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSectionsInserted"]) }
    public func SectionsInserted(parent: QModelIndex_ITF? = nil, logicalFirst: Int, logicalLast: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SectionsInserted", parent as Any, logicalFirst as Any, logicalLast as Any]) }
    public func SectionsInsertedDefault(parent: QModelIndex_ITF? = nil, logicalFirst: Int, logicalLast: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SectionsInsertedDefault", parent as Any, logicalFirst as Any, logicalLast as Any]) }
    public func SectionsMovable() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "SectionsMovable"]) as! Bool }
    public func SectionsMoved() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "SectionsMoved"]) as! Bool }
    public func SetCascadingSectionResizes(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCascadingSectionResizes", enable as Any]) }
    public func SetDefaultAlignment(alignment: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDefaultAlignment", alignment as Any]) }
    public func SetDefaultSectionSize(size: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDefaultSectionSize", size as Any]) }
    public func SetFirstSectionMovable(movable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFirstSectionMovable", movable as Any]) }
    public func SetHighlightSections(highlight: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetHighlightSections", highlight as Any]) }
    public func SetMaximumSectionSize(size: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMaximumSectionSize", size as Any]) }
    public func SetMinimumSectionSize(size: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMinimumSectionSize", size as Any]) }
    public func ConnectSetOffset(f: @escaping (_ offset: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetOffset", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSetOffset() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetOffset"]) }
    public func SetOffset(offset: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOffset", offset as Any]) }
    public func SetOffsetDefault(offset: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOffsetDefault", offset as Any]) }
    public func ConnectSetOffsetToLastSection(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetOffsetToLastSection", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectSetOffsetToLastSection() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetOffsetToLastSection"]) }
    public func SetOffsetToLastSection() { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOffsetToLastSection"]) }
    public func SetOffsetToLastSectionDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOffsetToLastSectionDefault"]) }
    public func ConnectSetOffsetToSectionPosition(f: @escaping (_ visualSectionNumber: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetOffsetToSectionPosition", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSetOffsetToSectionPosition() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetOffsetToSectionPosition"]) }
    public func SetOffsetToSectionPosition(visualSectionNumber: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOffsetToSectionPosition", visualSectionNumber as Any]) }
    public func SetOffsetToSectionPositionDefault(visualSectionNumber: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOffsetToSectionPositionDefault", visualSectionNumber as Any]) }
    public func SetResizeContentsPrecision(precision: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetResizeContentsPrecision", precision as Any]) }
    public func SetSectionHidden(logicalIndex: Int, hide: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSectionHidden", logicalIndex as Any, hide as Any]) }
    public func SetSectionResizeMode(mode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSectionResizeMode", mode as Any]) }
    public func SetSectionResizeMode2(logicalIndex: Int, mode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSectionResizeMode2", logicalIndex as Any, mode as Any]) }
    public func SetSectionsClickable(clickable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSectionsClickable", clickable as Any]) }
    public func SetSectionsMovable(movable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSectionsMovable", movable as Any]) }
    override public func ConnectSetSelection(f: @escaping (_ rect: QRect, _ flags: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetSelection", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QRect, Int(inp[1] as! Float)) } as Any) }
    override public func DisconnectSetSelection() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetSelection"]) }
    override public func SetSelection(rect: QRect_ITF? = nil, flags: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSelection", rect as Any, flags as Any]) }
    public func SetSelectionDefault(rect: QRect_ITF? = nil, flags: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSelectionDefault", rect as Any, flags as Any]) }
    public func SetSortIndicator(logicalIndex: Int, order: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSortIndicator", logicalIndex as Any, order as Any]) }
    public func SetSortIndicatorShown(show: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSortIndicatorShown", show as Any]) }
    public func SetStretchLastSection(stretch: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStretchLastSection", stretch as Any]) }
    override public func ConnectSetVisible(f: @escaping (_ v: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetVisible", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    override public func DisconnectSetVisible() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetVisible"]) }
    override public func SetVisible(visible: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetVisible", visible as Any]) }
    override public func SetVisibleDefault(visible: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetVisibleDefault", visible as Any]) }
    public func ShowSection(logicalIndex: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowSection", logicalIndex as Any]) }
    public func ConnectSortIndicatorChanged(f: @escaping (_ logicalIndex: Int, _ order: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSortIndicatorChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float)) } as Any) }
    public func DisconnectSortIndicatorChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSortIndicatorChanged"]) }
    public func SortIndicatorChanged(logicalIndex: Int, order: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SortIndicatorChanged", logicalIndex as Any, order as Any]) }
    public func SortIndicatorOrder() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SortIndicatorOrder"]) as! Float) }
    public func SortIndicatorSection() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SortIndicatorSection"]) as! Float) }
    public func StretchLastSection() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "StretchLastSection"]) as! Bool }
    public func StretchSectionCount() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "StretchSectionCount"]) as! Float) }
    public func SwapSections(first: Int, second: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SwapSections", first as Any, second as Any]) }
    override public func ConnectVerticalOffset(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectVerticalOffset", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectVerticalOffset() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectVerticalOffset"]) }
    override public func VerticalOffset() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "VerticalOffset"]) as! Float) }
    public func VerticalOffsetDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "VerticalOffsetDefault"]) as! Float) }
    public func VisualIndex(logicalIndex: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "VisualIndex", logicalIndex as Any]) as! Float) }
    public func VisualIndexAt(position: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "VisualIndexAt", position as Any]) as! Float) }
    public func ConnectDestroyQHeaderView(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQHeaderView", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQHeaderView() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQHeaderView"]) }
    public func DestroyQHeaderView() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQHeaderView"]) }
    public func DestroyQHeaderViewDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQHeaderViewDefault"]) }
    override public func IndexAt(point: QPoint_ITF? = nil) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "IndexAt", point as Any]) as! QModelIndex }
    public func IndexAtDefault(point: QPoint_ITF? = nil) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "IndexAtDefault", point as Any]) as! QModelIndex }
    override public func IsIndexHidden(index: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsIndexHidden", index as Any]) as! Bool }
    public func IsIndexHiddenDefault(index: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsIndexHiddenDefault", index as Any]) as! Bool }
    override public func MoveCursor(cursorAction: Int, modifiers: Int) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "MoveCursor", cursorAction as Any, modifiers as Any]) as! QModelIndex }
    public func MoveCursorDefault(cursorAction: Int, modifiers: Int) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "MoveCursorDefault", cursorAction as Any, modifiers as Any]) as! QModelIndex }
    override public func ScrollTo(index: QModelIndex_ITF? = nil, hint: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ScrollTo", index as Any, hint as Any]) }
    public func ScrollToDefault(index: QModelIndex_ITF? = nil, hint: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ScrollToDefault", index as Any, hint as Any]) }
    override public func VisualRect(index: QModelIndex_ITF? = nil) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "VisualRect", index as Any]) as! QRect }
    public func VisualRectDefault(index: QModelIndex_ITF? = nil) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "VisualRectDefault", index as Any]) as! QRect }
    override public func VisualRegionForSelection(selection: QItemSelection_ITF? = nil) -> QRegion { callLocalFunction(l: ["", Pointer(), ___className, "VisualRegionForSelection", selection as Any]) as! QRegion }
    public func VisualRegionForSelectionDefault(selection: QItemSelection_ITF? = nil) -> QRegion { callLocalFunction(l: ["", Pointer(), ___className, "VisualRegionForSelectionDefault", selection as Any]) as! QRegion }
}

public func NewQHeaderViewFromPointer(ptr: String) -> QHeaderView { let r = QHeaderView(); r.initFrom(p: ptr, n: "widgets.QHeaderView"); return r }
public func NewQHeaderView(orientation: Int, parent: QWidget_ITF? = nil) -> QHeaderView { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQHeaderView", "", orientation as Any, parent as Any]) as! QHeaderView }
public protocol QInputDialog_ITF: QDialog_ITF {
    func QInputDialog_PTR() -> QInputDialog
}

public class QInputDialog: QDialog, QInputDialog_ITF {
    public func QInputDialog_PTR() -> QInputDialog { callLocalFunction(l: ["", Pointer(), ___className, "QInputDialog_PTR"]) as! QInputDialog }
    public func CancelButtonText() -> String { callLocalFunction(l: ["", Pointer(), ___className, "CancelButtonText"]) as! String }
    public func ComboBoxItems() -> [String] { callLocalFunction(l: ["", Pointer(), ___className, "ComboBoxItems"]) as! [String] }
    override public func ConnectDone(f: @escaping (_ result: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDone", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    override public func DisconnectDone() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDone"]) }
    override public func Done(r: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Done", r as Any]) }
    override public func DoneDefault(r: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DoneDefault", r as Any]) }
    public func DoubleDecimals() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "DoubleDecimals"]) as! Float) }
    public func DoubleMaximum() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "DoubleMaximum"]) as! Float }
    public func DoubleMinimum() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "DoubleMinimum"]) as! Float }
    public func DoubleStep() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "DoubleStep"]) as! Float }
    public func DoubleValue() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "DoubleValue"]) as! Float }
    public func ConnectDoubleValueChanged(f: @escaping (_ value: Float) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDoubleValueChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Float) } as Any) }
    public func DisconnectDoubleValueChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDoubleValueChanged"]) }
    public func DoubleValueChanged(value: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DoubleValueChanged", value as Any]) }
    public func ConnectDoubleValueSelected(f: @escaping (_ value: Float) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDoubleValueSelected", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Float) } as Any) }
    public func DisconnectDoubleValueSelected() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDoubleValueSelected"]) }
    public func DoubleValueSelected(value: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DoubleValueSelected", value as Any]) }
    public func GetDouble(parent: QWidget_ITF? = nil, title: String, label: String, value: Float, mi: Float, max: Float, decimals: Int, ok: Bool, flags: Int) -> Float { callLocalFunction(l: ["", Pointer(), ___className, "GetDouble", parent as Any, title as Any, label as Any, value as Any, mi as Any, max as Any, decimals as Any, ok as Any, flags as Any]) as! Float }
    public func GetDouble2(parent: QWidget_ITF? = nil, title: String, label: String, value: Float, mi: Float, max: Float, decimals: Int, ok: Bool, flags: Int, step: Float) -> Float { callLocalFunction(l: ["", Pointer(), ___className, "GetDouble2", parent as Any, title as Any, label as Any, value as Any, mi as Any, max as Any, decimals as Any, ok as Any, flags as Any, step as Any]) as! Float }
    public func GetInt(parent: QWidget_ITF? = nil, title: String, label: String, value: Int, mi: Int, max: Int, step: Int, ok: Bool, flags: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "GetInt", parent as Any, title as Any, label as Any, value as Any, mi as Any, max as Any, step as Any, ok as Any, flags as Any]) as! Float) }
    public func GetItem(parent: QWidget_ITF? = nil, title: String, label: String, items: [String], current: Int, editable: Bool, ok: Bool, flags: Int, inputMethodHints: Int) -> String { callLocalFunction(l: ["", Pointer(), ___className, "GetItem", parent as Any, title as Any, label as Any, items as Any, current as Any, editable as Any, ok as Any, flags as Any, inputMethodHints as Any]) as! String }
    public func GetMultiLineText(parent: QWidget_ITF? = nil, title: String, label: String, text: String, ok: Bool, flags: Int, inputMethodHints: Int) -> String { callLocalFunction(l: ["", Pointer(), ___className, "GetMultiLineText", parent as Any, title as Any, label as Any, text as Any, ok as Any, flags as Any, inputMethodHints as Any]) as! String }
    public func GetText(parent: QWidget_ITF? = nil, title: String, label: String, mode: Int, text: String, ok: Bool, flags: Int, inputMethodHints: Int) -> String { callLocalFunction(l: ["", Pointer(), ___className, "GetText", parent as Any, title as Any, label as Any, mode as Any, text as Any, ok as Any, flags as Any, inputMethodHints as Any]) as! String }
    public func InputMode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "InputMode"]) as! Float) }
    public func IntMaximum() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "IntMaximum"]) as! Float) }
    public func IntMinimum() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "IntMinimum"]) as! Float) }
    public func IntStep() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "IntStep"]) as! Float) }
    public func IntValue() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "IntValue"]) as! Float) }
    public func ConnectIntValueChanged(f: @escaping (_ value: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectIntValueChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectIntValueChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectIntValueChanged"]) }
    public func IntValueChanged(value: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "IntValueChanged", value as Any]) }
    public func ConnectIntValueSelected(f: @escaping (_ value: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectIntValueSelected", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectIntValueSelected() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectIntValueSelected"]) }
    public func IntValueSelected(value: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "IntValueSelected", value as Any]) }
    public func IsComboBoxEditable() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsComboBoxEditable"]) as! Bool }
    public func LabelText() -> String { callLocalFunction(l: ["", Pointer(), ___className, "LabelText"]) as! String }
    public func OkButtonText() -> String { callLocalFunction(l: ["", Pointer(), ___className, "OkButtonText"]) as! String }
    public func Open_QInputDialog(receiver: QObject_ITF? = nil, member: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Open", receiver as Any, member as Any]) }
    public func Options() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Options"]) as! Float) }
    public func SetCancelButtonText(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCancelButtonText", text as Any]) }
    public func SetComboBoxEditable(editable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetComboBoxEditable", editable as Any]) }
    public func SetComboBoxItems(items: [String]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetComboBoxItems", items as Any]) }
    public func SetDoubleDecimals(decimals: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDoubleDecimals", decimals as Any]) }
    public func SetDoubleMaximum(max: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDoubleMaximum", max as Any]) }
    public func SetDoubleMinimum(mi: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDoubleMinimum", mi as Any]) }
    public func SetDoubleRange(mi: Float, max: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDoubleRange", mi as Any, max as Any]) }
    public func SetDoubleStep(step: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDoubleStep", step as Any]) }
    public func SetDoubleValue(value: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDoubleValue", value as Any]) }
    public func SetInputMode(mode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetInputMode", mode as Any]) }
    public func SetIntMaximum(max: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIntMaximum", max as Any]) }
    public func SetIntMinimum(mi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIntMinimum", mi as Any]) }
    public func SetIntRange(mi: Int, max: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIntRange", mi as Any, max as Any]) }
    public func SetIntStep(step: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIntStep", step as Any]) }
    public func SetIntValue(value: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIntValue", value as Any]) }
    public func SetLabelText(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetLabelText", text as Any]) }
    public func SetOkButtonText(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOkButtonText", text as Any]) }
    public func SetOption(option: Int, on: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOption", option as Any, on as Any]) }
    public func SetOptions(options: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOptions", options as Any]) }
    public func SetTextEchoMode(mode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTextEchoMode", mode as Any]) }
    public func SetTextValue(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTextValue", text as Any]) }
    public func TestOption(option: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "TestOption", option as Any]) as! Bool }
    public func TextEchoMode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TextEchoMode"]) as! Float) }
    public func TextValue() -> String { callLocalFunction(l: ["", Pointer(), ___className, "TextValue"]) as! String }
    public func ConnectTextValueChanged(f: @escaping (_ text: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTextValueChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectTextValueChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTextValueChanged"]) }
    public func TextValueChanged(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TextValueChanged", text as Any]) }
    public func ConnectTextValueSelected(f: @escaping (_ text: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTextValueSelected", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectTextValueSelected() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTextValueSelected"]) }
    public func TextValueSelected(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TextValueSelected", text as Any]) }
    public func ConnectDestroyQInputDialog(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQInputDialog", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQInputDialog() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQInputDialog"]) }
    public func DestroyQInputDialog() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQInputDialog"]) }
    public func DestroyQInputDialogDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQInputDialogDefault"]) }
}

public func NewQInputDialogFromPointer(ptr: String) -> QInputDialog { let r = QInputDialog(); r.initFrom(p: ptr, n: "widgets.QInputDialog"); return r }
public func NewQInputDialog(parent: QWidget_ITF? = nil, flags: Int) -> QInputDialog { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQInputDialog", "", parent as Any, flags as Any]) as! QInputDialog }
public func QInputDialog_GetDouble(parent: QWidget_ITF? = nil, title: String, label: String, value: Float, mi: Float, max: Float, decimals: Int, ok: Bool, flags: Int) -> Float { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QInputDialog_GetDouble", "", parent as Any, title as Any, label as Any, value as Any, mi as Any, max as Any, decimals as Any, ok as Any, flags as Any]) as! Float }
public func QInputDialog_GetDouble2(parent: QWidget_ITF? = nil, title: String, label: String, value: Float, mi: Float, max: Float, decimals: Int, ok: Bool, flags: Int, step: Float) -> Float { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QInputDialog_GetDouble2", "", parent as Any, title as Any, label as Any, value as Any, mi as Any, max as Any, decimals as Any, ok as Any, flags as Any, step as Any]) as! Float }
public func QInputDialog_GetInt(parent: QWidget_ITF? = nil, title: String, label: String, value: Int, mi: Int, max: Int, step: Int, ok: Bool, flags: Int) -> Int { Widgets.initModule(); return Int(callLocalFunction(l: ["", "", "widgets.QInputDialog_GetInt", "", parent as Any, title as Any, label as Any, value as Any, mi as Any, max as Any, step as Any, ok as Any, flags as Any]) as! Float) }
public func QInputDialog_GetItem(parent: QWidget_ITF? = nil, title: String, label: String, items: [String], current: Int, editable: Bool, ok: Bool, flags: Int, inputMethodHints: Int) -> String { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QInputDialog_GetItem", "", parent as Any, title as Any, label as Any, items as Any, current as Any, editable as Any, ok as Any, flags as Any, inputMethodHints as Any]) as! String }
public func QInputDialog_GetMultiLineText(parent: QWidget_ITF? = nil, title: String, label: String, text: String, ok: Bool, flags: Int, inputMethodHints: Int) -> String { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QInputDialog_GetMultiLineText", "", parent as Any, title as Any, label as Any, text as Any, ok as Any, flags as Any, inputMethodHints as Any]) as! String }
public func QInputDialog_GetText(parent: QWidget_ITF? = nil, title: String, label: String, mode: Int, text: String, ok: Bool, flags: Int, inputMethodHints: Int) -> String { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QInputDialog_GetText", "", parent as Any, title as Any, label as Any, mode as Any, text as Any, ok as Any, flags as Any, inputMethodHints as Any]) as! String }
public protocol QItemDelegate_ITF: QAbstractItemDelegate_ITF {
    func QItemDelegate_PTR() -> QItemDelegate
}

public class QItemDelegate: QAbstractItemDelegate, QItemDelegate_ITF {
    public func QItemDelegate_PTR() -> QItemDelegate { callLocalFunction(l: ["", Pointer(), ___className, "QItemDelegate_PTR"]) as! QItemDelegate }
    public func DrawBackground(painter: QPainter_ITF? = nil, option: QStyleOptionViewItem_ITF? = nil, index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawBackground", painter as Any, option as Any, index as Any]) }
    public func ConnectDrawCheck(f: @escaping (_ painter: QPainter, _ option: QStyleOptionViewItem, _ rect: QRect, _ state: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDrawCheck", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainter, inp[1] as! QStyleOptionViewItem, inp[2] as! QRect, Int(inp[3] as! Float)) } as Any) }
    public func DisconnectDrawCheck() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDrawCheck"]) }
    public func DrawCheck(painter: QPainter_ITF? = nil, option: QStyleOptionViewItem_ITF? = nil, rect: QRect_ITF? = nil, state: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawCheck", painter as Any, option as Any, rect as Any, state as Any]) }
    public func DrawCheckDefault(painter: QPainter_ITF? = nil, option: QStyleOptionViewItem_ITF? = nil, rect: QRect_ITF? = nil, state: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawCheckDefault", painter as Any, option as Any, rect as Any, state as Any]) }
    public func ConnectDrawDecoration(f: @escaping (_ painter: QPainter, _ option: QStyleOptionViewItem, _ rect: QRect, _ pixmap: QPixmap) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDrawDecoration", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainter, inp[1] as! QStyleOptionViewItem, inp[2] as! QRect, inp[3] as! QPixmap) } as Any) }
    public func DisconnectDrawDecoration() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDrawDecoration"]) }
    public func DrawDecoration(painter: QPainter_ITF? = nil, option: QStyleOptionViewItem_ITF? = nil, rect: QRect_ITF? = nil, pixmap: QPixmap_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawDecoration", painter as Any, option as Any, rect as Any, pixmap as Any]) }
    public func DrawDecorationDefault(painter: QPainter_ITF? = nil, option: QStyleOptionViewItem_ITF? = nil, rect: QRect_ITF? = nil, pixmap: QPixmap_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawDecorationDefault", painter as Any, option as Any, rect as Any, pixmap as Any]) }
    public func ConnectDrawDisplay(f: @escaping (_ painter: QPainter, _ option: QStyleOptionViewItem, _ rect: QRect, _ text: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDrawDisplay", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainter, inp[1] as! QStyleOptionViewItem, inp[2] as! QRect, inp[3] as! String) } as Any) }
    public func DisconnectDrawDisplay() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDrawDisplay"]) }
    public func DrawDisplay(painter: QPainter_ITF? = nil, option: QStyleOptionViewItem_ITF? = nil, rect: QRect_ITF? = nil, text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawDisplay", painter as Any, option as Any, rect as Any, text as Any]) }
    public func DrawDisplayDefault(painter: QPainter_ITF? = nil, option: QStyleOptionViewItem_ITF? = nil, rect: QRect_ITF? = nil, text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawDisplayDefault", painter as Any, option as Any, rect as Any, text as Any]) }
    public func ConnectDrawFocus(f: @escaping (_ painter: QPainter, _ option: QStyleOptionViewItem, _ rect: QRect) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDrawFocus", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainter, inp[1] as! QStyleOptionViewItem, inp[2] as! QRect) } as Any) }
    public func DisconnectDrawFocus() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDrawFocus"]) }
    public func DrawFocus(painter: QPainter_ITF? = nil, option: QStyleOptionViewItem_ITF? = nil, rect: QRect_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawFocus", painter as Any, option as Any, rect as Any]) }
    public func DrawFocusDefault(painter: QPainter_ITF? = nil, option: QStyleOptionViewItem_ITF? = nil, rect: QRect_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawFocusDefault", painter as Any, option as Any, rect as Any]) }
    public func HasClipping() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "HasClipping"]) as! Bool }
    public func ItemEditorFactory() -> QItemEditorFactory { callLocalFunction(l: ["", Pointer(), ___className, "ItemEditorFactory"]) as! QItemEditorFactory }
    override public func ConnectPaint(f: @escaping (_ painter: QPainter, _ option: QStyleOptionViewItem, _ index: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPaint", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainter, inp[1] as! QStyleOptionViewItem, inp[2] as! QModelIndex) } as Any) }
    override public func DisconnectPaint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPaint"]) }
    override public func Paint(painter: QPainter_ITF? = nil, option: QStyleOptionViewItem_ITF? = nil, index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Paint", painter as Any, option as Any, index as Any]) }
    public func PaintDefault(painter: QPainter_ITF? = nil, option: QStyleOptionViewItem_ITF? = nil, index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "PaintDefault", painter as Any, option as Any, index as Any]) }
    public func SetClipping(clip: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetClipping", clip as Any]) }
    public func SetItemEditorFactory(factory: QItemEditorFactory_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetItemEditorFactory", factory as Any]) }
    override public func ConnectSizeHint(f: @escaping (_ option: QStyleOptionViewItem, _ index: QModelIndex) -> QSize) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSizeHint", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QStyleOptionViewItem, inp[1] as! QModelIndex) } as Any) }
    override public func DisconnectSizeHint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSizeHint"]) }
    override public func SizeHint(option: QStyleOptionViewItem_ITF? = nil, index: QModelIndex_ITF? = nil) -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "SizeHint", option as Any, index as Any]) as! QSize }
    public func SizeHintDefault(option: QStyleOptionViewItem_ITF? = nil, index: QModelIndex_ITF? = nil) -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "SizeHintDefault", option as Any, index as Any]) as! QSize }
    public func ConnectDestroyQItemDelegate(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQItemDelegate", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQItemDelegate() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQItemDelegate"]) }
    public func DestroyQItemDelegate() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQItemDelegate"]) }
    public func DestroyQItemDelegateDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQItemDelegateDefault"]) }
}

public func NewQItemDelegateFromPointer(ptr: String) -> QItemDelegate { let r = QItemDelegate(); r.initFrom(p: ptr, n: "widgets.QItemDelegate"); return r }
public func NewQItemDelegate(parent: QObject_ITF? = nil) -> QItemDelegate { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQItemDelegate", "", parent as Any]) as! QItemDelegate }
public protocol QItemEditorCreator_ITF: QItemEditorCreatorBase_ITF {
    func QItemEditorCreator_PTR() -> QItemEditorCreator
}

public class QItemEditorCreator: QItemEditorCreatorBase, QItemEditorCreator_ITF {
    public func QItemEditorCreator_PTR() -> QItemEditorCreator { callLocalFunction(l: ["", Pointer(), ___className, "QItemEditorCreator_PTR"]) as! QItemEditorCreator }
    public func DestroyQItemEditorCreator() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQItemEditorCreator"]) }
}

public protocol QItemEditorCreatorBase_ITF {
    func QItemEditorCreatorBase_PTR() -> QItemEditorCreatorBase
}

public class QItemEditorCreatorBase: Internal, QItemEditorCreatorBase_ITF {
    public func QItemEditorCreatorBase_PTR() -> QItemEditorCreatorBase { callLocalFunction(l: ["", Pointer(), ___className, "QItemEditorCreatorBase_PTR"]) as! QItemEditorCreatorBase }
    public func ConnectCreateWidget(f: @escaping (_ parent: QWidget) -> QWidget) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCreateWidget", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QWidget) } as Any) }
    public func DisconnectCreateWidget() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCreateWidget"]) }
    public func CreateWidget(parent: QWidget_ITF? = nil) -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "CreateWidget", parent as Any]) as! QWidget }
    public func ConnectValuePropertyName(f: @escaping () -> QByteArray) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectValuePropertyName", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectValuePropertyName() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectValuePropertyName"]) }
    public func ValuePropertyName() -> QByteArray { callLocalFunction(l: ["", Pointer(), ___className, "ValuePropertyName"]) as! QByteArray }
    public func ConnectDestroyQItemEditorCreatorBase(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQItemEditorCreatorBase", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQItemEditorCreatorBase() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQItemEditorCreatorBase"]) }
    public func DestroyQItemEditorCreatorBase() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQItemEditorCreatorBase"]) }
    public func DestroyQItemEditorCreatorBaseDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQItemEditorCreatorBaseDefault"]) }
}

public func NewQItemEditorCreatorBaseFromPointer(ptr: String) -> QItemEditorCreatorBase { let r = QItemEditorCreatorBase(); r.initFrom(p: ptr, n: "widgets.QItemEditorCreatorBase"); return r }
public protocol QItemEditorFactory_ITF {
    func QItemEditorFactory_PTR() -> QItemEditorFactory
}

public class QItemEditorFactory: Internal, QItemEditorFactory_ITF {
    public func QItemEditorFactory_PTR() -> QItemEditorFactory { callLocalFunction(l: ["", Pointer(), ___className, "QItemEditorFactory_PTR"]) as! QItemEditorFactory }
    public func ConnectCreateEditor(f: @escaping (_ userType: Int, _ parent: QWidget) -> QWidget) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCreateEditor", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! QWidget) } as Any) }
    public func DisconnectCreateEditor() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCreateEditor"]) }
    public func CreateEditor(userType: Int, parent: QWidget_ITF? = nil) -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "CreateEditor", userType as Any, parent as Any]) as! QWidget }
    public func CreateEditorDefault(userType: Int, parent: QWidget_ITF? = nil) -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "CreateEditorDefault", userType as Any, parent as Any]) as! QWidget }
    public func DefaultFactory() -> QItemEditorFactory { callLocalFunction(l: ["", Pointer(), ___className, "DefaultFactory"]) as! QItemEditorFactory }
    public func RegisterEditor(userType: Int, creator: QItemEditorCreatorBase_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RegisterEditor", userType as Any, creator as Any]) }
    public func SetDefaultFactory(factory: QItemEditorFactory_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDefaultFactory", factory as Any]) }
    public func ConnectValuePropertyName(f: @escaping (_ userType: Int) -> QByteArray) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectValuePropertyName", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectValuePropertyName() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectValuePropertyName"]) }
    public func ValuePropertyName(userType: Int) -> QByteArray { callLocalFunction(l: ["", Pointer(), ___className, "ValuePropertyName", userType as Any]) as! QByteArray }
    public func ValuePropertyNameDefault(userType: Int) -> QByteArray { callLocalFunction(l: ["", Pointer(), ___className, "ValuePropertyNameDefault", userType as Any]) as! QByteArray }
    public func ConnectDestroyQItemEditorFactory(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQItemEditorFactory", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQItemEditorFactory() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQItemEditorFactory"]) }
    public func DestroyQItemEditorFactory() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQItemEditorFactory"]) }
    public func DestroyQItemEditorFactoryDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQItemEditorFactoryDefault"]) }
}

public func NewQItemEditorFactoryFromPointer(ptr: String) -> QItemEditorFactory { let r = QItemEditorFactory(); r.initFrom(p: ptr, n: "widgets.QItemEditorFactory"); return r }
public func NewQItemEditorFactory() -> QItemEditorFactory { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQItemEditorFactory", ""]) as! QItemEditorFactory }
public func QItemEditorFactory_DefaultFactory() -> QItemEditorFactory { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QItemEditorFactory_DefaultFactory", ""]) as! QItemEditorFactory }
public func QItemEditorFactory_SetDefaultFactory(factory: QItemEditorFactory_ITF? = nil) { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QItemEditorFactory_SetDefaultFactory", "", factory as Any]) }
public protocol QKeyEventTransition_ITF: QEventTransition_ITF {
    func QKeyEventTransition_PTR() -> QKeyEventTransition
}

public class QKeyEventTransition: QEventTransition, QKeyEventTransition_ITF {
    public func QKeyEventTransition_PTR() -> QKeyEventTransition { callLocalFunction(l: ["", Pointer(), ___className, "QKeyEventTransition_PTR"]) as! QKeyEventTransition }
    override public func EventTestDefault(event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventTestDefault", event as Any]) as! Bool }
    public func Key() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Key"]) as! Float) }
    public func ModifierMask() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ModifierMask"]) as! Float) }
    override public func OnTransitionDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "OnTransitionDefault", event as Any]) }
    public func SetKey(key: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetKey", key as Any]) }
    public func SetModifierMask(modifierMask: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetModifierMask", modifierMask as Any]) }
    public func ConnectDestroyQKeyEventTransition(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQKeyEventTransition", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQKeyEventTransition() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQKeyEventTransition"]) }
    public func DestroyQKeyEventTransition() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQKeyEventTransition"]) }
    public func DestroyQKeyEventTransitionDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQKeyEventTransitionDefault"]) }
    override public func EventDefault(e: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventDefault", e as Any]) as! Bool }
    override public func ChildEventDefault(event: QChildEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ChildEventDefault", event as Any]) }
    override public func ConnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ConnectNotifyDefault", sign as Any]) }
    override public func CustomEventDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CustomEventDefault", event as Any]) }
    override public func DeleteLaterDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DeleteLaterDefault"]) }
    override public func DisconnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DisconnectNotifyDefault", sign as Any]) }
    override public func EventFilterDefault(watched: QObject_ITF? = nil, event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventFilterDefault", watched as Any, event as Any]) as! Bool }
    override public func MetaObjectDefault() -> QMetaObject { callLocalFunction(l: ["", Pointer(), ___className, "MetaObjectDefault"]) as! QMetaObject }
    override public func TimerEventDefault(event: QTimerEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TimerEventDefault", event as Any]) }
}

public func NewQKeyEventTransitionFromPointer(ptr: String) -> QKeyEventTransition { let r = QKeyEventTransition(); r.initFrom(p: ptr, n: "widgets.QKeyEventTransition"); return r }
public func NewQKeyEventTransition(sourceState: QState_ITF? = nil) -> QKeyEventTransition { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQKeyEventTransition", "", sourceState as Any]) as! QKeyEventTransition }
public func NewQKeyEventTransition2(object: QObject_ITF? = nil, ty: Int, key: Int, sourceState: QState_ITF? = nil) -> QKeyEventTransition { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQKeyEventTransition2", "", object as Any, ty as Any, key as Any, sourceState as Any]) as! QKeyEventTransition }
public protocol QKeySequenceEdit_ITF: QWidget_ITF {
    func QKeySequenceEdit_PTR() -> QKeySequenceEdit
}

public class QKeySequenceEdit: QWidget, QKeySequenceEdit_ITF {
    public func QKeySequenceEdit_PTR() -> QKeySequenceEdit { callLocalFunction(l: ["", Pointer(), ___className, "QKeySequenceEdit_PTR"]) as! QKeySequenceEdit }
    public func ConnectClear(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectClear", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectClear() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectClear"]) }
    public func Clear() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Clear"]) }
    public func ClearDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearDefault"]) }
    public func ConnectEditingFinished(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectEditingFinished", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectEditingFinished() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectEditingFinished"]) }
    public func EditingFinished() { _ = callLocalFunction(l: ["", Pointer(), ___className, "EditingFinished"]) }
    public func KeySequence() -> QKeySequence { callLocalFunction(l: ["", Pointer(), ___className, "KeySequence"]) as! QKeySequence }
    public func ConnectKeySequenceChanged(f: @escaping (_ keySequence: QKeySequence) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectKeySequenceChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QKeySequence) } as Any) }
    public func DisconnectKeySequenceChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectKeySequenceChanged"]) }
    public func KeySequenceChanged(keySequence: QKeySequence_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "KeySequenceChanged", keySequence as Any]) }
    public func ConnectSetKeySequence(f: @escaping (_ keySequence: QKeySequence) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetKeySequence", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QKeySequence) } as Any) }
    public func DisconnectSetKeySequence() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetKeySequence"]) }
    public func SetKeySequence(keySequence: QKeySequence_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetKeySequence", keySequence as Any]) }
    public func SetKeySequenceDefault(keySequence: QKeySequence_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetKeySequenceDefault", keySequence as Any]) }
    public func ConnectDestroyQKeySequenceEdit(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQKeySequenceEdit", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQKeySequenceEdit() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQKeySequenceEdit"]) }
    public func DestroyQKeySequenceEdit() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQKeySequenceEdit"]) }
    public func DestroyQKeySequenceEditDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQKeySequenceEditDefault"]) }
}

public func NewQKeySequenceEditFromPointer(ptr: String) -> QKeySequenceEdit { let r = QKeySequenceEdit(); r.initFrom(p: ptr, n: "widgets.QKeySequenceEdit"); return r }
public func NewQKeySequenceEdit(parent: QWidget_ITF? = nil) -> QKeySequenceEdit { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQKeySequenceEdit", "", parent as Any]) as! QKeySequenceEdit }
public func NewQKeySequenceEdit2(keySequence: QKeySequence_ITF? = nil, parent: QWidget_ITF? = nil) -> QKeySequenceEdit { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQKeySequenceEdit2", "", keySequence as Any, parent as Any]) as! QKeySequenceEdit }
public protocol QLCDNumber_ITF: QFrame_ITF {
    func QLCDNumber_PTR() -> QLCDNumber
}

public class QLCDNumber: QFrame, QLCDNumber_ITF {
    public func QLCDNumber_PTR() -> QLCDNumber { callLocalFunction(l: ["", Pointer(), ___className, "QLCDNumber_PTR"]) as! QLCDNumber }
    public func CheckOverflow(num: Float) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "CheckOverflow", num as Any]) as! Bool }
    public func CheckOverflow2(num: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "CheckOverflow2", num as Any]) as! Bool }
    public func DigitCount() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "DigitCount"]) as! Float) }
    public func ConnectDisplay(f: @escaping (_ s: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDisplay", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectDisplay() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDisplay"]) }
    public func Display(s: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Display", s as Any]) }
    public func DisplayDefault(s: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DisplayDefault", s as Any]) }
    public func ConnectDisplay2(f: @escaping (_ num: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDisplay2", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectDisplay2() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDisplay2"]) }
    public func Display2(num: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Display2", num as Any]) }
    public func Display2Default(num: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Display2Default", num as Any]) }
    public func ConnectDisplay3(f: @escaping (_ num: Float) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDisplay3", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Float) } as Any) }
    public func DisconnectDisplay3() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDisplay3"]) }
    public func Display3(num: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Display3", num as Any]) }
    public func Display3Default(num: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Display3Default", num as Any]) }
    public func IntValue() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "IntValue"]) as! Float) }
    public func Mode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Mode"]) as! Float) }
    public func ConnectOverflow(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectOverflow", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectOverflow() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectOverflow"]) }
    public func Overflow() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Overflow"]) }
    public func SegmentStyle() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SegmentStyle"]) as! Float) }
    public func ConnectSetBinMode(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetBinMode", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectSetBinMode() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetBinMode"]) }
    public func SetBinMode() { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetBinMode"]) }
    public func SetBinModeDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetBinModeDefault"]) }
    public func ConnectSetDecMode(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetDecMode", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectSetDecMode() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetDecMode"]) }
    public func SetDecMode() { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDecMode"]) }
    public func SetDecModeDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDecModeDefault"]) }
    public func SetDigitCount(numDigits: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDigitCount", numDigits as Any]) }
    public func ConnectSetHexMode(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetHexMode", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectSetHexMode() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetHexMode"]) }
    public func SetHexMode() { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetHexMode"]) }
    public func SetHexModeDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetHexModeDefault"]) }
    public func SetMode(vql: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMode", vql as Any]) }
    public func ConnectSetOctMode(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetOctMode", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectSetOctMode() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetOctMode"]) }
    public func SetOctMode() { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOctMode"]) }
    public func SetOctModeDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOctModeDefault"]) }
    public func SetSegmentStyle(vql: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSegmentStyle", vql as Any]) }
    public func ConnectSetSmallDecimalPoint(f: @escaping (_ vbo: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetSmallDecimalPoint", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectSetSmallDecimalPoint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetSmallDecimalPoint"]) }
    public func SetSmallDecimalPoint(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSmallDecimalPoint", vbo as Any]) }
    public func SetSmallDecimalPointDefault(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSmallDecimalPointDefault", vbo as Any]) }
    public func SmallDecimalPoint() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "SmallDecimalPoint"]) as! Bool }
    public func Value() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "Value"]) as! Float }
    public func ConnectDestroyQLCDNumber(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQLCDNumber", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQLCDNumber() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQLCDNumber"]) }
    public func DestroyQLCDNumber() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQLCDNumber"]) }
    public func DestroyQLCDNumberDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQLCDNumberDefault"]) }
}

public func NewQLCDNumberFromPointer(ptr: String) -> QLCDNumber { let r = QLCDNumber(); r.initFrom(p: ptr, n: "widgets.QLCDNumber"); return r }
public func NewQLCDNumber(parent: QWidget_ITF? = nil) -> QLCDNumber { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQLCDNumber", "", parent as Any]) as! QLCDNumber }
public func NewQLCDNumber2(numDigits: Int, parent: QWidget_ITF? = nil) -> QLCDNumber { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQLCDNumber2", "", numDigits as Any, parent as Any]) as! QLCDNumber }
public protocol QLabel_ITF: QFrame_ITF {
    func QLabel_PTR() -> QLabel
}

public class QLabel: QFrame, QLabel_ITF {
    public func QLabel_PTR() -> QLabel { callLocalFunction(l: ["", Pointer(), ___className, "QLabel_PTR"]) as! QLabel }
    public func Alignment() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Alignment"]) as! Float) }
    public func Buddy() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "Buddy"]) as! QWidget }
    public func ConnectClear(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectClear", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectClear() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectClear"]) }
    public func Clear() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Clear"]) }
    public func ClearDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearDefault"]) }
    public func HasScaledContents() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "HasScaledContents"]) as! Bool }
    public func HasSelectedText() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "HasSelectedText"]) as! Bool }
    public func Indent() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Indent"]) as! Float) }
    public func ConnectLinkActivated(f: @escaping (_ link: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectLinkActivated", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectLinkActivated() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectLinkActivated"]) }
    public func LinkActivated(link: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "LinkActivated", link as Any]) }
    public func ConnectLinkHovered(f: @escaping (_ link: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectLinkHovered", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectLinkHovered() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectLinkHovered"]) }
    public func LinkHovered(link: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "LinkHovered", link as Any]) }
    public func Margin() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Margin"]) as! Float) }
    public func Movie() -> QMovie { callLocalFunction(l: ["", Pointer(), ___className, "Movie"]) as! QMovie }
    public func OpenExternalLinks() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "OpenExternalLinks"]) as! Bool }
    public func Picture() -> QPicture { callLocalFunction(l: ["", Pointer(), ___className, "Picture"]) as! QPicture }
    public func Pixmap() -> QPixmap { callLocalFunction(l: ["", Pointer(), ___className, "Pixmap"]) as! QPixmap }
    public func SelectedText() -> String { callLocalFunction(l: ["", Pointer(), ___className, "SelectedText"]) as! String }
    public func SelectionStart() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SelectionStart"]) as! Float) }
    public func SetAlignment(vqt: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAlignment", vqt as Any]) }
    public func SetBuddy(buddy: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetBuddy", buddy as Any]) }
    public func SetIndent(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIndent", vi as Any]) }
    public func SetMargin(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMargin", vi as Any]) }
    public func ConnectSetMovie(f: @escaping (_ movie: QMovie) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetMovie", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QMovie) } as Any) }
    public func DisconnectSetMovie() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetMovie"]) }
    public func SetMovie(movie: QMovie_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMovie", movie as Any]) }
    public func SetMovieDefault(movie: QMovie_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMovieDefault", movie as Any]) }
    public func ConnectSetNum(f: @escaping (_ num: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetNum", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSetNum() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetNum"]) }
    public func SetNum(num: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetNum", num as Any]) }
    public func SetNumDefault(num: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetNumDefault", num as Any]) }
    public func ConnectSetNum2(f: @escaping (_ num: Float) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetNum2", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Float) } as Any) }
    public func DisconnectSetNum2() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetNum2"]) }
    public func SetNum2(num: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetNum2", num as Any]) }
    public func SetNum2Default(num: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetNum2Default", num as Any]) }
    public func SetOpenExternalLinks(open: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOpenExternalLinks", open as Any]) }
    public func ConnectSetPicture(f: @escaping (_ picture: QPicture) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetPicture", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPicture) } as Any) }
    public func DisconnectSetPicture() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetPicture"]) }
    public func SetPicture(picture: QPicture_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPicture", picture as Any]) }
    public func SetPictureDefault(picture: QPicture_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPictureDefault", picture as Any]) }
    public func ConnectSetPixmap(f: @escaping (_ vqp: QPixmap) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetPixmap", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPixmap) } as Any) }
    public func DisconnectSetPixmap() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetPixmap"]) }
    public func SetPixmap(vqp: QPixmap_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPixmap", vqp as Any]) }
    public func SetPixmapDefault(vqp: QPixmap_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPixmapDefault", vqp as Any]) }
    public func SetScaledContents(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetScaledContents", vbo as Any]) }
    public func SetSelection(start: Int, length: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSelection", start as Any, length as Any]) }
    public func ConnectSetText(f: @escaping (_ vqs: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetText", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectSetText() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetText"]) }
    public func SetText(vqs: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetText", vqs as Any]) }
    public func SetTextDefault(vqs: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTextDefault", vqs as Any]) }
    public func SetTextFormat(vqt: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTextFormat", vqt as Any]) }
    public func SetTextInteractionFlags(flags: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTextInteractionFlags", flags as Any]) }
    public func SetWordWrap(on: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWordWrap", on as Any]) }
    public func Text() -> String { callLocalFunction(l: ["", Pointer(), ___className, "Text"]) as! String }
    public func TextFormat() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TextFormat"]) as! Float) }
    public func TextInteractionFlags() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TextInteractionFlags"]) as! Float) }
    public func WordWrap() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "WordWrap"]) as! Bool }
    public func ConnectDestroyQLabel(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQLabel", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQLabel() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQLabel"]) }
    public func DestroyQLabel() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQLabel"]) }
    public func DestroyQLabelDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQLabelDefault"]) }
}

public func NewQLabelFromPointer(ptr: String) -> QLabel { let r = QLabel(); r.initFrom(p: ptr, n: "widgets.QLabel"); return r }
public func NewQLabel(parent: QWidget_ITF? = nil, ff: Int) -> QLabel { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQLabel", "", parent as Any, ff as Any]) as! QLabel }
public func NewQLabel2(text: String, parent: QWidget_ITF? = nil, ff: Int) -> QLabel { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQLabel2", "", text as Any, parent as Any, ff as Any]) as! QLabel }
public protocol QLayout_ITF: QLayoutItem_ITF {
    func QLayout_PTR() -> QLayout
    func QObject_PTR() -> QObject
}

public class QLayout: QLayoutItem, QLayout_ITF {
    public func QObject_PTR() -> QObject { callLocalFunction(l: ["", Pointer(), ___className, "QObject_PTR"]) as! QObject }
    public func QLayout_PTR() -> QLayout { callLocalFunction(l: ["", Pointer(), ___className, "QLayout_PTR"]) as! QLayout }
    public func Activate() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "Activate"]) as! Bool }
    public func AddChildLayout(l: QLayout_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddChildLayout", l as Any]) }
    public func AddChildWidget(w: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddChildWidget", w as Any]) }
    public func ConnectAddItem(f: @escaping (_ item: QLayoutItem) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectAddItem", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QLayoutItem) } as Any) }
    public func DisconnectAddItem() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectAddItem"]) }
    public func AddItem(item: QLayoutItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddItem", item as Any]) }
    public func AddWidget(w: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddWidget", w as Any]) }
    public func AlignmentRect(r: QRect_ITF? = nil) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "AlignmentRect", r as Any]) as! QRect }
    public func ConnectChildEvent(f: @escaping (_ e: QChildEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectChildEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QChildEvent) } as Any) }
    public func DisconnectChildEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectChildEvent"]) }
    public func ChildEvent(e: QChildEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ChildEvent", e as Any]) }
    public func ChildEventDefault(e: QChildEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ChildEventDefault", e as Any]) }
    public func ClosestAcceptableSize(widget: QWidget_ITF? = nil, size: QSize_ITF? = nil) -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "ClosestAcceptableSize", widget as Any, size as Any]) as! QSize }
    public func ContentsMargins() -> QMargins { callLocalFunction(l: ["", Pointer(), ___className, "ContentsMargins"]) as! QMargins }
    public func ContentsRect() -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "ContentsRect"]) as! QRect }
    public func ConnectCount(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCount", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectCount() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCount"]) }
    public func Count() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Count"]) as! Float) }
    override public func ConnectExpandingDirections(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectExpandingDirections", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectExpandingDirections() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectExpandingDirections"]) }
    override public func ExpandingDirections() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ExpandingDirections"]) as! Float) }
    public func ExpandingDirectionsDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ExpandingDirectionsDefault"]) as! Float) }
    override public func ConnectGeometry(f: @escaping () -> QRect) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectGeometry", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectGeometry() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectGeometry"]) }
    override public func Geometry() -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "Geometry"]) as! QRect }
    public func GeometryDefault() -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "GeometryDefault"]) as! QRect }
    public func GetContentsMargins(left: Int, top: Int, right: Int, bottom: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "GetContentsMargins", left as Any, top as Any, right as Any, bottom as Any]) }
    public func ConnectIndexOf(f: @escaping (_ widget: QWidget) -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectIndexOf", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QWidget) } as Any) }
    public func DisconnectIndexOf() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectIndexOf"]) }
    public func IndexOf(widget: QWidget_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "IndexOf", widget as Any]) as! Float) }
    public func IndexOfDefault(widget: QWidget_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "IndexOfDefault", widget as Any]) as! Float) }
    public func IndexOf2(layoutItem: QLayoutItem_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "IndexOf2", layoutItem as Any]) as! Float) }
    override public func ConnectIsEmpty(f: @escaping () -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectIsEmpty", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectIsEmpty() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectIsEmpty"]) }
    override public func IsEmpty() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsEmpty"]) as! Bool }
    public func IsEmptyDefault() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsEmptyDefault"]) as! Bool }
    public func IsEnabled() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsEnabled"]) as! Bool }
    public func ConnectItemAt(f: @escaping (_ index: Int) -> QLayoutItem) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectItemAt", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectItemAt() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectItemAt"]) }
    public func ItemAt(index: Int) -> QLayoutItem { callLocalFunction(l: ["", Pointer(), ___className, "ItemAt", index as Any]) as! QLayoutItem }
    override public func ConnectMaximumSize(f: @escaping () -> QSize) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMaximumSize", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectMaximumSize() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMaximumSize"]) }
    override public func MaximumSize() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "MaximumSize"]) as! QSize }
    public func MaximumSizeDefault() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "MaximumSizeDefault"]) as! QSize }
    public func MenuBar() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "MenuBar"]) as! QWidget }
    override public func ConnectMinimumSize(f: @escaping () -> QSize) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMinimumSize", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectMinimumSize() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMinimumSize"]) }
    override public func MinimumSize() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "MinimumSize"]) as! QSize }
    public func MinimumSizeDefault() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "MinimumSizeDefault"]) as! QSize }
    public func ParentWidget() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "ParentWidget"]) as! QWidget }
    public func RemoveItem(item: QLayoutItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveItem", item as Any]) }
    public func RemoveWidget(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveWidget", widget as Any]) }
    public func ReplaceWidget(from: QWidget_ITF? = nil, to: QWidget_ITF? = nil, options: Int) -> QLayoutItem { callLocalFunction(l: ["", Pointer(), ___className, "ReplaceWidget", from as Any, to as Any, options as Any]) as! QLayoutItem }
    public func SetAlignment_QObject(w: QWidget_ITF? = nil, alignment: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "SetAlignment", w as Any, alignment as Any]) as! Bool }
    public func SetAlignment2(l: QLayout_ITF? = nil, alignment: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "SetAlignment2", l as Any, alignment as Any]) as! Bool }
    public func SetContentsMargins(left: Int, top: Int, right: Int, bottom: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetContentsMargins", left as Any, top as Any, right as Any, bottom as Any]) }
    public func SetContentsMargins2(margins: QMargins_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetContentsMargins2", margins as Any]) }
    public func SetEnabled(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetEnabled", enable as Any]) }
    override public func ConnectSetGeometry(f: @escaping (_ r: QRect) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetGeometry", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QRect) } as Any) }
    override public func DisconnectSetGeometry() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetGeometry"]) }
    override public func SetGeometry(r: QRect_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetGeometry", r as Any]) }
    public func SetGeometryDefault(r: QRect_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetGeometryDefault", r as Any]) }
    public func SetMenuBar(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMenuBar", widget as Any]) }
    public func SetSizeConstraint(vql: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSizeConstraint", vql as Any]) }
    public func SetSpacing(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSpacing", vi as Any]) }
    public func SizeConstraint() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SizeConstraint"]) as! Float) }
    public func Spacing() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Spacing"]) as! Float) }
    public func ConnectTakeAt(f: @escaping (_ index: Int) -> QLayoutItem) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTakeAt", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectTakeAt() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTakeAt"]) }
    public func TakeAt(index: Int) -> QLayoutItem { callLocalFunction(l: ["", Pointer(), ___className, "TakeAt", index as Any]) as! QLayoutItem }
    public func Update() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Update"]) }
    public func ConnectNotify(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ConnectNotify", sign as Any]) }
    public func ConnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ConnectNotifyDefault", sign as Any]) }
    public func CustomEvent(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CustomEvent", event as Any]) }
    public func CustomEventDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CustomEventDefault", event as Any]) }
    public func DeleteLater() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DeleteLater"]) }
    public func DeleteLaterDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DeleteLaterDefault"]) }
    public func DisconnectNotify(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DisconnectNotify", sign as Any]) }
    public func DisconnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DisconnectNotifyDefault", sign as Any]) }
    public func Event(e: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "Event", e as Any]) as! Bool }
    public func EventDefault(e: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventDefault", e as Any]) as! Bool }
    public func EventFilter(watched: QObject_ITF? = nil, event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventFilter", watched as Any, event as Any]) as! Bool }
    public func EventFilterDefault(watched: QObject_ITF? = nil, event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventFilterDefault", watched as Any, event as Any]) as! Bool }
    public func MetaObject() -> QMetaObject { callLocalFunction(l: ["", Pointer(), ___className, "MetaObject"]) as! QMetaObject }
    public func MetaObjectDefault() -> QMetaObject { callLocalFunction(l: ["", Pointer(), ___className, "MetaObjectDefault"]) as! QMetaObject }
    public func TimerEvent(event: QTimerEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TimerEvent", event as Any]) }
    public func TimerEventDefault(event: QTimerEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TimerEventDefault", event as Any]) }
    override public func SizeHint() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "SizeHint"]) as! QSize }
    public func SizeHintDefault() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "SizeHintDefault"]) as! QSize }
}

public func NewQLayoutFromPointer(ptr: String) -> QLayout { let r = QLayout(); r.initFrom(p: ptr, n: "widgets.QLayout"); return r }
public func NewQLayout(parent: QWidget_ITF? = nil) -> QLayout { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQLayout", "", parent as Any]) as! QLayout }
public func NewQLayout2() -> QLayout { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQLayout2", ""]) as! QLayout }
public func QLayout_ClosestAcceptableSize(widget: QWidget_ITF? = nil, size: QSize_ITF? = nil) -> QSize { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QLayout_ClosestAcceptableSize", "", widget as Any, size as Any]) as! QSize }
public protocol QLayoutItem_ITF {
    func QLayoutItem_PTR() -> QLayoutItem
}

public class QLayoutItem: Internal, QLayoutItem_ITF {
    public func QLayoutItem_PTR() -> QLayoutItem { callLocalFunction(l: ["", Pointer(), ___className, "QLayoutItem_PTR"]) as! QLayoutItem }
    public func Alignment() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Alignment"]) as! Float) }
    public func ConnectControlTypes(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectControlTypes", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectControlTypes() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectControlTypes"]) }
    public func ControlTypes() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ControlTypes"]) as! Float) }
    public func ControlTypesDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ControlTypesDefault"]) as! Float) }
    public func ConnectExpandingDirections(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectExpandingDirections", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectExpandingDirections() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectExpandingDirections"]) }
    public func ExpandingDirections() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ExpandingDirections"]) as! Float) }
    public func ConnectGeometry(f: @escaping () -> QRect) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectGeometry", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectGeometry() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectGeometry"]) }
    public func Geometry() -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "Geometry"]) as! QRect }
    public func ConnectHasHeightForWidth(f: @escaping () -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHasHeightForWidth", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectHasHeightForWidth() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHasHeightForWidth"]) }
    public func HasHeightForWidth() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "HasHeightForWidth"]) as! Bool }
    public func HasHeightForWidthDefault() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "HasHeightForWidthDefault"]) as! Bool }
    public func ConnectHeightForWidth(f: @escaping (_ vi: Int) -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHeightForWidth", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectHeightForWidth() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHeightForWidth"]) }
    public func HeightForWidth(vi: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "HeightForWidth", vi as Any]) as! Float) }
    public func HeightForWidthDefault(vi: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "HeightForWidthDefault", vi as Any]) as! Float) }
    public func ConnectInvalidate(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectInvalidate", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectInvalidate() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectInvalidate"]) }
    public func Invalidate() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Invalidate"]) }
    public func InvalidateDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "InvalidateDefault"]) }
    public func ConnectIsEmpty(f: @escaping () -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectIsEmpty", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectIsEmpty() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectIsEmpty"]) }
    public func IsEmpty() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsEmpty"]) as! Bool }
    public func ConnectLayout(f: @escaping () -> QLayout) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectLayout", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectLayout() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectLayout"]) }
    public func Layout() -> QLayout { callLocalFunction(l: ["", Pointer(), ___className, "Layout"]) as! QLayout }
    public func LayoutDefault() -> QLayout { callLocalFunction(l: ["", Pointer(), ___className, "LayoutDefault"]) as! QLayout }
    public func ConnectMaximumSize(f: @escaping () -> QSize) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMaximumSize", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectMaximumSize() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMaximumSize"]) }
    public func MaximumSize() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "MaximumSize"]) as! QSize }
    public func ConnectMinimumHeightForWidth(f: @escaping (_ w: Int) -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMinimumHeightForWidth", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectMinimumHeightForWidth() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMinimumHeightForWidth"]) }
    public func MinimumHeightForWidth(w: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "MinimumHeightForWidth", w as Any]) as! Float) }
    public func MinimumHeightForWidthDefault(w: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "MinimumHeightForWidthDefault", w as Any]) as! Float) }
    public func ConnectMinimumSize(f: @escaping () -> QSize) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMinimumSize", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectMinimumSize() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMinimumSize"]) }
    public func MinimumSize() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "MinimumSize"]) as! QSize }
    public func SetAlignment(alignment: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAlignment", alignment as Any]) }
    public func ConnectSetGeometry(f: @escaping (_ r: QRect) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetGeometry", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QRect) } as Any) }
    public func DisconnectSetGeometry() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetGeometry"]) }
    public func SetGeometry(r: QRect_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetGeometry", r as Any]) }
    public func ConnectSizeHint(f: @escaping () -> QSize) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSizeHint", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectSizeHint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSizeHint"]) }
    public func SizeHint() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "SizeHint"]) as! QSize }
    public func ConnectSpacerItem(f: @escaping () -> QSpacerItem) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSpacerItem", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectSpacerItem() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSpacerItem"]) }
    public func SpacerItem() -> QSpacerItem { callLocalFunction(l: ["", Pointer(), ___className, "SpacerItem"]) as! QSpacerItem }
    public func SpacerItemDefault() -> QSpacerItem { callLocalFunction(l: ["", Pointer(), ___className, "SpacerItemDefault"]) as! QSpacerItem }
    public func ConnectWidget(f: @escaping () -> QWidget) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectWidget", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectWidget() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectWidget"]) }
    public func Widget() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "Widget"]) as! QWidget }
    public func WidgetDefault() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "WidgetDefault"]) as! QWidget }
    public func ConnectDestroyQLayoutItem(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQLayoutItem", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQLayoutItem() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQLayoutItem"]) }
    public func DestroyQLayoutItem() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQLayoutItem"]) }
    public func DestroyQLayoutItemDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQLayoutItemDefault"]) }
}

public func NewQLayoutItemFromPointer(ptr: String) -> QLayoutItem { let r = QLayoutItem(); r.initFrom(p: ptr, n: "widgets.QLayoutItem"); return r }
public func NewQLayoutItem(alignment: Int) -> QLayoutItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQLayoutItem", "", alignment as Any]) as! QLayoutItem }
public protocol QLineEdit_ITF: QWidget_ITF {
    func QLineEdit_PTR() -> QLineEdit
}

public class QLineEdit: QWidget, QLineEdit_ITF {
    public func QLineEdit_PTR() -> QLineEdit { callLocalFunction(l: ["", Pointer(), ___className, "QLineEdit_PTR"]) as! QLineEdit }
    public func AddAction_QLineEdit(action: QAction_ITF? = nil, position: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddAction", action as Any, position as Any]) }
    public func AddAction2(icon: QIcon_ITF? = nil, position: Int) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "AddAction2", icon as Any, position as Any]) as! QAction }
    public func Alignment() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Alignment"]) as! Float) }
    public func Backspace() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Backspace"]) }
    public func ConnectClear(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectClear", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectClear() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectClear"]) }
    public func Clear() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Clear"]) }
    public func ClearDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearDefault"]) }
    public func Completer() -> QCompleter { callLocalFunction(l: ["", Pointer(), ___className, "Completer"]) as! QCompleter }
    public func ConnectCopy(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCopy", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectCopy() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCopy"]) }
    public func Copy() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Copy"]) }
    public func CopyDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "CopyDefault"]) }
    public func CreateStandardContextMenu() -> QMenu { callLocalFunction(l: ["", Pointer(), ___className, "CreateStandardContextMenu"]) as! QMenu }
    public func CursorBackward(mark: Bool, steps: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CursorBackward", mark as Any, steps as Any]) }
    public func CursorForward(mark: Bool, steps: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CursorForward", mark as Any, steps as Any]) }
    public func CursorMoveStyle() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CursorMoveStyle"]) as! Float) }
    public func CursorPosition() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CursorPosition"]) as! Float) }
    public func CursorPositionAt(pos: QPoint_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CursorPositionAt", pos as Any]) as! Float) }
    public func ConnectCursorPositionChanged(f: @escaping (_ oldPos: Int, _ newPos: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCursorPositionChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float)) } as Any) }
    public func DisconnectCursorPositionChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCursorPositionChanged"]) }
    public func CursorPositionChanged(oldPos: Int, newPos: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CursorPositionChanged", oldPos as Any, newPos as Any]) }
    public func CursorRect() -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "CursorRect"]) as! QRect }
    public func CursorWordBackward(mark: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CursorWordBackward", mark as Any]) }
    public func CursorWordForward(mark: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CursorWordForward", mark as Any]) }
    public func ConnectCut(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCut", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectCut() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCut"]) }
    public func Cut() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Cut"]) }
    public func CutDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "CutDefault"]) }
    public func Del() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Del"]) }
    public func Deselect() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Deselect"]) }
    public func DisplayText() -> String { callLocalFunction(l: ["", Pointer(), ___className, "DisplayText"]) as! String }
    public func DragEnabled() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "DragEnabled"]) as! Bool }
    public func EchoMode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "EchoMode"]) as! Float) }
    public func ConnectEditingFinished(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectEditingFinished", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectEditingFinished() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectEditingFinished"]) }
    public func EditingFinished() { _ = callLocalFunction(l: ["", Pointer(), ___className, "EditingFinished"]) }
    public func End(mark: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "End", mark as Any]) }
    public func GetTextMargins(left: Int, top: Int, right: Int, bottom: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "GetTextMargins", left as Any, top as Any, right as Any, bottom as Any]) }
    public func HasAcceptableInput() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "HasAcceptableInput"]) as! Bool }
    public func HasFrame() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "HasFrame"]) as! Bool }
    public func HasSelectedText() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "HasSelectedText"]) as! Bool }
    public func Home(mark: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Home", mark as Any]) }
    public func InitStyleOption(option: QStyleOptionFrame_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InitStyleOption", option as Any]) }
    public func InputMask() -> String { callLocalFunction(l: ["", Pointer(), ___className, "InputMask"]) as! String }
    public func ConnectInputRejected(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectInputRejected", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectInputRejected() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectInputRejected"]) }
    public func InputRejected() { _ = callLocalFunction(l: ["", Pointer(), ___className, "InputRejected"]) }
    public func Insert(newText: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Insert", newText as Any]) }
    public func IsClearButtonEnabled() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsClearButtonEnabled"]) as! Bool }
    public func IsModified() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsModified"]) as! Bool }
    public func IsReadOnly() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsReadOnly"]) as! Bool }
    public func IsRedoAvailable() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsRedoAvailable"]) as! Bool }
    public func IsUndoAvailable() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsUndoAvailable"]) as! Bool }
    public func MaxLength() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "MaxLength"]) as! Float) }
    public func ConnectPaste(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPaste", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectPaste() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPaste"]) }
    public func Paste() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Paste"]) }
    public func PasteDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "PasteDefault"]) }
    public func PlaceholderText() -> String { callLocalFunction(l: ["", Pointer(), ___className, "PlaceholderText"]) as! String }
    public func ConnectRedo(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRedo", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectRedo() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRedo"]) }
    public func Redo() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Redo"]) }
    public func RedoDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "RedoDefault"]) }
    public func ConnectReturnPressed(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectReturnPressed", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectReturnPressed() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectReturnPressed"]) }
    public func ReturnPressed() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ReturnPressed"]) }
    public func ConnectSelectAll(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSelectAll", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectSelectAll() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSelectAll"]) }
    public func SelectAll() { _ = callLocalFunction(l: ["", Pointer(), ___className, "SelectAll"]) }
    public func SelectAllDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "SelectAllDefault"]) }
    public func SelectedText() -> String { callLocalFunction(l: ["", Pointer(), ___className, "SelectedText"]) as! String }
    public func ConnectSelectionChanged(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSelectionChanged", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectSelectionChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSelectionChanged"]) }
    public func SelectionChanged() { _ = callLocalFunction(l: ["", Pointer(), ___className, "SelectionChanged"]) }
    public func SelectionEnd() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SelectionEnd"]) as! Float) }
    public func SelectionLength() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SelectionLength"]) as! Float) }
    public func SelectionStart() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SelectionStart"]) as! Float) }
    public func SetAlignment(flag: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAlignment", flag as Any]) }
    public func SetClearButtonEnabled(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetClearButtonEnabled", enable as Any]) }
    public func SetCompleter(c: QCompleter_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCompleter", c as Any]) }
    public func SetCursorMoveStyle(style: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCursorMoveStyle", style as Any]) }
    public func SetCursorPosition(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCursorPosition", vi as Any]) }
    public func SetDragEnabled(b: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDragEnabled", b as Any]) }
    public func SetEchoMode(vql: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetEchoMode", vql as Any]) }
    public func SetFrame(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFrame", vbo as Any]) }
    public func SetInputMask(inputMask: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetInputMask", inputMask as Any]) }
    public func SetMaxLength(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMaxLength", vi as Any]) }
    public func SetModified(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetModified", vbo as Any]) }
    public func SetPlaceholderText(vqs: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPlaceholderText", vqs as Any]) }
    public func SetReadOnly(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetReadOnly", vbo as Any]) }
    public func SetSelection(start: Int, length: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSelection", start as Any, length as Any]) }
    public func ConnectSetText(f: @escaping (_ vqs: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetText", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectSetText() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetText"]) }
    public func SetText(vqs: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetText", vqs as Any]) }
    public func SetTextDefault(vqs: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTextDefault", vqs as Any]) }
    public func SetTextMargins(left: Int, top: Int, right: Int, bottom: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTextMargins", left as Any, top as Any, right as Any, bottom as Any]) }
    public func SetTextMargins2(margins: QMargins_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTextMargins2", margins as Any]) }
    public func SetValidator(v: QValidator_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetValidator", v as Any]) }
    public func Text() -> String { callLocalFunction(l: ["", Pointer(), ___className, "Text"]) as! String }
    public func ConnectTextChanged(f: @escaping (_ text: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTextChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectTextChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTextChanged"]) }
    public func TextChanged(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TextChanged", text as Any]) }
    public func ConnectTextEdited(f: @escaping (_ text: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTextEdited", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectTextEdited() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTextEdited"]) }
    public func TextEdited(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TextEdited", text as Any]) }
    public func TextMargins() -> QMargins { callLocalFunction(l: ["", Pointer(), ___className, "TextMargins"]) as! QMargins }
    public func ConnectUndo(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectUndo", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectUndo() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectUndo"]) }
    public func Undo() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Undo"]) }
    public func UndoDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UndoDefault"]) }
    public func Validator() -> QValidator { callLocalFunction(l: ["", Pointer(), ___className, "Validator"]) as! QValidator }
    public func ConnectDestroyQLineEdit(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQLineEdit", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQLineEdit() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQLineEdit"]) }
    public func DestroyQLineEdit() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQLineEdit"]) }
    public func DestroyQLineEditDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQLineEditDefault"]) }
}

public func NewQLineEditFromPointer(ptr: String) -> QLineEdit { let r = QLineEdit(); r.initFrom(p: ptr, n: "widgets.QLineEdit"); return r }
public func NewQLineEdit(parent: QWidget_ITF? = nil) -> QLineEdit { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQLineEdit", "", parent as Any]) as! QLineEdit }
public func NewQLineEdit2(contents: String, parent: QWidget_ITF? = nil) -> QLineEdit { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQLineEdit2", "", contents as Any, parent as Any]) as! QLineEdit }
public protocol QListView_ITF: QAbstractItemView_ITF {
    func QListView_PTR() -> QListView
}

public class QListView: QAbstractItemView, QListView_ITF {
    public func QListView_PTR() -> QListView { callLocalFunction(l: ["", Pointer(), ___className, "QListView_PTR"]) as! QListView }
    public func BatchSize() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "BatchSize"]) as! Float) }
    public func ClearPropertyFlags() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearPropertyFlags"]) }
    override public func ConnectCurrentChanged(f: @escaping (_ current: QModelIndex, _ previous: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCurrentChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex, inp[1] as! QModelIndex) } as Any) }
    override public func DisconnectCurrentChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCurrentChanged"]) }
    override public func CurrentChanged(current: QModelIndex_ITF? = nil, previous: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CurrentChanged", current as Any, previous as Any]) }
    override public func CurrentChangedDefault(current: QModelIndex_ITF? = nil, previous: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CurrentChangedDefault", current as Any, previous as Any]) }
    override public func ConnectDataChanged(f: @escaping (_ topLeft: QModelIndex, _ bottomRight: QModelIndex, _ roles: [Int]) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDataChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex, inp[1] as! QModelIndex, inp[2] as! [Int]) } as Any) }
    override public func DisconnectDataChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDataChanged"]) }
    override public func DataChanged(topLeft: QModelIndex_ITF? = nil, bottomRight: QModelIndex_ITF? = nil, roles: [Int]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DataChanged", topLeft as Any, bottomRight as Any, roles as Any]) }
    override public func DataChangedDefault(topLeft: QModelIndex_ITF? = nil, bottomRight: QModelIndex_ITF? = nil, roles: [Int]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DataChangedDefault", topLeft as Any, bottomRight as Any, roles as Any]) }
    public func Flow() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Flow"]) as! Float) }
    public func GridSize() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "GridSize"]) as! QSize }
    override public func ConnectHorizontalOffset(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHorizontalOffset", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectHorizontalOffset() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHorizontalOffset"]) }
    override public func HorizontalOffset() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "HorizontalOffset"]) as! Float) }
    public func HorizontalOffsetDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "HorizontalOffsetDefault"]) as! Float) }
    override public func ConnectIndexAt(f: @escaping (_ p: QPoint) -> QModelIndex) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectIndexAt", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPoint) } as Any) }
    override public func DisconnectIndexAt() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectIndexAt"]) }
    override public func IndexAt(point: QPoint_ITF? = nil) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "IndexAt", point as Any]) as! QModelIndex }
    public func IndexAtDefault(p: QPoint_ITF? = nil) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "IndexAtDefault", p as Any]) as! QModelIndex }
    override public func ConnectIsIndexHidden(f: @escaping (_ index: QModelIndex) -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectIsIndexHidden", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    override public func DisconnectIsIndexHidden() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectIsIndexHidden"]) }
    override public func IsIndexHidden(index: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsIndexHidden", index as Any]) as! Bool }
    public func IsIndexHiddenDefault(index: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsIndexHiddenDefault", index as Any]) as! Bool }
    public func IsRowHidden(row: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsRowHidden", row as Any]) as! Bool }
    public func IsSelectionRectVisible() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsSelectionRectVisible"]) as! Bool }
    public func IsWrapping() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsWrapping"]) as! Bool }
    public func ItemAlignment() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ItemAlignment"]) as! Float) }
    public func LayoutMode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "LayoutMode"]) as! Float) }
    public func ModelColumn() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ModelColumn"]) as! Float) }
    override public func ConnectMoveCursor(f: @escaping (_ cursorAction: Int, _ modifiers: Int) -> QModelIndex) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMoveCursor", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float)) } as Any) }
    override public func DisconnectMoveCursor() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMoveCursor"]) }
    override public func MoveCursor(cursorAction: Int, modifiers: Int) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "MoveCursor", cursorAction as Any, modifiers as Any]) as! QModelIndex }
    public func MoveCursorDefault(cursorAction: Int, modifiers: Int) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "MoveCursorDefault", cursorAction as Any, modifiers as Any]) as! QModelIndex }
    public func Movement() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Movement"]) as! Float) }
    public func RectForIndex(index: QModelIndex_ITF? = nil) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "RectForIndex", index as Any]) as! QRect }
    public func ResizeMode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ResizeMode"]) as! Float) }
    override public func ConnectRowsAboutToBeRemoved(f: @escaping (_ parent: QModelIndex, _ start: Int, _ end: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRowsAboutToBeRemoved", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex, Int(inp[1] as! Float), Int(inp[2] as! Float)) } as Any) }
    override public func DisconnectRowsAboutToBeRemoved() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRowsAboutToBeRemoved"]) }
    override public func RowsAboutToBeRemoved(parent: QModelIndex_ITF? = nil, start: Int, end: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RowsAboutToBeRemoved", parent as Any, start as Any, end as Any]) }
    override public func RowsAboutToBeRemovedDefault(parent: QModelIndex_ITF? = nil, start: Int, end: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RowsAboutToBeRemovedDefault", parent as Any, start as Any, end as Any]) }
    override public func ConnectRowsInserted(f: @escaping (_ parent: QModelIndex, _ start: Int, _ end: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRowsInserted", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex, Int(inp[1] as! Float), Int(inp[2] as! Float)) } as Any) }
    override public func DisconnectRowsInserted() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRowsInserted"]) }
    override public func RowsInserted(parent: QModelIndex_ITF? = nil, start: Int, end: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RowsInserted", parent as Any, start as Any, end as Any]) }
    override public func RowsInsertedDefault(parent: QModelIndex_ITF? = nil, start: Int, end: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RowsInsertedDefault", parent as Any, start as Any, end as Any]) }
    override public func ConnectScrollTo(f: @escaping (_ index: QModelIndex, _ hint: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectScrollTo", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex, Int(inp[1] as! Float)) } as Any) }
    override public func DisconnectScrollTo() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectScrollTo"]) }
    override public func ScrollTo(index: QModelIndex_ITF? = nil, hint: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ScrollTo", index as Any, hint as Any]) }
    public func ScrollToDefault(index: QModelIndex_ITF? = nil, hint: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ScrollToDefault", index as Any, hint as Any]) }
    override public func ConnectSelectionChanged(f: @escaping (_ selected: QItemSelection, _ deselected: QItemSelection) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSelectionChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QItemSelection, inp[1] as! QItemSelection) } as Any) }
    override public func DisconnectSelectionChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSelectionChanged"]) }
    override public func SelectionChanged(selected: QItemSelection_ITF? = nil, deselected: QItemSelection_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SelectionChanged", selected as Any, deselected as Any]) }
    override public func SelectionChangedDefault(selected: QItemSelection_ITF? = nil, deselected: QItemSelection_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SelectionChangedDefault", selected as Any, deselected as Any]) }
    public func SetBatchSize(batchSize: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetBatchSize", batchSize as Any]) }
    public func SetFlow(flow: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFlow", flow as Any]) }
    public func SetGridSize(size: QSize_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetGridSize", size as Any]) }
    public func SetItemAlignment(alignment: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetItemAlignment", alignment as Any]) }
    public func SetLayoutMode(mode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetLayoutMode", mode as Any]) }
    public func SetModelColumn(column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetModelColumn", column as Any]) }
    public func SetMovement(movement: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMovement", movement as Any]) }
    public func SetPositionForIndex(position: QPoint_ITF? = nil, index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPositionForIndex", position as Any, index as Any]) }
    public func SetResizeMode(mode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetResizeMode", mode as Any]) }
    public func SetRowHidden(row: Int, hide: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRowHidden", row as Any, hide as Any]) }
    override public func ConnectSetSelection(f: @escaping (_ rect: QRect, _ command: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetSelection", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QRect, Int(inp[1] as! Float)) } as Any) }
    override public func DisconnectSetSelection() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetSelection"]) }
    override public func SetSelection(rect: QRect_ITF? = nil, flags: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSelection", rect as Any, flags as Any]) }
    public func SetSelectionDefault(rect: QRect_ITF? = nil, command: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSelectionDefault", rect as Any, command as Any]) }
    public func SetSelectionRectVisible(show: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSelectionRectVisible", show as Any]) }
    public func SetSpacing(space: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSpacing", space as Any]) }
    public func SetUniformItemSizes(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetUniformItemSizes", enable as Any]) }
    public func SetViewMode(mode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetViewMode", mode as Any]) }
    public func SetWordWrap(on: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWordWrap", on as Any]) }
    public func SetWrapping(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWrapping", enable as Any]) }
    public func Spacing() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Spacing"]) as! Float) }
    public func UniformItemSizes() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "UniformItemSizes"]) as! Bool }
    override public func ConnectUpdateGeometries(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectUpdateGeometries", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectUpdateGeometries() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectUpdateGeometries"]) }
    override public func UpdateGeometries() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UpdateGeometries"]) }
    override public func UpdateGeometriesDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UpdateGeometriesDefault"]) }
    override public func ConnectVerticalOffset(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectVerticalOffset", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectVerticalOffset() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectVerticalOffset"]) }
    override public func VerticalOffset() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "VerticalOffset"]) as! Float) }
    public func VerticalOffsetDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "VerticalOffsetDefault"]) as! Float) }
    public func ViewMode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ViewMode"]) as! Float) }
    override public func ConnectVisualRect(f: @escaping (_ index: QModelIndex) -> QRect) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectVisualRect", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    override public func DisconnectVisualRect() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectVisualRect"]) }
    override public func VisualRect(index: QModelIndex_ITF? = nil) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "VisualRect", index as Any]) as! QRect }
    public func VisualRectDefault(index: QModelIndex_ITF? = nil) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "VisualRectDefault", index as Any]) as! QRect }
    override public func ConnectVisualRegionForSelection(f: @escaping (_ selection: QItemSelection) -> QRegion) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectVisualRegionForSelection", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QItemSelection) } as Any) }
    override public func DisconnectVisualRegionForSelection() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectVisualRegionForSelection"]) }
    override public func VisualRegionForSelection(selection: QItemSelection_ITF? = nil) -> QRegion { callLocalFunction(l: ["", Pointer(), ___className, "VisualRegionForSelection", selection as Any]) as! QRegion }
    public func VisualRegionForSelectionDefault(selection: QItemSelection_ITF? = nil) -> QRegion { callLocalFunction(l: ["", Pointer(), ___className, "VisualRegionForSelectionDefault", selection as Any]) as! QRegion }
    public func WordWrap() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "WordWrap"]) as! Bool }
    public func ConnectDestroyQListView(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQListView", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQListView() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQListView"]) }
    public func DestroyQListView() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQListView"]) }
    public func DestroyQListViewDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQListViewDefault"]) }
}

public func NewQListViewFromPointer(ptr: String) -> QListView { let r = QListView(); r.initFrom(p: ptr, n: "widgets.QListView"); return r }
public func NewQListView(parent: QWidget_ITF? = nil) -> QListView { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQListView", "", parent as Any]) as! QListView }
public protocol QListWidget_ITF: QListView_ITF {
    func QListWidget_PTR() -> QListWidget
}

public class QListWidget: QListView, QListWidget_ITF {
    public func QListWidget_PTR() -> QListWidget { callLocalFunction(l: ["", Pointer(), ___className, "QListWidget_PTR"]) as! QListWidget }
    public func AddItem(label: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddItem", label as Any]) }
    public func AddItem2(item: QListWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddItem2", item as Any]) }
    public func AddItems(labels: [String]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddItems", labels as Any]) }
    public func ConnectClear(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectClear", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectClear() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectClear"]) }
    public func Clear() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Clear"]) }
    public func ClearDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearDefault"]) }
    public func ClosePersistentEditor_QListView(item: QListWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClosePersistentEditor", item as Any]) }
    public func Count() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Count"]) as! Float) }
    public func CurrentItem() -> QListWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "CurrentItem"]) as! QListWidgetItem }
    public func ConnectCurrentItemChanged(f: @escaping (_ current: QListWidgetItem, _ previous: QListWidgetItem) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCurrentItemChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QListWidgetItem, inp[1] as! QListWidgetItem) } as Any) }
    public func DisconnectCurrentItemChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCurrentItemChanged"]) }
    public func CurrentItemChanged(current: QListWidgetItem_ITF? = nil, previous: QListWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CurrentItemChanged", current as Any, previous as Any]) }
    public func CurrentRow() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CurrentRow"]) as! Float) }
    public func ConnectCurrentRowChanged(f: @escaping (_ currentRow: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCurrentRowChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectCurrentRowChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCurrentRowChanged"]) }
    public func CurrentRowChanged(currentRow: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CurrentRowChanged", currentRow as Any]) }
    public func ConnectCurrentTextChanged(f: @escaping (_ currentText: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCurrentTextChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectCurrentTextChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCurrentTextChanged"]) }
    public func CurrentTextChanged(currentText: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CurrentTextChanged", currentText as Any]) }
    public func ConnectDropMimeData(f: @escaping (_ index: Int, _ data: QMimeData, _ action: Int) -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDropMimeData", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! QMimeData, Int(inp[2] as! Float)) } as Any) }
    public func DisconnectDropMimeData() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDropMimeData"]) }
    public func DropMimeData(index: Int, data: QMimeData_ITF? = nil, action: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "DropMimeData", index as Any, data as Any, action as Any]) as! Bool }
    public func DropMimeDataDefault(index: Int, data: QMimeData_ITF? = nil, action: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "DropMimeDataDefault", index as Any, data as Any, action as Any]) as! Bool }
    public func EditItem(item: QListWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "EditItem", item as Any]) }
    public func FindItems(text: String, flags: Int) -> [QListWidgetItem] { callLocalFunction(l: ["", Pointer(), ___className, "FindItems", text as Any, flags as Any]) as! [QListWidgetItem] }
    public func IndexFromItem(item: QListWidgetItem_ITF? = nil) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "IndexFromItem", item as Any]) as! QModelIndex }
    public func InsertItem(row: Int, item: QListWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertItem", row as Any, item as Any]) }
    public func InsertItem2(row: Int, label: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertItem2", row as Any, label as Any]) }
    public func InsertItems(row: Int, labels: [String]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertItems", row as Any, labels as Any]) }
    public func IsPersistentEditorOpen_QListView(item: QListWidgetItem_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsPersistentEditorOpen", item as Any]) as! Bool }
    public func IsSortingEnabled() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsSortingEnabled"]) as! Bool }
    public func Item(row: Int) -> QListWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "Item", row as Any]) as! QListWidgetItem }
    public func ConnectItemActivated(f: @escaping (_ item: QListWidgetItem) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectItemActivated", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QListWidgetItem) } as Any) }
    public func DisconnectItemActivated() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectItemActivated"]) }
    public func ItemActivated(item: QListWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ItemActivated", item as Any]) }
    public func ItemAt(p: QPoint_ITF? = nil) -> QListWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "ItemAt", p as Any]) as! QListWidgetItem }
    public func ItemAt2(x: Int, y: Int) -> QListWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "ItemAt2", x as Any, y as Any]) as! QListWidgetItem }
    public func ConnectItemChanged(f: @escaping (_ item: QListWidgetItem) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectItemChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QListWidgetItem) } as Any) }
    public func DisconnectItemChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectItemChanged"]) }
    public func ItemChanged(item: QListWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ItemChanged", item as Any]) }
    public func ConnectItemClicked(f: @escaping (_ item: QListWidgetItem) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectItemClicked", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QListWidgetItem) } as Any) }
    public func DisconnectItemClicked() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectItemClicked"]) }
    public func ItemClicked(item: QListWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ItemClicked", item as Any]) }
    public func ConnectItemDoubleClicked(f: @escaping (_ item: QListWidgetItem) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectItemDoubleClicked", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QListWidgetItem) } as Any) }
    public func DisconnectItemDoubleClicked() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectItemDoubleClicked"]) }
    public func ItemDoubleClicked(item: QListWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ItemDoubleClicked", item as Any]) }
    public func ConnectItemEntered(f: @escaping (_ item: QListWidgetItem) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectItemEntered", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QListWidgetItem) } as Any) }
    public func DisconnectItemEntered() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectItemEntered"]) }
    public func ItemEntered(item: QListWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ItemEntered", item as Any]) }
    public func ItemFromIndex(index: QModelIndex_ITF? = nil) -> QListWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "ItemFromIndex", index as Any]) as! QListWidgetItem }
    public func ConnectItemPressed(f: @escaping (_ item: QListWidgetItem) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectItemPressed", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QListWidgetItem) } as Any) }
    public func DisconnectItemPressed() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectItemPressed"]) }
    public func ItemPressed(item: QListWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ItemPressed", item as Any]) }
    public func ConnectItemSelectionChanged(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectItemSelectionChanged", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectItemSelectionChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectItemSelectionChanged"]) }
    public func ItemSelectionChanged() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ItemSelectionChanged"]) }
    public func ItemWidget(item: QListWidgetItem_ITF? = nil) -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "ItemWidget", item as Any]) as! QWidget }
    public func Items(data: QMimeData_ITF? = nil) -> [QListWidgetItem] { callLocalFunction(l: ["", Pointer(), ___className, "Items", data as Any]) as! [QListWidgetItem] }
    public func ConnectMimeData(f: @escaping (_ items: [QListWidgetItem]) -> QMimeData) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMimeData", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! [QListWidgetItem]) } as Any) }
    public func DisconnectMimeData() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMimeData"]) }
    public func MimeData(items: [QListWidgetItem]) -> QMimeData { callLocalFunction(l: ["", Pointer(), ___className, "MimeData", items as Any]) as! QMimeData }
    public func MimeDataDefault(items: [QListWidgetItem]) -> QMimeData { callLocalFunction(l: ["", Pointer(), ___className, "MimeDataDefault", items as Any]) as! QMimeData }
    public func ConnectMimeTypes(f: @escaping () -> [String]) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMimeTypes", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectMimeTypes() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMimeTypes"]) }
    public func MimeTypes() -> [String] { callLocalFunction(l: ["", Pointer(), ___className, "MimeTypes"]) as! [String] }
    public func MimeTypesDefault() -> [String] { callLocalFunction(l: ["", Pointer(), ___className, "MimeTypesDefault"]) as! [String] }
    public func OpenPersistentEditor_QListView(item: QListWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "OpenPersistentEditor", item as Any]) }
    public func RemoveItemWidget(item: QListWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveItemWidget", item as Any]) }
    public func Row(item: QListWidgetItem_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Row", item as Any]) as! Float) }
    public func ConnectScrollToItem(f: @escaping (_ item: QListWidgetItem, _ hint: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectScrollToItem", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QListWidgetItem, Int(inp[1] as! Float)) } as Any) }
    public func DisconnectScrollToItem() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectScrollToItem"]) }
    public func ScrollToItem(item: QListWidgetItem_ITF? = nil, hint: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ScrollToItem", item as Any, hint as Any]) }
    public func ScrollToItemDefault(item: QListWidgetItem_ITF? = nil, hint: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ScrollToItemDefault", item as Any, hint as Any]) }
    public func SelectedItems() -> [QListWidgetItem] { callLocalFunction(l: ["", Pointer(), ___className, "SelectedItems"]) as! [QListWidgetItem] }
    public func SetCurrentItem(item: QListWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentItem", item as Any]) }
    public func SetCurrentItem2(item: QListWidgetItem_ITF? = nil, command: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentItem2", item as Any, command as Any]) }
    public func SetCurrentRow(row: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentRow", row as Any]) }
    public func SetCurrentRow2(row: Int, command: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentRow2", row as Any, command as Any]) }
    public func SetItemWidget(item: QListWidgetItem_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetItemWidget", item as Any, widget as Any]) }
    public func SetSortingEnabled(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSortingEnabled", enable as Any]) }
    public func SortItems(order: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SortItems", order as Any]) }
    public func ConnectSupportedDropActions(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSupportedDropActions", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectSupportedDropActions() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSupportedDropActions"]) }
    public func SupportedDropActions() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SupportedDropActions"]) as! Float) }
    public func SupportedDropActionsDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SupportedDropActionsDefault"]) as! Float) }
    public func TakeItem(row: Int) -> QListWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "TakeItem", row as Any]) as! QListWidgetItem }
    public func VisualItemRect(item: QListWidgetItem_ITF? = nil) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "VisualItemRect", item as Any]) as! QRect }
    public func ConnectDestroyQListWidget(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQListWidget", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQListWidget() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQListWidget"]) }
    public func DestroyQListWidget() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQListWidget"]) }
    public func DestroyQListWidgetDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQListWidgetDefault"]) }
}

public func NewQListWidgetFromPointer(ptr: String) -> QListWidget { let r = QListWidget(); r.initFrom(p: ptr, n: "widgets.QListWidget"); return r }
public func NewQListWidget(parent: QWidget_ITF? = nil) -> QListWidget { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQListWidget", "", parent as Any]) as! QListWidget }
public protocol QListWidgetItem_ITF {
    func QListWidgetItem_PTR() -> QListWidgetItem
}

public class QListWidgetItem: Internal, QListWidgetItem_ITF {
    public func QListWidgetItem_PTR() -> QListWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "QListWidgetItem_PTR"]) as! QListWidgetItem }
    public func Background() -> QBrush { callLocalFunction(l: ["", Pointer(), ___className, "Background"]) as! QBrush }
    public func CheckState() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CheckState"]) as! Float) }
    public func ConnectClone(f: @escaping () -> QListWidgetItem) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectClone", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectClone() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectClone"]) }
    public func Clone() -> QListWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "Clone"]) as! QListWidgetItem }
    public func CloneDefault() -> QListWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "CloneDefault"]) as! QListWidgetItem }
    public func ConnectData(f: @escaping (_ role: Int) -> QVariant) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectData", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectData() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectData"]) }
    public func Data(role: Int) -> QVariant { callLocalFunction(l: ["", Pointer(), ___className, "Data", role as Any]) as! QVariant }
    public func DataDefault(role: Int) -> QVariant { callLocalFunction(l: ["", Pointer(), ___className, "DataDefault", role as Any]) as! QVariant }
    public func Flags() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Flags"]) as! Float) }
    public func Font() -> QFont { callLocalFunction(l: ["", Pointer(), ___className, "Font"]) as! QFont }
    public func Foreground() -> QBrush { callLocalFunction(l: ["", Pointer(), ___className, "Foreground"]) as! QBrush }
    public func Icon() -> QIcon { callLocalFunction(l: ["", Pointer(), ___className, "Icon"]) as! QIcon }
    public func IsHidden() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsHidden"]) as! Bool }
    public func IsSelected() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsSelected"]) as! Bool }
    public func ListWidget() -> QListWidget { callLocalFunction(l: ["", Pointer(), ___className, "ListWidget"]) as! QListWidget }
    public func ConnectRead(f: @escaping (_ i: QDataStream) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRead", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QDataStream) } as Any) }
    public func DisconnectRead() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRead"]) }
    public func Read(i: QDataStream_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Read", i as Any]) }
    public func ReadDefault(i: QDataStream_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ReadDefault", i as Any]) }
    public func SetBackground(brush: QBrush_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetBackground", brush as Any]) }
    public func SetCheckState(state: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCheckState", state as Any]) }
    public func ConnectSetData(f: @escaping (_ role: Int, _ value: QVariant) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetData", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! QVariant) } as Any) }
    public func DisconnectSetData() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetData"]) }
    public func SetData(role: Int, value: QVariant_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetData", role as Any, value as Any]) }
    public func SetDataDefault(role: Int, value: QVariant_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDataDefault", role as Any, value as Any]) }
    public func SetFlags(flags: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFlags", flags as Any]) }
    public func SetFont(font: QFont_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFont", font as Any]) }
    public func SetForeground(brush: QBrush_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetForeground", brush as Any]) }
    public func SetHidden(hide: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetHidden", hide as Any]) }
    public func SetIcon(icon: QIcon_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIcon", icon as Any]) }
    public func SetSelected(sele: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSelected", sele as Any]) }
    public func SetSizeHint(size: QSize_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSizeHint", size as Any]) }
    public func SetStatusTip(statusTip: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStatusTip", statusTip as Any]) }
    public func SetText(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetText", text as Any]) }
    public func SetTextAlignment(alignment: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTextAlignment", alignment as Any]) }
    public func SetToolTip(toolTip: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetToolTip", toolTip as Any]) }
    public func SetWhatsThis(whatsThis: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWhatsThis", whatsThis as Any]) }
    public func SizeHint() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "SizeHint"]) as! QSize }
    public func StatusTip() -> String { callLocalFunction(l: ["", Pointer(), ___className, "StatusTip"]) as! String }
    public func Text() -> String { callLocalFunction(l: ["", Pointer(), ___className, "Text"]) as! String }
    public func TextAlignment() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TextAlignment"]) as! Float) }
    public func ToolTip() -> String { callLocalFunction(l: ["", Pointer(), ___className, "ToolTip"]) as! String }
    public func Type() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Type"]) as! Float) }
    public func WhatsThis() -> String { callLocalFunction(l: ["", Pointer(), ___className, "WhatsThis"]) as! String }
    public func ConnectWrite(f: @escaping (_ out: QDataStream) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectWrite", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QDataStream) } as Any) }
    public func DisconnectWrite() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectWrite"]) }
    public func Write(out: QDataStream_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Write", out as Any]) }
    public func WriteDefault(out: QDataStream_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "WriteDefault", out as Any]) }
    public func ConnectDestroyQListWidgetItem(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQListWidgetItem", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQListWidgetItem() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQListWidgetItem"]) }
    public func DestroyQListWidgetItem() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQListWidgetItem"]) }
    public func DestroyQListWidgetItemDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQListWidgetItemDefault"]) }
}

public func NewQListWidgetItemFromPointer(ptr: String) -> QListWidgetItem { let r = QListWidgetItem(); r.initFrom(p: ptr, n: "widgets.QListWidgetItem"); return r }
public func NewQListWidgetItem(parent: QListWidget_ITF? = nil, ty: Int) -> QListWidgetItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQListWidgetItem", "", parent as Any, ty as Any]) as! QListWidgetItem }
public func NewQListWidgetItem2(text: String, parent: QListWidget_ITF? = nil, ty: Int) -> QListWidgetItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQListWidgetItem2", "", text as Any, parent as Any, ty as Any]) as! QListWidgetItem }
public func NewQListWidgetItem3(icon: QIcon_ITF? = nil, text: String, parent: QListWidget_ITF? = nil, ty: Int) -> QListWidgetItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQListWidgetItem3", "", icon as Any, text as Any, parent as Any, ty as Any]) as! QListWidgetItem }
public func NewQListWidgetItem4(other: QListWidgetItem_ITF? = nil) -> QListWidgetItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQListWidgetItem4", "", other as Any]) as! QListWidgetItem }
public protocol QMainWindow_ITF: QWidget_ITF {
    func QMainWindow_PTR() -> QMainWindow
}

public class QMainWindow: QWidget, QMainWindow_ITF {
    public func QMainWindow_PTR() -> QMainWindow { callLocalFunction(l: ["", Pointer(), ___className, "QMainWindow_PTR"]) as! QMainWindow }
    public func AddDockWidget(area: Int, dockwidget: QDockWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddDockWidget", area as Any, dockwidget as Any]) }
    public func AddDockWidget2(area: Int, dockwidget: QDockWidget_ITF? = nil, orientation: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddDockWidget2", area as Any, dockwidget as Any, orientation as Any]) }
    public func AddToolBar(area: Int, toolbar: QToolBar_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddToolBar", area as Any, toolbar as Any]) }
    public func AddToolBar2(toolbar: QToolBar_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddToolBar2", toolbar as Any]) }
    public func AddToolBar3(title: String) -> QToolBar { callLocalFunction(l: ["", Pointer(), ___className, "AddToolBar3", title as Any]) as! QToolBar }
    public func AddToolBarBreak(area: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddToolBarBreak", area as Any]) }
    public func CentralWidget() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "CentralWidget"]) as! QWidget }
    public func Corner(corner: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Corner", corner as Any]) as! Float) }
    public func ConnectCreatePopupMenu(f: @escaping () -> QMenu) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCreatePopupMenu", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectCreatePopupMenu() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCreatePopupMenu"]) }
    public func CreatePopupMenu() -> QMenu { callLocalFunction(l: ["", Pointer(), ___className, "CreatePopupMenu"]) as! QMenu }
    public func CreatePopupMenuDefault() -> QMenu { callLocalFunction(l: ["", Pointer(), ___className, "CreatePopupMenuDefault"]) as! QMenu }
    public func DockOptions() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "DockOptions"]) as! Float) }
    public func DockWidgetArea(dockwidget: QDockWidget_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "DockWidgetArea", dockwidget as Any]) as! Float) }
    public func DocumentMode() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "DocumentMode"]) as! Bool }
    public func IconSize() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "IconSize"]) as! QSize }
    public func ConnectIconSizeChanged(f: @escaping (_ iconSize: QSize) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectIconSizeChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QSize) } as Any) }
    public func DisconnectIconSizeChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectIconSizeChanged"]) }
    public func IconSizeChanged(iconSize: QSize_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "IconSizeChanged", iconSize as Any]) }
    public func InsertToolBar(before: QToolBar_ITF? = nil, toolbar: QToolBar_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertToolBar", before as Any, toolbar as Any]) }
    public func InsertToolBarBreak(before: QToolBar_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertToolBarBreak", before as Any]) }
    public func IsAnimated() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsAnimated"]) as! Bool }
    public func IsDockNestingEnabled() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsDockNestingEnabled"]) as! Bool }
    public func MenuBar() -> QMenuBar { callLocalFunction(l: ["", Pointer(), ___className, "MenuBar"]) as! QMenuBar }
    public func MenuWidget() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "MenuWidget"]) as! QWidget }
    public func RemoveDockWidget(dockwidget: QDockWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveDockWidget", dockwidget as Any]) }
    public func RemoveToolBar(toolbar: QToolBar_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveToolBar", toolbar as Any]) }
    public func RemoveToolBarBreak(before: QToolBar_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveToolBarBreak", before as Any]) }
    public func ResizeDocks(docks: [QDockWidget], sizes: [Int], orientation: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResizeDocks", docks as Any, sizes as Any, orientation as Any]) }
    public func RestoreDockWidget(dockwidget: QDockWidget_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "RestoreDockWidget", dockwidget as Any]) as! Bool }
    public func RestoreState(state: QByteArray_ITF? = nil, version: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "RestoreState", state as Any, version as Any]) as! Bool }
    public func SaveState(version: Int) -> QByteArray { callLocalFunction(l: ["", Pointer(), ___className, "SaveState", version as Any]) as! QByteArray }
    public func ConnectSetAnimated(f: @escaping (_ enabled: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetAnimated", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectSetAnimated() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetAnimated"]) }
    public func SetAnimated(enabled: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAnimated", enabled as Any]) }
    public func SetAnimatedDefault(enabled: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAnimatedDefault", enabled as Any]) }
    public func SetCentralWidget(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCentralWidget", widget as Any]) }
    public func SetCorner(corner: Int, area: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCorner", corner as Any, area as Any]) }
    public func ConnectSetDockNestingEnabled(f: @escaping (_ enabled: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetDockNestingEnabled", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectSetDockNestingEnabled() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetDockNestingEnabled"]) }
    public func SetDockNestingEnabled(enabled: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDockNestingEnabled", enabled as Any]) }
    public func SetDockNestingEnabledDefault(enabled: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDockNestingEnabledDefault", enabled as Any]) }
    public func SetDockOptions(options: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDockOptions", options as Any]) }
    public func SetDocumentMode(enabled: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDocumentMode", enabled as Any]) }
    public func SetIconSize(iconSize: QSize_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIconSize", iconSize as Any]) }
    public func SetMenuBar(menuBar: QMenuBar_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMenuBar", menuBar as Any]) }
    public func SetMenuWidget(menuBar: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMenuWidget", menuBar as Any]) }
    public func SetStatusBar(statusbar: QStatusBar_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStatusBar", statusbar as Any]) }
    public func SetTabPosition(areas: Int, tabPosition: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabPosition", areas as Any, tabPosition as Any]) }
    public func SetTabShape(tabShape: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabShape", tabShape as Any]) }
    public func SetToolButtonStyle(toolButtonStyle: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetToolButtonStyle", toolButtonStyle as Any]) }
    public func ConnectSetUnifiedTitleAndToolBarOnMac(f: @escaping (_ set: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetUnifiedTitleAndToolBarOnMac", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectSetUnifiedTitleAndToolBarOnMac() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetUnifiedTitleAndToolBarOnMac"]) }
    public func SetUnifiedTitleAndToolBarOnMac(set: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetUnifiedTitleAndToolBarOnMac", set as Any]) }
    public func SetUnifiedTitleAndToolBarOnMacDefault(set: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetUnifiedTitleAndToolBarOnMacDefault", set as Any]) }
    public func SplitDockWidget(first: QDockWidget_ITF? = nil, second: QDockWidget_ITF? = nil, orientation: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SplitDockWidget", first as Any, second as Any, orientation as Any]) }
    public func StatusBar() -> QStatusBar { callLocalFunction(l: ["", Pointer(), ___className, "StatusBar"]) as! QStatusBar }
    public func TabPosition(area: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TabPosition", area as Any]) as! Float) }
    public func TabShape() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TabShape"]) as! Float) }
    public func ConnectTabifiedDockWidgetActivated(f: @escaping (_ dockWidget: QDockWidget) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTabifiedDockWidgetActivated", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QDockWidget) } as Any) }
    public func DisconnectTabifiedDockWidgetActivated() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTabifiedDockWidgetActivated"]) }
    public func TabifiedDockWidgetActivated(dockWidget: QDockWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TabifiedDockWidgetActivated", dockWidget as Any]) }
    public func TabifiedDockWidgets(dockwidget: QDockWidget_ITF? = nil) -> [QDockWidget] { callLocalFunction(l: ["", Pointer(), ___className, "TabifiedDockWidgets", dockwidget as Any]) as! [QDockWidget] }
    public func TabifyDockWidget(first: QDockWidget_ITF? = nil, second: QDockWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TabifyDockWidget", first as Any, second as Any]) }
    public func TakeCentralWidget() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "TakeCentralWidget"]) as! QWidget }
    public func ToolBarArea(toolbar: QToolBar_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ToolBarArea", toolbar as Any]) as! Float) }
    public func ToolBarBreak(toolbar: QToolBar_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "ToolBarBreak", toolbar as Any]) as! Bool }
    public func ToolButtonStyle() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ToolButtonStyle"]) as! Float) }
    public func ConnectToolButtonStyleChanged(f: @escaping (_ toolButtonStyle: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectToolButtonStyleChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectToolButtonStyleChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectToolButtonStyleChanged"]) }
    public func ToolButtonStyleChanged(toolButtonStyle: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ToolButtonStyleChanged", toolButtonStyle as Any]) }
    public func UnifiedTitleAndToolBarOnMac() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "UnifiedTitleAndToolBarOnMac"]) as! Bool }
    public func ConnectDestroyQMainWindow(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQMainWindow", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQMainWindow() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQMainWindow"]) }
    public func DestroyQMainWindow() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQMainWindow"]) }
    public func DestroyQMainWindowDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQMainWindowDefault"]) }
}

public func NewQMainWindowFromPointer(ptr: String) -> QMainWindow { let r = QMainWindow(); r.initFrom(p: ptr, n: "widgets.QMainWindow"); return r }
public func NewQMainWindow(parent: QWidget_ITF? = nil, flags: Int) -> QMainWindow { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQMainWindow", "", parent as Any, flags as Any]) as! QMainWindow }
public protocol QMdiArea_ITF: QAbstractScrollArea_ITF {
    func QMdiArea_PTR() -> QMdiArea
}

public class QMdiArea: QAbstractScrollArea, QMdiArea_ITF {
    public func QMdiArea_PTR() -> QMdiArea { callLocalFunction(l: ["", Pointer(), ___className, "QMdiArea_PTR"]) as! QMdiArea }
    public func ConnectActivateNextSubWindow(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectActivateNextSubWindow", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectActivateNextSubWindow() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectActivateNextSubWindow"]) }
    public func ActivateNextSubWindow() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ActivateNextSubWindow"]) }
    public func ActivateNextSubWindowDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ActivateNextSubWindowDefault"]) }
    public func ConnectActivatePreviousSubWindow(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectActivatePreviousSubWindow", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectActivatePreviousSubWindow() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectActivatePreviousSubWindow"]) }
    public func ActivatePreviousSubWindow() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ActivatePreviousSubWindow"]) }
    public func ActivatePreviousSubWindowDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ActivatePreviousSubWindowDefault"]) }
    public func ActivationOrder() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ActivationOrder"]) as! Float) }
    public func ActiveSubWindow() -> QMdiSubWindow { callLocalFunction(l: ["", Pointer(), ___className, "ActiveSubWindow"]) as! QMdiSubWindow }
    public func AddSubWindow(widget: QWidget_ITF? = nil, windowFlags: Int) -> QMdiSubWindow { callLocalFunction(l: ["", Pointer(), ___className, "AddSubWindow", widget as Any, windowFlags as Any]) as! QMdiSubWindow }
    public func Background() -> QBrush { callLocalFunction(l: ["", Pointer(), ___className, "Background"]) as! QBrush }
    public func ConnectCascadeSubWindows(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCascadeSubWindows", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectCascadeSubWindows() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCascadeSubWindows"]) }
    public func CascadeSubWindows() { _ = callLocalFunction(l: ["", Pointer(), ___className, "CascadeSubWindows"]) }
    public func CascadeSubWindowsDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "CascadeSubWindowsDefault"]) }
    public func ConnectCloseActiveSubWindow(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCloseActiveSubWindow", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectCloseActiveSubWindow() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCloseActiveSubWindow"]) }
    public func CloseActiveSubWindow() { _ = callLocalFunction(l: ["", Pointer(), ___className, "CloseActiveSubWindow"]) }
    public func CloseActiveSubWindowDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "CloseActiveSubWindowDefault"]) }
    public func ConnectCloseAllSubWindows(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCloseAllSubWindows", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectCloseAllSubWindows() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCloseAllSubWindows"]) }
    public func CloseAllSubWindows() { _ = callLocalFunction(l: ["", Pointer(), ___className, "CloseAllSubWindows"]) }
    public func CloseAllSubWindowsDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "CloseAllSubWindowsDefault"]) }
    public func CurrentSubWindow() -> QMdiSubWindow { callLocalFunction(l: ["", Pointer(), ___className, "CurrentSubWindow"]) as! QMdiSubWindow }
    public func DocumentMode() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "DocumentMode"]) as! Bool }
    public func RemoveSubWindow(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveSubWindow", widget as Any]) }
    public func SetActivationOrder(order: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetActivationOrder", order as Any]) }
    public func ConnectSetActiveSubWindow(f: @escaping (_ window: QMdiSubWindow) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetActiveSubWindow", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QMdiSubWindow) } as Any) }
    public func DisconnectSetActiveSubWindow() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetActiveSubWindow"]) }
    public func SetActiveSubWindow(window: QMdiSubWindow_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetActiveSubWindow", window as Any]) }
    public func SetActiveSubWindowDefault(window: QMdiSubWindow_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetActiveSubWindowDefault", window as Any]) }
    public func SetBackground(background: QBrush_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetBackground", background as Any]) }
    public func SetDocumentMode(enabled: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDocumentMode", enabled as Any]) }
    public func SetOption(option: Int, on: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOption", option as Any, on as Any]) }
    public func SetTabPosition(position: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabPosition", position as Any]) }
    public func SetTabShape(shape: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabShape", shape as Any]) }
    public func SetTabsClosable(closable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabsClosable", closable as Any]) }
    public func SetTabsMovable(movable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabsMovable", movable as Any]) }
    public func SetViewMode(mode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetViewMode", mode as Any]) }
    override public func ConnectSetupViewport(f: @escaping (_ viewport: QWidget) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetupViewport", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QWidget) } as Any) }
    override public func DisconnectSetupViewport() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetupViewport"]) }
    override public func SetupViewport(viewport: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetupViewport", viewport as Any]) }
    override public func SetupViewportDefault(viewport: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetupViewportDefault", viewport as Any]) }
    public func ConnectSubWindowActivated(f: @escaping (_ window: QMdiSubWindow) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSubWindowActivated", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QMdiSubWindow) } as Any) }
    public func DisconnectSubWindowActivated() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSubWindowActivated"]) }
    public func SubWindowActivated(window: QMdiSubWindow_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SubWindowActivated", window as Any]) }
    public func SubWindowList(order: Int) -> [QMdiSubWindow] { callLocalFunction(l: ["", Pointer(), ___className, "SubWindowList", order as Any]) as! [QMdiSubWindow] }
    public func TabPosition() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TabPosition"]) as! Float) }
    public func TabShape() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TabShape"]) as! Float) }
    public func TabsClosable() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "TabsClosable"]) as! Bool }
    public func TabsMovable() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "TabsMovable"]) as! Bool }
    public func TestOption(option: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "TestOption", option as Any]) as! Bool }
    public func ConnectTileSubWindows(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTileSubWindows", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectTileSubWindows() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTileSubWindows"]) }
    public func TileSubWindows() { _ = callLocalFunction(l: ["", Pointer(), ___className, "TileSubWindows"]) }
    public func TileSubWindowsDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "TileSubWindowsDefault"]) }
    public func ViewMode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ViewMode"]) as! Float) }
    public func ConnectDestroyQMdiArea(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQMdiArea", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQMdiArea() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQMdiArea"]) }
    public func DestroyQMdiArea() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQMdiArea"]) }
    public func DestroyQMdiAreaDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQMdiAreaDefault"]) }
}

public func NewQMdiAreaFromPointer(ptr: String) -> QMdiArea { let r = QMdiArea(); r.initFrom(p: ptr, n: "widgets.QMdiArea"); return r }
public func NewQMdiArea(parent: QWidget_ITF? = nil) -> QMdiArea { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQMdiArea", "", parent as Any]) as! QMdiArea }
public protocol QMdiSubWindow_ITF: QWidget_ITF {
    func QMdiSubWindow_PTR() -> QMdiSubWindow
}

public class QMdiSubWindow: QWidget, QMdiSubWindow_ITF {
    public func QMdiSubWindow_PTR() -> QMdiSubWindow { callLocalFunction(l: ["", Pointer(), ___className, "QMdiSubWindow_PTR"]) as! QMdiSubWindow }
    public func ConnectAboutToActivate(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectAboutToActivate", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectAboutToActivate() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectAboutToActivate"]) }
    public func AboutToActivate() { _ = callLocalFunction(l: ["", Pointer(), ___className, "AboutToActivate"]) }
    public func IsShaded() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsShaded"]) as! Bool }
    public func KeyboardPageStep() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "KeyboardPageStep"]) as! Float) }
    public func KeyboardSingleStep() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "KeyboardSingleStep"]) as! Float) }
    public func MdiArea() -> QMdiArea { callLocalFunction(l: ["", Pointer(), ___className, "MdiArea"]) as! QMdiArea }
    public func SetKeyboardPageStep(step: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetKeyboardPageStep", step as Any]) }
    public func SetKeyboardSingleStep(step: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetKeyboardSingleStep", step as Any]) }
    public func SetOption(option: Int, on: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOption", option as Any, on as Any]) }
    public func SetSystemMenu(systemMenu: QMenu_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSystemMenu", systemMenu as Any]) }
    public func SetWidget(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWidget", widget as Any]) }
    public func ConnectShowShaded(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectShowShaded", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectShowShaded() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectShowShaded"]) }
    public func ShowShaded() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowShaded"]) }
    public func ShowShadedDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowShadedDefault"]) }
    public func ConnectShowSystemMenu(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectShowSystemMenu", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectShowSystemMenu() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectShowSystemMenu"]) }
    public func ShowSystemMenu() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowSystemMenu"]) }
    public func ShowSystemMenuDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowSystemMenuDefault"]) }
    public func SystemMenu() -> QMenu { callLocalFunction(l: ["", Pointer(), ___className, "SystemMenu"]) as! QMenu }
    public func TestOption(option: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "TestOption", option as Any]) as! Bool }
    public func Widget() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "Widget"]) as! QWidget }
    public func ConnectWindowStateChanged(f: @escaping (_ oldState: Int, _ newState: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectWindowStateChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float)) } as Any) }
    public func DisconnectWindowStateChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectWindowStateChanged"]) }
    public func WindowStateChanged(oldState: Int, newState: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "WindowStateChanged", oldState as Any, newState as Any]) }
    public func ConnectDestroyQMdiSubWindow(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQMdiSubWindow", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQMdiSubWindow() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQMdiSubWindow"]) }
    public func DestroyQMdiSubWindow() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQMdiSubWindow"]) }
    public func DestroyQMdiSubWindowDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQMdiSubWindowDefault"]) }
}

public func NewQMdiSubWindowFromPointer(ptr: String) -> QMdiSubWindow { let r = QMdiSubWindow(); r.initFrom(p: ptr, n: "widgets.QMdiSubWindow"); return r }
public func NewQMdiSubWindow(parent: QWidget_ITF? = nil, flags: Int) -> QMdiSubWindow { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQMdiSubWindow", "", parent as Any, flags as Any]) as! QMdiSubWindow }
public protocol QMenu_ITF: QWidget_ITF {
    func QMenu_PTR() -> QMenu
}

public class QMenu: QWidget, QMenu_ITF {
    public func QMenu_PTR() -> QMenu { callLocalFunction(l: ["", Pointer(), ___className, "QMenu_PTR"]) as! QMenu }
    public func ConnectAboutToHide(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectAboutToHide", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectAboutToHide() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectAboutToHide"]) }
    public func AboutToHide() { _ = callLocalFunction(l: ["", Pointer(), ___className, "AboutToHide"]) }
    public func ConnectAboutToShow(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectAboutToShow", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectAboutToShow() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectAboutToShow"]) }
    public func AboutToShow() { _ = callLocalFunction(l: ["", Pointer(), ___className, "AboutToShow"]) }
    public func ActionAt(pt: QPoint_ITF? = nil) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "ActionAt", pt as Any]) as! QAction }
    public func ActionGeometry(act: QAction_ITF? = nil) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "ActionGeometry", act as Any]) as! QRect }
    public func ActiveAction() -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "ActiveAction"]) as! QAction }
    public func AddAction_QMenu(text: String) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "AddAction", text as Any]) as! QAction }
    public func AddAction2(icon: QIcon_ITF? = nil, text: String) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "AddAction2", icon as Any, text as Any]) as! QAction }
    public func AddAction3(text: String, receiver: QObject_ITF? = nil, member: String, shortcut: QKeySequence_ITF? = nil) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "AddAction3", text as Any, receiver as Any, member as Any, shortcut as Any]) as! QAction }
    public func AddAction4(icon: QIcon_ITF? = nil, text: String, receiver: QObject_ITF? = nil, member: String, shortcut: QKeySequence_ITF? = nil) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "AddAction4", icon as Any, text as Any, receiver as Any, member as Any, shortcut as Any]) as! QAction }
    public func AddMenu(menu: QMenu_ITF? = nil) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "AddMenu", menu as Any]) as! QAction }
    public func AddMenu2(title: String) -> QMenu { callLocalFunction(l: ["", Pointer(), ___className, "AddMenu2", title as Any]) as! QMenu }
    public func AddMenu3(icon: QIcon_ITF? = nil, title: String) -> QMenu { callLocalFunction(l: ["", Pointer(), ___className, "AddMenu3", icon as Any, title as Any]) as! QMenu }
    public func AddSection(text: String) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "AddSection", text as Any]) as! QAction }
    public func AddSection2(icon: QIcon_ITF? = nil, text: String) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "AddSection2", icon as Any, text as Any]) as! QAction }
    public func AddSeparator() -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "AddSeparator"]) as! QAction }
    public func Clear() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Clear"]) }
    public func ColumnCount() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ColumnCount"]) as! Float) }
    public func DefaultAction() -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "DefaultAction"]) as! QAction }
    public func Exec() -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "Exec"]) as! QAction }
    public func Exec2(p: QPoint_ITF? = nil, action: QAction_ITF? = nil) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "Exec2", p as Any, action as Any]) as! QAction }
    public func Exec3(actions: [QAction], pos: QPoint_ITF? = nil, at: QAction_ITF? = nil, parent: QWidget_ITF? = nil) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "Exec3", actions as Any, pos as Any, at as Any, parent as Any]) as! QAction }
    public func HideTearOffMenu() { _ = callLocalFunction(l: ["", Pointer(), ___className, "HideTearOffMenu"]) }
    public func ConnectHovered(f: @escaping (_ action: QAction) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHovered", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QAction) } as Any) }
    public func DisconnectHovered() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHovered"]) }
    public func Hovered(action: QAction_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Hovered", action as Any]) }
    public func Icon() -> QIcon { callLocalFunction(l: ["", Pointer(), ___className, "Icon"]) as! QIcon }
    public func InitStyleOption(option: QStyleOptionMenuItem_ITF? = nil, action: QAction_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InitStyleOption", option as Any, action as Any]) }
    public func InsertMenu(before: QAction_ITF? = nil, menu: QMenu_ITF? = nil) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "InsertMenu", before as Any, menu as Any]) as! QAction }
    public func InsertSection(before: QAction_ITF? = nil, text: String) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "InsertSection", before as Any, text as Any]) as! QAction }
    public func InsertSection2(before: QAction_ITF? = nil, icon: QIcon_ITF? = nil, text: String) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "InsertSection2", before as Any, icon as Any, text as Any]) as! QAction }
    public func InsertSeparator(before: QAction_ITF? = nil) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "InsertSeparator", before as Any]) as! QAction }
    public func IsEmpty() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsEmpty"]) as! Bool }
    public func IsTearOffEnabled() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsTearOffEnabled"]) as! Bool }
    public func IsTearOffMenuVisible() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsTearOffMenuVisible"]) as! Bool }
    public func MenuAction() -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "MenuAction"]) as! QAction }
    public func Popup(p: QPoint_ITF? = nil, atAction: QAction_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Popup", p as Any, atAction as Any]) }
    public func SeparatorsCollapsible() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "SeparatorsCollapsible"]) as! Bool }
    public func SetActiveAction(act: QAction_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetActiveAction", act as Any]) }
    public func SetAsDockMenu() { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAsDockMenu"]) }
    public func SetDefaultAction(act: QAction_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDefaultAction", act as Any]) }
    public func SetIcon(icon: QIcon_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIcon", icon as Any]) }
    public func SetSeparatorsCollapsible(collapse: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSeparatorsCollapsible", collapse as Any]) }
    public func SetTearOffEnabled(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTearOffEnabled", vbo as Any]) }
    public func SetTitle(title: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTitle", title as Any]) }
    public func SetToolTipsVisible(visible: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetToolTipsVisible", visible as Any]) }
    public func ShowTearOffMenu(pos: QPoint_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowTearOffMenu", pos as Any]) }
    public func ShowTearOffMenu2() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowTearOffMenu2"]) }
    public func Title() -> String { callLocalFunction(l: ["", Pointer(), ___className, "Title"]) as! String }
    public func ToolTipsVisible() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "ToolTipsVisible"]) as! Bool }
    public func ConnectTriggered(f: @escaping (_ action: QAction) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTriggered", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QAction) } as Any) }
    public func DisconnectTriggered() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTriggered"]) }
    public func Triggered(action: QAction_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Triggered", action as Any]) }
    public func ConnectDestroyQMenu(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQMenu", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQMenu() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQMenu"]) }
    public func DestroyQMenu() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQMenu"]) }
    public func DestroyQMenuDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQMenuDefault"]) }
}

public func NewQMenuFromPointer(ptr: String) -> QMenu { let r = QMenu(); r.initFrom(p: ptr, n: "widgets.QMenu"); return r }
public func NewQMenu(parent: QWidget_ITF? = nil) -> QMenu { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQMenu", "", parent as Any]) as! QMenu }
public func NewQMenu2(title: String, parent: QWidget_ITF? = nil) -> QMenu { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQMenu2", "", title as Any, parent as Any]) as! QMenu }
public func QMenu_Exec3(actions: [QAction], pos: QPoint_ITF? = nil, at: QAction_ITF? = nil, parent: QWidget_ITF? = nil) -> QAction { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QMenu_Exec3", "", actions as Any, pos as Any, at as Any, parent as Any]) as! QAction }
public protocol QMenuBar_ITF: QWidget_ITF {
    func QMenuBar_PTR() -> QMenuBar
}

public class QMenuBar: QWidget, QMenuBar_ITF {
    public func QMenuBar_PTR() -> QMenuBar { callLocalFunction(l: ["", Pointer(), ___className, "QMenuBar_PTR"]) as! QMenuBar }
    public func ActionAt(pt: QPoint_ITF? = nil) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "ActionAt", pt as Any]) as! QAction }
    public func ActionGeometry(act: QAction_ITF? = nil) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "ActionGeometry", act as Any]) as! QRect }
    public func ActiveAction() -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "ActiveAction"]) as! QAction }
    public func AddAction_QMenuBar(text: String) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "AddAction", text as Any]) as! QAction }
    public func AddAction2(text: String, receiver: QObject_ITF? = nil, member: String) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "AddAction2", text as Any, receiver as Any, member as Any]) as! QAction }
    public func AddMenu(menu: QMenu_ITF? = nil) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "AddMenu", menu as Any]) as! QAction }
    public func AddMenu2(title: String) -> QMenu { callLocalFunction(l: ["", Pointer(), ___className, "AddMenu2", title as Any]) as! QMenu }
    public func AddMenu3(icon: QIcon_ITF? = nil, title: String) -> QMenu { callLocalFunction(l: ["", Pointer(), ___className, "AddMenu3", icon as Any, title as Any]) as! QMenu }
    public func AddSeparator() -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "AddSeparator"]) as! QAction }
    public func Clear() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Clear"]) }
    public func CornerWidget(corner: Int) -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "CornerWidget", corner as Any]) as! QWidget }
    public func ConnectHovered(f: @escaping (_ action: QAction) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHovered", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QAction) } as Any) }
    public func DisconnectHovered() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHovered"]) }
    public func Hovered(action: QAction_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Hovered", action as Any]) }
    public func InitStyleOption(option: QStyleOptionMenuItem_ITF? = nil, action: QAction_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InitStyleOption", option as Any, action as Any]) }
    public func InsertMenu(before: QAction_ITF? = nil, menu: QMenu_ITF? = nil) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "InsertMenu", before as Any, menu as Any]) as! QAction }
    public func InsertSeparator(before: QAction_ITF? = nil) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "InsertSeparator", before as Any]) as! QAction }
    public func IsDefaultUp() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsDefaultUp"]) as! Bool }
    public func IsNativeMenuBar() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsNativeMenuBar"]) as! Bool }
    public func SetActiveAction(act: QAction_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetActiveAction", act as Any]) }
    public func SetCornerWidget(widget: QWidget_ITF? = nil, corner: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCornerWidget", widget as Any, corner as Any]) }
    public func SetDefaultUp(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDefaultUp", vbo as Any]) }
    public func SetNativeMenuBar(nativeMenuBar: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetNativeMenuBar", nativeMenuBar as Any]) }
    public func ConnectTriggered(f: @escaping (_ action: QAction) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTriggered", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QAction) } as Any) }
    public func DisconnectTriggered() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTriggered"]) }
    public func Triggered(action: QAction_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Triggered", action as Any]) }
    public func ConnectDestroyQMenuBar(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQMenuBar", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQMenuBar() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQMenuBar"]) }
    public func DestroyQMenuBar() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQMenuBar"]) }
    public func DestroyQMenuBarDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQMenuBarDefault"]) }
}

public func NewQMenuBarFromPointer(ptr: String) -> QMenuBar { let r = QMenuBar(); r.initFrom(p: ptr, n: "widgets.QMenuBar"); return r }
public func NewQMenuBar(parent: QWidget_ITF? = nil) -> QMenuBar { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQMenuBar", "", parent as Any]) as! QMenuBar }
public protocol QMessageBox_ITF: QDialog_ITF {
    func QMessageBox_PTR() -> QMessageBox
}

public class QMessageBox: QDialog, QMessageBox_ITF {
    public func QMessageBox_PTR() -> QMessageBox { callLocalFunction(l: ["", Pointer(), ___className, "QMessageBox_PTR"]) as! QMessageBox }
    public func About(parent: QWidget_ITF? = nil, title: String, text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "About", parent as Any, title as Any, text as Any]) }
    public func AboutQt(parent: QWidget_ITF? = nil, title: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AboutQt", parent as Any, title as Any]) }
    public func AddButton(button: QAbstractButton_ITF? = nil, role: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddButton", button as Any, role as Any]) }
    public func AddButton2(text: String, role: Int) -> QPushButton { callLocalFunction(l: ["", Pointer(), ___className, "AddButton2", text as Any, role as Any]) as! QPushButton }
    public func AddButton3(button: Int) -> QPushButton { callLocalFunction(l: ["", Pointer(), ___className, "AddButton3", button as Any]) as! QPushButton }
    public func Button(which: Int) -> QAbstractButton { callLocalFunction(l: ["", Pointer(), ___className, "Button", which as Any]) as! QAbstractButton }
    public func ConnectButtonClicked(f: @escaping (_ button: QAbstractButton) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectButtonClicked", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QAbstractButton) } as Any) }
    public func DisconnectButtonClicked() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectButtonClicked"]) }
    public func ButtonClicked(button: QAbstractButton_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ButtonClicked", button as Any]) }
    public func ButtonRole(button: QAbstractButton_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ButtonRole", button as Any]) as! Float) }
    public func Buttons() -> [QAbstractButton] { callLocalFunction(l: ["", Pointer(), ___className, "Buttons"]) as! [QAbstractButton] }
    public func CheckBox() -> QCheckBox { callLocalFunction(l: ["", Pointer(), ___className, "CheckBox"]) as! QCheckBox }
    public func ClickedButton() -> QAbstractButton { callLocalFunction(l: ["", Pointer(), ___className, "ClickedButton"]) as! QAbstractButton }
    public func Critical(parent: QWidget_ITF? = nil, title: String, text: String, buttons: Int, defaultButton: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Critical", parent as Any, title as Any, text as Any, buttons as Any, defaultButton as Any]) as! Float) }
    public func DefaultButton() -> QPushButton { callLocalFunction(l: ["", Pointer(), ___className, "DefaultButton"]) as! QPushButton }
    public func DetailedText() -> String { callLocalFunction(l: ["", Pointer(), ___className, "DetailedText"]) as! String }
    public func EscapeButton() -> QAbstractButton { callLocalFunction(l: ["", Pointer(), ___className, "EscapeButton"]) as! QAbstractButton }
    public func Icon() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Icon"]) as! Float) }
    public func IconPixmap() -> QPixmap { callLocalFunction(l: ["", Pointer(), ___className, "IconPixmap"]) as! QPixmap }
    public func Information(parent: QWidget_ITF? = nil, title: String, text: String, buttons: Int, defaultButton: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Information", parent as Any, title as Any, text as Any, buttons as Any, defaultButton as Any]) as! Float) }
    public func InformativeText() -> String { callLocalFunction(l: ["", Pointer(), ___className, "InformativeText"]) as! String }
    public func Open_QMessageBox(receiver: QObject_ITF? = nil, member: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Open", receiver as Any, member as Any]) }
    public func Question(parent: QWidget_ITF? = nil, title: String, text: String, buttons: Int, defaultButton: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Question", parent as Any, title as Any, text as Any, buttons as Any, defaultButton as Any]) as! Float) }
    public func RemoveButton(button: QAbstractButton_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveButton", button as Any]) }
    public func SetCheckBox(cb: QCheckBox_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCheckBox", cb as Any]) }
    public func SetDefaultButton(button: QPushButton_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDefaultButton", button as Any]) }
    public func SetDefaultButton2(button: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDefaultButton2", button as Any]) }
    public func SetDetailedText(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDetailedText", text as Any]) }
    public func SetEscapeButton(button: QAbstractButton_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetEscapeButton", button as Any]) }
    public func SetEscapeButton2(button: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetEscapeButton2", button as Any]) }
    public func SetIcon(vqm: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIcon", vqm as Any]) }
    public func SetIconPixmap(pixmap: QPixmap_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIconPixmap", pixmap as Any]) }
    public func SetInformativeText(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetInformativeText", text as Any]) }
    public func SetStandardButtons(buttons: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStandardButtons", buttons as Any]) }
    public func SetText(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetText", text as Any]) }
    public func SetTextFormat(format: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTextFormat", format as Any]) }
    public func SetTextInteractionFlags(flags: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTextInteractionFlags", flags as Any]) }
    override public func SetWindowTitle(vqs: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWindowTitle", vqs as Any]) }
    public func StandardButton(button: QAbstractButton_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "StandardButton", button as Any]) as! Float) }
    public func StandardButtons() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "StandardButtons"]) as! Float) }
    public func Text() -> String { callLocalFunction(l: ["", Pointer(), ___className, "Text"]) as! String }
    public func TextFormat() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TextFormat"]) as! Float) }
    public func TextInteractionFlags() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TextInteractionFlags"]) as! Float) }
    public func Warning(parent: QWidget_ITF? = nil, title: String, text: String, buttons: Int, defaultButton: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Warning", parent as Any, title as Any, text as Any, buttons as Any, defaultButton as Any]) as! Float) }
    public func ConnectDestroyQMessageBox(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQMessageBox", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQMessageBox() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQMessageBox"]) }
    public func DestroyQMessageBox() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQMessageBox"]) }
    public func DestroyQMessageBoxDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQMessageBoxDefault"]) }
}

public func NewQMessageBoxFromPointer(ptr: String) -> QMessageBox { let r = QMessageBox(); r.initFrom(p: ptr, n: "widgets.QMessageBox"); return r }
public func NewQMessageBox(parent: QWidget_ITF? = nil) -> QMessageBox { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQMessageBox", "", parent as Any]) as! QMessageBox }
public func NewQMessageBox2(icon: Int, title: String, text: String, buttons: Int, parent: QWidget_ITF? = nil, ff: Int) -> QMessageBox { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQMessageBox2", "", icon as Any, title as Any, text as Any, buttons as Any, parent as Any, ff as Any]) as! QMessageBox }
public func QMessageBox_About(parent: QWidget_ITF? = nil, title: String, text: String) { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QMessageBox_About", "", parent as Any, title as Any, text as Any]) }
public func QMessageBox_AboutQt(parent: QWidget_ITF? = nil, title: String) { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QMessageBox_AboutQt", "", parent as Any, title as Any]) }
public func QMessageBox_Critical(parent: QWidget_ITF? = nil, title: String, text: String, buttons: Int, defaultButton: Int) -> Int { Widgets.initModule(); return Int(callLocalFunction(l: ["", "", "widgets.QMessageBox_Critical", "", parent as Any, title as Any, text as Any, buttons as Any, defaultButton as Any]) as! Float) }
public func QMessageBox_Information(parent: QWidget_ITF? = nil, title: String, text: String, buttons: Int, defaultButton: Int) -> Int { Widgets.initModule(); return Int(callLocalFunction(l: ["", "", "widgets.QMessageBox_Information", "", parent as Any, title as Any, text as Any, buttons as Any, defaultButton as Any]) as! Float) }
public func QMessageBox_Question(parent: QWidget_ITF? = nil, title: String, text: String, buttons: Int, defaultButton: Int) -> Int { Widgets.initModule(); return Int(callLocalFunction(l: ["", "", "widgets.QMessageBox_Question", "", parent as Any, title as Any, text as Any, buttons as Any, defaultButton as Any]) as! Float) }
public func QMessageBox_Warning(parent: QWidget_ITF? = nil, title: String, text: String, buttons: Int, defaultButton: Int) -> Int { Widgets.initModule(); return Int(callLocalFunction(l: ["", "", "widgets.QMessageBox_Warning", "", parent as Any, title as Any, text as Any, buttons as Any, defaultButton as Any]) as! Float) }
public protocol QMouseEventTransition_ITF: QEventTransition_ITF {
    func QMouseEventTransition_PTR() -> QMouseEventTransition
}

public class QMouseEventTransition: QEventTransition, QMouseEventTransition_ITF {
    public func QMouseEventTransition_PTR() -> QMouseEventTransition { callLocalFunction(l: ["", Pointer(), ___className, "QMouseEventTransition_PTR"]) as! QMouseEventTransition }
    public func Button() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Button"]) as! Float) }
    override public func EventTestDefault(event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventTestDefault", event as Any]) as! Bool }
    public func HitTestPath() -> QPainterPath { callLocalFunction(l: ["", Pointer(), ___className, "HitTestPath"]) as! QPainterPath }
    public func ModifierMask() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ModifierMask"]) as! Float) }
    override public func OnTransitionDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "OnTransitionDefault", event as Any]) }
    public func SetButton(button: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetButton", button as Any]) }
    public func SetHitTestPath(path: QPainterPath_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetHitTestPath", path as Any]) }
    public func SetModifierMask(modifierMask: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetModifierMask", modifierMask as Any]) }
    public func ConnectDestroyQMouseEventTransition(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQMouseEventTransition", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQMouseEventTransition() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQMouseEventTransition"]) }
    public func DestroyQMouseEventTransition() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQMouseEventTransition"]) }
    public func DestroyQMouseEventTransitionDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQMouseEventTransitionDefault"]) }
    override public func EventDefault(e: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventDefault", e as Any]) as! Bool }
    override public func ChildEventDefault(event: QChildEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ChildEventDefault", event as Any]) }
    override public func ConnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ConnectNotifyDefault", sign as Any]) }
    override public func CustomEventDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CustomEventDefault", event as Any]) }
    override public func DeleteLaterDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DeleteLaterDefault"]) }
    override public func DisconnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DisconnectNotifyDefault", sign as Any]) }
    override public func EventFilterDefault(watched: QObject_ITF? = nil, event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventFilterDefault", watched as Any, event as Any]) as! Bool }
    override public func MetaObjectDefault() -> QMetaObject { callLocalFunction(l: ["", Pointer(), ___className, "MetaObjectDefault"]) as! QMetaObject }
    override public func TimerEventDefault(event: QTimerEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TimerEventDefault", event as Any]) }
}

public func NewQMouseEventTransitionFromPointer(ptr: String) -> QMouseEventTransition { let r = QMouseEventTransition(); r.initFrom(p: ptr, n: "widgets.QMouseEventTransition"); return r }
public func NewQMouseEventTransition(sourceState: QState_ITF? = nil) -> QMouseEventTransition { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQMouseEventTransition", "", sourceState as Any]) as! QMouseEventTransition }
public func NewQMouseEventTransition2(object: QObject_ITF? = nil, ty: Int, button: Int, sourceState: QState_ITF? = nil) -> QMouseEventTransition { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQMouseEventTransition2", "", object as Any, ty as Any, button as Any, sourceState as Any]) as! QMouseEventTransition }
public protocol QOpenGLWidget_ITF: QWidget_ITF {
    func QOpenGLWidget_PTR() -> QOpenGLWidget
}

public class QOpenGLWidget: QWidget, QOpenGLWidget_ITF {
    public func QOpenGLWidget_PTR() -> QOpenGLWidget { callLocalFunction(l: ["", Pointer(), ___className, "QOpenGLWidget_PTR"]) as! QOpenGLWidget }
    public func ConnectAboutToCompose(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectAboutToCompose", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectAboutToCompose() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectAboutToCompose"]) }
    public func AboutToCompose() { _ = callLocalFunction(l: ["", Pointer(), ___className, "AboutToCompose"]) }
    public func ConnectAboutToResize(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectAboutToResize", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectAboutToResize() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectAboutToResize"]) }
    public func AboutToResize() { _ = callLocalFunction(l: ["", Pointer(), ___className, "AboutToResize"]) }
    public func Context() -> QOpenGLContext { callLocalFunction(l: ["", Pointer(), ___className, "Context"]) as! QOpenGLContext }
    public func DefaultFramebufferObject() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "DefaultFramebufferObject"]) as! Float) }
    public func DoneCurrent() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DoneCurrent"]) }
    public func Format() -> QSurfaceFormat { callLocalFunction(l: ["", Pointer(), ___className, "Format"]) as! QSurfaceFormat }
    public func ConnectFrameSwapped(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectFrameSwapped", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectFrameSwapped() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectFrameSwapped"]) }
    public func FrameSwapped() { _ = callLocalFunction(l: ["", Pointer(), ___className, "FrameSwapped"]) }
    public func GrabFramebuffer() -> QImage { callLocalFunction(l: ["", Pointer(), ___className, "GrabFramebuffer"]) as! QImage }
    public func ConnectInitializeGL(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectInitializeGL", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectInitializeGL() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectInitializeGL"]) }
    public func InitializeGL() { _ = callLocalFunction(l: ["", Pointer(), ___className, "InitializeGL"]) }
    public func InitializeGLDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "InitializeGLDefault"]) }
    public func IsValid() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsValid"]) as! Bool }
    public func MakeCurrent() { _ = callLocalFunction(l: ["", Pointer(), ___className, "MakeCurrent"]) }
    public func ConnectPaintGL(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPaintGL", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectPaintGL() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPaintGL"]) }
    public func PaintGL() { _ = callLocalFunction(l: ["", Pointer(), ___className, "PaintGL"]) }
    public func PaintGLDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "PaintGLDefault"]) }
    public func ConnectResizeGL(f: @escaping (_ w: Int, _ h: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectResizeGL", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float)) } as Any) }
    public func DisconnectResizeGL() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectResizeGL"]) }
    public func ResizeGL(w: Int, h: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResizeGL", w as Any, h as Any]) }
    public func ResizeGLDefault(w: Int, h: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResizeGLDefault", w as Any, h as Any]) }
    public func ConnectResized(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectResized", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectResized() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectResized"]) }
    public func Resized() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Resized"]) }
    public func SetFormat(format: QSurfaceFormat_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFormat", format as Any]) }
    public func SetTextureFormat(texFormat: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTextureFormat", texFormat as Any]) }
    public func SetUpdateBehavior(updateBehavior: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetUpdateBehavior", updateBehavior as Any]) }
    public func TextureFormat() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TextureFormat"]) as! Float) }
    public func UpdateBehavior() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "UpdateBehavior"]) as! Float) }
    public func ConnectDestroyQOpenGLWidget(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQOpenGLWidget", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQOpenGLWidget() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQOpenGLWidget"]) }
    public func DestroyQOpenGLWidget() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQOpenGLWidget"]) }
    public func DestroyQOpenGLWidgetDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQOpenGLWidgetDefault"]) }
}

public func NewQOpenGLWidgetFromPointer(ptr: String) -> QOpenGLWidget { let r = QOpenGLWidget(); r.initFrom(p: ptr, n: "widgets.QOpenGLWidget"); return r }
public func NewQOpenGLWidget(parent: QWidget_ITF? = nil, ff: Int) -> QOpenGLWidget { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQOpenGLWidget", "", parent as Any, ff as Any]) as! QOpenGLWidget }
public protocol QPanGesture_ITF: QGesture_ITF {
    func QPanGesture_PTR() -> QPanGesture
}

public class QPanGesture: QGesture, QPanGesture_ITF {
    public func QPanGesture_PTR() -> QPanGesture { callLocalFunction(l: ["", Pointer(), ___className, "QPanGesture_PTR"]) as! QPanGesture }
    public func Acceleration() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "Acceleration"]) as! Float }
    public func Delta() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "Delta"]) as! QPointF }
    public func LastOffset() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "LastOffset"]) as! QPointF }
    public func Offset() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "Offset"]) as! QPointF }
    public func SetAcceleration(value: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAcceleration", value as Any]) }
    public func SetLastOffset(value: QPointF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetLastOffset", value as Any]) }
    public func SetOffset(value: QPointF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOffset", value as Any]) }
    public func ConnectDestroyQPanGesture(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQPanGesture", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQPanGesture() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQPanGesture"]) }
    public func DestroyQPanGesture() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQPanGesture"]) }
    public func DestroyQPanGestureDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQPanGestureDefault"]) }
}

public func NewQPanGestureFromPointer(ptr: String) -> QPanGesture { let r = QPanGesture(); r.initFrom(p: ptr, n: "widgets.QPanGesture"); return r }
public protocol QPinchGesture_ITF: QGesture_ITF {
    func QPinchGesture_PTR() -> QPinchGesture
}

public class QPinchGesture: QGesture, QPinchGesture_ITF {
    public func QPinchGesture_PTR() -> QPinchGesture { callLocalFunction(l: ["", Pointer(), ___className, "QPinchGesture_PTR"]) as! QPinchGesture }
    public func CenterPoint() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "CenterPoint"]) as! QPointF }
    public func ChangeFlags() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ChangeFlags"]) as! Float) }
    public func LastCenterPoint() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "LastCenterPoint"]) as! QPointF }
    public func LastRotationAngle() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "LastRotationAngle"]) as! Float }
    public func LastScaleFactor() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "LastScaleFactor"]) as! Float }
    public func RotationAngle() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "RotationAngle"]) as! Float }
    public func ScaleFactor() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "ScaleFactor"]) as! Float }
    public func SetCenterPoint(value: QPointF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCenterPoint", value as Any]) }
    public func SetChangeFlags(value: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetChangeFlags", value as Any]) }
    public func SetLastCenterPoint(value: QPointF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetLastCenterPoint", value as Any]) }
    public func SetLastRotationAngle(value: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetLastRotationAngle", value as Any]) }
    public func SetLastScaleFactor(value: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetLastScaleFactor", value as Any]) }
    public func SetRotationAngle(value: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRotationAngle", value as Any]) }
    public func SetScaleFactor(value: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetScaleFactor", value as Any]) }
    public func SetStartCenterPoint(value: QPointF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStartCenterPoint", value as Any]) }
    public func SetTotalChangeFlags(value: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTotalChangeFlags", value as Any]) }
    public func SetTotalRotationAngle(value: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTotalRotationAngle", value as Any]) }
    public func SetTotalScaleFactor(value: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTotalScaleFactor", value as Any]) }
    public func StartCenterPoint() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "StartCenterPoint"]) as! QPointF }
    public func TotalChangeFlags() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TotalChangeFlags"]) as! Float) }
    public func TotalRotationAngle() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "TotalRotationAngle"]) as! Float }
    public func TotalScaleFactor() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "TotalScaleFactor"]) as! Float }
    public func ConnectDestroyQPinchGesture(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQPinchGesture", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQPinchGesture() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQPinchGesture"]) }
    public func DestroyQPinchGesture() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQPinchGesture"]) }
    public func DestroyQPinchGestureDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQPinchGestureDefault"]) }
}

public func NewQPinchGestureFromPointer(ptr: String) -> QPinchGesture { let r = QPinchGesture(); r.initFrom(p: ptr, n: "widgets.QPinchGesture"); return r }
public protocol QPlainTextDocumentLayout_ITF: QAbstractTextDocumentLayout_ITF {
    func QPlainTextDocumentLayout_PTR() -> QPlainTextDocumentLayout
}

public class QPlainTextDocumentLayout: QAbstractTextDocumentLayout, QPlainTextDocumentLayout_ITF {
    public func QPlainTextDocumentLayout_PTR() -> QPlainTextDocumentLayout { callLocalFunction(l: ["", Pointer(), ___className, "QPlainTextDocumentLayout_PTR"]) as! QPlainTextDocumentLayout }
    override public func ConnectBlockBoundingRect(f: @escaping (_ block: QTextBlock) -> QRectF) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectBlockBoundingRect", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QTextBlock) } as Any) }
    override public func DisconnectBlockBoundingRect() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectBlockBoundingRect"]) }
    override public func BlockBoundingRect(block: QTextBlock_ITF? = nil) -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "BlockBoundingRect", block as Any]) as! QRectF }
    public func BlockBoundingRectDefault(block: QTextBlock_ITF? = nil) -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "BlockBoundingRectDefault", block as Any]) as! QRectF }
    public func CursorWidth() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CursorWidth"]) as! Float) }
    override public func ConnectDocumentChanged(f: @escaping (_ from: Int, _ charsRemoved: Int, _ charsAdded: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDocumentChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float), Int(inp[2] as! Float)) } as Any) }
    override public func DisconnectDocumentChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDocumentChanged"]) }
    override public func DocumentChanged(position: Int, charsRemoved: Int, charsAdded: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DocumentChanged", position as Any, charsRemoved as Any, charsAdded as Any]) }
    public func DocumentChangedDefault(from: Int, charsRemoved: Int, charsAdded: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DocumentChangedDefault", from as Any, charsRemoved as Any, charsAdded as Any]) }
    override public func ConnectDocumentSize(f: @escaping () -> QSizeF) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDocumentSize", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectDocumentSize() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDocumentSize"]) }
    override public func DocumentSize() -> QSizeF { callLocalFunction(l: ["", Pointer(), ___className, "DocumentSize"]) as! QSizeF }
    public func DocumentSizeDefault() -> QSizeF { callLocalFunction(l: ["", Pointer(), ___className, "DocumentSizeDefault"]) as! QSizeF }
    public func EnsureBlockLayout(block: QTextBlock_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "EnsureBlockLayout", block as Any]) }
    override public func ConnectFrameBoundingRect(f: @escaping (_ vqt: QTextFrame) -> QRectF) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectFrameBoundingRect", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QTextFrame) } as Any) }
    override public func DisconnectFrameBoundingRect() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectFrameBoundingRect"]) }
    override public func FrameBoundingRect(frame: QTextFrame_ITF? = nil) -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "FrameBoundingRect", frame as Any]) as! QRectF }
    public func FrameBoundingRectDefault(vqt: QTextFrame_ITF? = nil) -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "FrameBoundingRectDefault", vqt as Any]) as! QRectF }
    override public func ConnectHitTest(f: @escaping (_ vqp: QPointF, _ vqt: Int) -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHitTest", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPointF, Int(inp[1] as! Float)) } as Any) }
    override public func DisconnectHitTest() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHitTest"]) }
    override public func HitTest(point: QPointF_ITF? = nil, accuracy: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "HitTest", point as Any, accuracy as Any]) as! Float) }
    public func HitTestDefault(vqp: QPointF_ITF? = nil, vqt: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "HitTestDefault", vqp as Any, vqt as Any]) as! Float) }
    override public func ConnectPageCount(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPageCount", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectPageCount() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPageCount"]) }
    override public func PageCount() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "PageCount"]) as! Float) }
    public func PageCountDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "PageCountDefault"]) as! Float) }
    public func RequestUpdate() { _ = callLocalFunction(l: ["", Pointer(), ___className, "RequestUpdate"]) }
    public func SetCursorWidth(width: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCursorWidth", width as Any]) }
    public func ConnectDestroyQPlainTextDocumentLayout(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQPlainTextDocumentLayout", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQPlainTextDocumentLayout() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQPlainTextDocumentLayout"]) }
    public func DestroyQPlainTextDocumentLayout() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQPlainTextDocumentLayout"]) }
    public func DestroyQPlainTextDocumentLayoutDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQPlainTextDocumentLayoutDefault"]) }
    override public func DrawInlineObjectDefault(painter: QPainter_ITF? = nil, rect: QRectF_ITF? = nil, object: QTextInlineObject_ITF? = nil, posInDocument: Int, format: QTextFormat_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawInlineObjectDefault", painter as Any, rect as Any, object as Any, posInDocument as Any, format as Any]) }
    override public func PositionInlineObjectDefault(item: QTextInlineObject_ITF? = nil, posInDocument: Int, format: QTextFormat_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "PositionInlineObjectDefault", item as Any, posInDocument as Any, format as Any]) }
    override public func ResizeInlineObjectDefault(item: QTextInlineObject_ITF? = nil, posInDocument: Int, format: QTextFormat_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResizeInlineObjectDefault", item as Any, posInDocument as Any, format as Any]) }
    override public func ChildEventDefault(event: QChildEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ChildEventDefault", event as Any]) }
    override public func ConnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ConnectNotifyDefault", sign as Any]) }
    override public func CustomEventDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CustomEventDefault", event as Any]) }
    override public func DeleteLaterDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DeleteLaterDefault"]) }
    override public func DisconnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DisconnectNotifyDefault", sign as Any]) }
    override public func EventDefault(e: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventDefault", e as Any]) as! Bool }
    override public func EventFilterDefault(watched: QObject_ITF? = nil, event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventFilterDefault", watched as Any, event as Any]) as! Bool }
    override public func MetaObjectDefault() -> QMetaObject { callLocalFunction(l: ["", Pointer(), ___className, "MetaObjectDefault"]) as! QMetaObject }
    override public func TimerEventDefault(event: QTimerEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TimerEventDefault", event as Any]) }
}

public func NewQPlainTextDocumentLayoutFromPointer(ptr: String) -> QPlainTextDocumentLayout { let r = QPlainTextDocumentLayout(); r.initFrom(p: ptr, n: "widgets.QPlainTextDocumentLayout"); return r }
public func NewQPlainTextDocumentLayout(document: QTextDocument_ITF? = nil) -> QPlainTextDocumentLayout { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQPlainTextDocumentLayout", "", document as Any]) as! QPlainTextDocumentLayout }
public protocol QPlainTextEdit_ITF: QAbstractScrollArea_ITF {
    func QPlainTextEdit_PTR() -> QPlainTextEdit
}

public class QPlainTextEdit: QAbstractScrollArea, QPlainTextEdit_ITF {
    public func QPlainTextEdit_PTR() -> QPlainTextEdit { callLocalFunction(l: ["", Pointer(), ___className, "QPlainTextEdit_PTR"]) as! QPlainTextEdit }
    public func AnchorAt(pos: QPoint_ITF? = nil) -> String { callLocalFunction(l: ["", Pointer(), ___className, "AnchorAt", pos as Any]) as! String }
    public func ConnectAppendHtml(f: @escaping (_ html: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectAppendHtml", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectAppendHtml() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectAppendHtml"]) }
    public func AppendHtml(html: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AppendHtml", html as Any]) }
    public func AppendHtmlDefault(html: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AppendHtmlDefault", html as Any]) }
    public func ConnectAppendPlainText(f: @escaping (_ text: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectAppendPlainText", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectAppendPlainText() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectAppendPlainText"]) }
    public func AppendPlainText(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AppendPlainText", text as Any]) }
    public func AppendPlainTextDefault(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AppendPlainTextDefault", text as Any]) }
    public func BackgroundVisible() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "BackgroundVisible"]) as! Bool }
    public func BlockBoundingGeometry(block: QTextBlock_ITF? = nil) -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "BlockBoundingGeometry", block as Any]) as! QRectF }
    public func BlockBoundingRect(block: QTextBlock_ITF? = nil) -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "BlockBoundingRect", block as Any]) as! QRectF }
    public func BlockCount() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "BlockCount"]) as! Float) }
    public func ConnectBlockCountChanged(f: @escaping (_ newBlockCount: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectBlockCountChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectBlockCountChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectBlockCountChanged"]) }
    public func BlockCountChanged(newBlockCount: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "BlockCountChanged", newBlockCount as Any]) }
    public func ConnectCanInsertFromMimeData(f: @escaping (_ source: QMimeData) -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCanInsertFromMimeData", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QMimeData) } as Any) }
    public func DisconnectCanInsertFromMimeData() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCanInsertFromMimeData"]) }
    public func CanInsertFromMimeData(source: QMimeData_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "CanInsertFromMimeData", source as Any]) as! Bool }
    public func CanInsertFromMimeDataDefault(source: QMimeData_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "CanInsertFromMimeDataDefault", source as Any]) as! Bool }
    public func CanPaste() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "CanPaste"]) as! Bool }
    public func ConnectCenterCursor(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCenterCursor", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectCenterCursor() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCenterCursor"]) }
    public func CenterCursor() { _ = callLocalFunction(l: ["", Pointer(), ___className, "CenterCursor"]) }
    public func CenterCursorDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "CenterCursorDefault"]) }
    public func CenterOnScroll() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "CenterOnScroll"]) as! Bool }
    public func ConnectClear(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectClear", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectClear() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectClear"]) }
    public func Clear() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Clear"]) }
    public func ClearDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearDefault"]) }
    public func ContentOffset() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "ContentOffset"]) as! QPointF }
    public func ConnectCopy(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCopy", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectCopy() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCopy"]) }
    public func Copy() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Copy"]) }
    public func CopyDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "CopyDefault"]) }
    public func ConnectCopyAvailable(f: @escaping (_ yes: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCopyAvailable", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectCopyAvailable() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCopyAvailable"]) }
    public func CopyAvailable(yes: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CopyAvailable", yes as Any]) }
    public func ConnectCreateMimeDataFromSelection(f: @escaping () -> QMimeData) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCreateMimeDataFromSelection", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectCreateMimeDataFromSelection() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCreateMimeDataFromSelection"]) }
    public func CreateMimeDataFromSelection() -> QMimeData { callLocalFunction(l: ["", Pointer(), ___className, "CreateMimeDataFromSelection"]) as! QMimeData }
    public func CreateMimeDataFromSelectionDefault() -> QMimeData { callLocalFunction(l: ["", Pointer(), ___className, "CreateMimeDataFromSelectionDefault"]) as! QMimeData }
    public func CreateStandardContextMenu() -> QMenu { callLocalFunction(l: ["", Pointer(), ___className, "CreateStandardContextMenu"]) as! QMenu }
    public func CreateStandardContextMenu2(position: QPoint_ITF? = nil) -> QMenu { callLocalFunction(l: ["", Pointer(), ___className, "CreateStandardContextMenu2", position as Any]) as! QMenu }
    public func CurrentCharFormat() -> QTextCharFormat { callLocalFunction(l: ["", Pointer(), ___className, "CurrentCharFormat"]) as! QTextCharFormat }
    public func CursorForPosition(pos: QPoint_ITF? = nil) -> QTextCursor { callLocalFunction(l: ["", Pointer(), ___className, "CursorForPosition", pos as Any]) as! QTextCursor }
    public func ConnectCursorPositionChanged(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCursorPositionChanged", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectCursorPositionChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCursorPositionChanged"]) }
    public func CursorPositionChanged() { _ = callLocalFunction(l: ["", Pointer(), ___className, "CursorPositionChanged"]) }
    public func CursorRect(cursor: QTextCursor_ITF? = nil) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "CursorRect", cursor as Any]) as! QRect }
    public func CursorRect2() -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "CursorRect2"]) as! QRect }
    public func CursorWidth() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CursorWidth"]) as! Float) }
    public func ConnectCut(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCut", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectCut() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCut"]) }
    public func Cut() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Cut"]) }
    public func CutDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "CutDefault"]) }
    public func Document() -> QTextDocument { callLocalFunction(l: ["", Pointer(), ___className, "Document"]) as! QTextDocument }
    public func DocumentTitle() -> String { callLocalFunction(l: ["", Pointer(), ___className, "DocumentTitle"]) as! String }
    public func EnsureCursorVisible() { _ = callLocalFunction(l: ["", Pointer(), ___className, "EnsureCursorVisible"]) }
    public func Find_QFrame(exp: String, options: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "Find", exp as Any, options as Any]) as! Bool }
    public func Find2(exp: QRegExp_ITF? = nil, options: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "Find2", exp as Any, options as Any]) as! Bool }
    public func Find3(exp: QRegularExpression_ITF? = nil, options: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "Find3", exp as Any, options as Any]) as! Bool }
    public func FirstVisibleBlock() -> QTextBlock { callLocalFunction(l: ["", Pointer(), ___className, "FirstVisibleBlock"]) as! QTextBlock }
    public func ConnectInsertFromMimeData(f: @escaping (_ source: QMimeData) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectInsertFromMimeData", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QMimeData) } as Any) }
    public func DisconnectInsertFromMimeData() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectInsertFromMimeData"]) }
    public func InsertFromMimeData(source: QMimeData_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertFromMimeData", source as Any]) }
    public func InsertFromMimeDataDefault(source: QMimeData_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertFromMimeDataDefault", source as Any]) }
    public func ConnectInsertPlainText(f: @escaping (_ text: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectInsertPlainText", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectInsertPlainText() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectInsertPlainText"]) }
    public func InsertPlainText(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertPlainText", text as Any]) }
    public func InsertPlainTextDefault(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertPlainTextDefault", text as Any]) }
    public func IsReadOnly() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsReadOnly"]) as! Bool }
    public func IsUndoRedoEnabled() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsUndoRedoEnabled"]) as! Bool }
    public func LineWrapMode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "LineWrapMode"]) as! Float) }
    public func ConnectLoadResource(f: @escaping (_ ty: Int, _ name: QUrl) -> QVariant) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectLoadResource", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! QUrl) } as Any) }
    public func DisconnectLoadResource() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectLoadResource"]) }
    public func LoadResource(ty: Int, name: QUrl_ITF? = nil) -> QVariant { callLocalFunction(l: ["", Pointer(), ___className, "LoadResource", ty as Any, name as Any]) as! QVariant }
    public func LoadResourceDefault(ty: Int, name: QUrl_ITF? = nil) -> QVariant { callLocalFunction(l: ["", Pointer(), ___className, "LoadResourceDefault", ty as Any, name as Any]) as! QVariant }
    public func MaximumBlockCount() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "MaximumBlockCount"]) as! Float) }
    public func MergeCurrentCharFormat(modifier: QTextCharFormat_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MergeCurrentCharFormat", modifier as Any]) }
    public func ConnectModificationChanged(f: @escaping (_ changed: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectModificationChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectModificationChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectModificationChanged"]) }
    public func ModificationChanged(changed: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ModificationChanged", changed as Any]) }
    public func MoveCursor(operation: Int, mode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MoveCursor", operation as Any, mode as Any]) }
    public func OverwriteMode() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "OverwriteMode"]) as! Bool }
    public func ConnectPaste(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPaste", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectPaste() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPaste"]) }
    public func Paste() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Paste"]) }
    public func PasteDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "PasteDefault"]) }
    public func PlaceholderText() -> String { callLocalFunction(l: ["", Pointer(), ___className, "PlaceholderText"]) as! String }
    public func Print(printer: QPagedPaintDevice_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Print", printer as Any]) }
    public func ConnectRedo(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRedo", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectRedo() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRedo"]) }
    public func Redo() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Redo"]) }
    public func RedoDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "RedoDefault"]) }
    public func ConnectRedoAvailable(f: @escaping (_ available: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRedoAvailable", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectRedoAvailable() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRedoAvailable"]) }
    public func RedoAvailable(available: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RedoAvailable", available as Any]) }
    public func ConnectSelectAll(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSelectAll", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectSelectAll() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSelectAll"]) }
    public func SelectAll() { _ = callLocalFunction(l: ["", Pointer(), ___className, "SelectAll"]) }
    public func SelectAllDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "SelectAllDefault"]) }
    public func ConnectSelectionChanged(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSelectionChanged", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectSelectionChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSelectionChanged"]) }
    public func SelectionChanged() { _ = callLocalFunction(l: ["", Pointer(), ___className, "SelectionChanged"]) }
    public func SetBackgroundVisible(visible: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetBackgroundVisible", visible as Any]) }
    public func SetCenterOnScroll(enabled: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCenterOnScroll", enabled as Any]) }
    public func SetCurrentCharFormat(format: QTextCharFormat_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentCharFormat", format as Any]) }
    public func SetCursorWidth(width: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCursorWidth", width as Any]) }
    public func SetDocument(document: QTextDocument_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDocument", document as Any]) }
    public func SetDocumentTitle(title: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDocumentTitle", title as Any]) }
    public func SetLineWrapMode(mode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetLineWrapMode", mode as Any]) }
    public func SetMaximumBlockCount(maximum: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMaximumBlockCount", maximum as Any]) }
    public func SetOverwriteMode(overwrite: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOverwriteMode", overwrite as Any]) }
    public func SetPlaceholderText(placeholderText: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPlaceholderText", placeholderText as Any]) }
    public func ConnectSetPlainText(f: @escaping (_ text: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetPlainText", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectSetPlainText() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetPlainText"]) }
    public func SetPlainText(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPlainText", text as Any]) }
    public func SetPlainTextDefault(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPlainTextDefault", text as Any]) }
    public func SetReadOnly(ro: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetReadOnly", ro as Any]) }
    public func SetTabChangesFocus(b: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabChangesFocus", b as Any]) }
    public func SetTabStopDistance(distance: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabStopDistance", distance as Any]) }
    public func SetTabStopWidth(width: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabStopWidth", width as Any]) }
    public func SetTextCursor(cursor: QTextCursor_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTextCursor", cursor as Any]) }
    public func SetTextInteractionFlags(flags: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTextInteractionFlags", flags as Any]) }
    public func SetUndoRedoEnabled(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetUndoRedoEnabled", enable as Any]) }
    public func SetWordWrapMode(policy: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWordWrapMode", policy as Any]) }
    public func TabChangesFocus() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "TabChangesFocus"]) as! Bool }
    public func TabStopDistance() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "TabStopDistance"]) as! Float }
    public func TabStopWidth() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TabStopWidth"]) as! Float) }
    public func ConnectTextChanged(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTextChanged", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectTextChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTextChanged"]) }
    public func TextChanged() { _ = callLocalFunction(l: ["", Pointer(), ___className, "TextChanged"]) }
    public func TextCursor() -> QTextCursor { callLocalFunction(l: ["", Pointer(), ___className, "TextCursor"]) as! QTextCursor }
    public func TextInteractionFlags() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TextInteractionFlags"]) as! Float) }
    public func ToPlainText() -> String { callLocalFunction(l: ["", Pointer(), ___className, "ToPlainText"]) as! String }
    public func ConnectUndo(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectUndo", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectUndo() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectUndo"]) }
    public func Undo() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Undo"]) }
    public func UndoDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UndoDefault"]) }
    public func ConnectUndoAvailable(f: @escaping (_ available: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectUndoAvailable", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectUndoAvailable() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectUndoAvailable"]) }
    public func UndoAvailable(available: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "UndoAvailable", available as Any]) }
    public func ConnectUpdateRequest(f: @escaping (_ rect: QRect, _ dy: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectUpdateRequest", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QRect, Int(inp[1] as! Float)) } as Any) }
    public func DisconnectUpdateRequest() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectUpdateRequest"]) }
    public func UpdateRequest(rect: QRect_ITF? = nil, dy: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "UpdateRequest", rect as Any, dy as Any]) }
    public func WordWrapMode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "WordWrapMode"]) as! Float) }
    public func ConnectZoomIn(f: @escaping (_ ran: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectZoomIn", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectZoomIn() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectZoomIn"]) }
    public func ZoomIn(ran: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ZoomIn", ran as Any]) }
    public func ZoomInDefault(ran: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ZoomInDefault", ran as Any]) }
    public func ConnectZoomOut(f: @escaping (_ ran: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectZoomOut", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectZoomOut() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectZoomOut"]) }
    public func ZoomOut(ran: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ZoomOut", ran as Any]) }
    public func ZoomOutDefault(ran: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ZoomOutDefault", ran as Any]) }
    public func ConnectDestroyQPlainTextEdit(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQPlainTextEdit", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQPlainTextEdit() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQPlainTextEdit"]) }
    public func DestroyQPlainTextEdit() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQPlainTextEdit"]) }
    public func DestroyQPlainTextEditDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQPlainTextEditDefault"]) }
}

public func NewQPlainTextEditFromPointer(ptr: String) -> QPlainTextEdit { let r = QPlainTextEdit(); r.initFrom(p: ptr, n: "widgets.QPlainTextEdit"); return r }
public func NewQPlainTextEdit(parent: QWidget_ITF? = nil) -> QPlainTextEdit { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQPlainTextEdit", "", parent as Any]) as! QPlainTextEdit }
public func NewQPlainTextEdit2(text: String, parent: QWidget_ITF? = nil) -> QPlainTextEdit { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQPlainTextEdit2", "", text as Any, parent as Any]) as! QPlainTextEdit }
public protocol QProgressBar_ITF: QWidget_ITF {
    func QProgressBar_PTR() -> QProgressBar
}

public class QProgressBar: QWidget, QProgressBar_ITF {
    public func QProgressBar_PTR() -> QProgressBar { callLocalFunction(l: ["", Pointer(), ___className, "QProgressBar_PTR"]) as! QProgressBar }
    public func Alignment() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Alignment"]) as! Float) }
    public func Format() -> String { callLocalFunction(l: ["", Pointer(), ___className, "Format"]) as! String }
    public func InitStyleOption(option: QStyleOptionProgressBar_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InitStyleOption", option as Any]) }
    public func InvertedAppearance() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "InvertedAppearance"]) as! Bool }
    public func IsTextVisible() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsTextVisible"]) as! Bool }
    public func Maximum() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Maximum"]) as! Float) }
    public func Minimum() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Minimum"]) as! Float) }
    public func Orientation() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Orientation"]) as! Float) }
    public func ConnectReset(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectReset", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectReset() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectReset"]) }
    public func Reset() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Reset"]) }
    public func ResetDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResetDefault"]) }
    public func ResetFormat() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResetFormat"]) }
    public func SetAlignment(alignment: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAlignment", alignment as Any]) }
    public func SetFormat(format: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFormat", format as Any]) }
    public func SetInvertedAppearance(invert: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetInvertedAppearance", invert as Any]) }
    public func ConnectSetMaximum(f: @escaping (_ maximum: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetMaximum", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSetMaximum() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetMaximum"]) }
    public func SetMaximum(maximum: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMaximum", maximum as Any]) }
    public func SetMaximumDefault(maximum: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMaximumDefault", maximum as Any]) }
    public func ConnectSetMinimum(f: @escaping (_ minimum: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetMinimum", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSetMinimum() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetMinimum"]) }
    public func SetMinimum(minimum: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMinimum", minimum as Any]) }
    public func SetMinimumDefault(minimum: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMinimumDefault", minimum as Any]) }
    public func ConnectSetOrientation(f: @escaping (_ vqt: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetOrientation", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSetOrientation() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetOrientation"]) }
    public func SetOrientation(vqt: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOrientation", vqt as Any]) }
    public func SetOrientationDefault(vqt: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOrientationDefault", vqt as Any]) }
    public func ConnectSetRange(f: @escaping (_ minimum: Int, _ maximum: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetRange", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float)) } as Any) }
    public func DisconnectSetRange() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetRange"]) }
    public func SetRange(minimum: Int, maximum: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRange", minimum as Any, maximum as Any]) }
    public func SetRangeDefault(minimum: Int, maximum: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRangeDefault", minimum as Any, maximum as Any]) }
    public func SetTextDirection(textDirection: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTextDirection", textDirection as Any]) }
    public func SetTextVisible(visible: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTextVisible", visible as Any]) }
    public func ConnectSetValue(f: @escaping (_ value: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetValue", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSetValue() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetValue"]) }
    public func SetValue(value: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetValue", value as Any]) }
    public func SetValueDefault(value: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetValueDefault", value as Any]) }
    public func ConnectText(f: @escaping () -> String) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectText", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectText() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectText"]) }
    public func Text() -> String { callLocalFunction(l: ["", Pointer(), ___className, "Text"]) as! String }
    public func TextDefault() -> String { callLocalFunction(l: ["", Pointer(), ___className, "TextDefault"]) as! String }
    public func TextDirection() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TextDirection"]) as! Float) }
    public func Value() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Value"]) as! Float) }
    public func ConnectValueChanged(f: @escaping (_ value: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectValueChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectValueChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectValueChanged"]) }
    public func ValueChanged(value: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ValueChanged", value as Any]) }
    public func ConnectDestroyQProgressBar(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQProgressBar", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQProgressBar() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQProgressBar"]) }
    public func DestroyQProgressBar() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQProgressBar"]) }
    public func DestroyQProgressBarDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQProgressBarDefault"]) }
}

public func NewQProgressBarFromPointer(ptr: String) -> QProgressBar { let r = QProgressBar(); r.initFrom(p: ptr, n: "widgets.QProgressBar"); return r }
public func NewQProgressBar(parent: QWidget_ITF? = nil) -> QProgressBar { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQProgressBar", "", parent as Any]) as! QProgressBar }
public protocol QProgressDialog_ITF: QDialog_ITF {
    func QProgressDialog_PTR() -> QProgressDialog
}

public class QProgressDialog: QDialog, QProgressDialog_ITF {
    public func QProgressDialog_PTR() -> QProgressDialog { callLocalFunction(l: ["", Pointer(), ___className, "QProgressDialog_PTR"]) as! QProgressDialog }
    public func AutoClose() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "AutoClose"]) as! Bool }
    public func AutoReset() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "AutoReset"]) as! Bool }
    public func ConnectCancel(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCancel", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectCancel() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCancel"]) }
    public func Cancel() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Cancel"]) }
    public func CancelDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "CancelDefault"]) }
    public func ConnectCanceled(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCanceled", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectCanceled() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCanceled"]) }
    public func Canceled() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Canceled"]) }
    public func ConnectForceShow(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectForceShow", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectForceShow() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectForceShow"]) }
    public func ForceShow() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ForceShow"]) }
    public func ForceShowDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ForceShowDefault"]) }
    public func LabelText() -> String { callLocalFunction(l: ["", Pointer(), ___className, "LabelText"]) as! String }
    public func Maximum() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Maximum"]) as! Float) }
    public func Minimum() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Minimum"]) as! Float) }
    public func MinimumDuration() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "MinimumDuration"]) as! Float) }
    public func Open_QProgressDialog(receiver: QObject_ITF? = nil, member: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Open", receiver as Any, member as Any]) }
    public func ConnectReset(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectReset", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectReset() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectReset"]) }
    public func Reset() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Reset"]) }
    public func ResetDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResetDefault"]) }
    public func SetAutoClose(close: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAutoClose", close as Any]) }
    public func SetAutoReset(reset: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAutoReset", reset as Any]) }
    public func SetBar(bar: QProgressBar_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetBar", bar as Any]) }
    public func SetCancelButton(cancelButton: QPushButton_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCancelButton", cancelButton as Any]) }
    public func ConnectSetCancelButtonText(f: @escaping (_ cancelButtonText: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetCancelButtonText", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectSetCancelButtonText() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetCancelButtonText"]) }
    public func SetCancelButtonText(cancelButtonText: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCancelButtonText", cancelButtonText as Any]) }
    public func SetCancelButtonTextDefault(cancelButtonText: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCancelButtonTextDefault", cancelButtonText as Any]) }
    public func SetLabel(label: QLabel_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetLabel", label as Any]) }
    public func ConnectSetLabelText(f: @escaping (_ text: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetLabelText", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectSetLabelText() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetLabelText"]) }
    public func SetLabelText(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetLabelText", text as Any]) }
    public func SetLabelTextDefault(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetLabelTextDefault", text as Any]) }
    public func ConnectSetMaximum(f: @escaping (_ maximum: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetMaximum", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSetMaximum() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetMaximum"]) }
    public func SetMaximum(maximum: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMaximum", maximum as Any]) }
    public func SetMaximumDefault(maximum: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMaximumDefault", maximum as Any]) }
    public func ConnectSetMinimum(f: @escaping (_ minimum: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetMinimum", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSetMinimum() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetMinimum"]) }
    public func SetMinimum(minimum: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMinimum", minimum as Any]) }
    public func SetMinimumDefault(minimum: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMinimumDefault", minimum as Any]) }
    public func ConnectSetMinimumDuration(f: @escaping (_ ms: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetMinimumDuration", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSetMinimumDuration() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetMinimumDuration"]) }
    public func SetMinimumDuration(ms: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMinimumDuration", ms as Any]) }
    public func SetMinimumDurationDefault(ms: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMinimumDurationDefault", ms as Any]) }
    public func ConnectSetRange(f: @escaping (_ minimum: Int, _ maximum: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetRange", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float)) } as Any) }
    public func DisconnectSetRange() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetRange"]) }
    public func SetRange(minimum: Int, maximum: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRange", minimum as Any, maximum as Any]) }
    public func SetRangeDefault(minimum: Int, maximum: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRangeDefault", minimum as Any, maximum as Any]) }
    public func ConnectSetValue(f: @escaping (_ progress: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetValue", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSetValue() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetValue"]) }
    public func SetValue(progress: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetValue", progress as Any]) }
    public func SetValueDefault(progress: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetValueDefault", progress as Any]) }
    public func Value() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Value"]) as! Float) }
    public func WasCanceled() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "WasCanceled"]) as! Bool }
    public func ConnectDestroyQProgressDialog(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQProgressDialog", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQProgressDialog() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQProgressDialog"]) }
    public func DestroyQProgressDialog() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQProgressDialog"]) }
    public func DestroyQProgressDialogDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQProgressDialogDefault"]) }
}

public func NewQProgressDialogFromPointer(ptr: String) -> QProgressDialog { let r = QProgressDialog(); r.initFrom(p: ptr, n: "widgets.QProgressDialog"); return r }
public func NewQProgressDialog(parent: QWidget_ITF? = nil, ff: Int) -> QProgressDialog { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQProgressDialog", "", parent as Any, ff as Any]) as! QProgressDialog }
public func NewQProgressDialog2(labelText: String, cancelButtonText: String, minimum: Int, maximum: Int, parent: QWidget_ITF? = nil, ff: Int) -> QProgressDialog { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQProgressDialog2", "", labelText as Any, cancelButtonText as Any, minimum as Any, maximum as Any, parent as Any, ff as Any]) as! QProgressDialog }
public protocol QProxyStyle_ITF: QCommonStyle_ITF {
    func QProxyStyle_PTR() -> QProxyStyle
}

public class QProxyStyle: QCommonStyle, QProxyStyle_ITF {
    public func QProxyStyle_PTR() -> QProxyStyle { callLocalFunction(l: ["", Pointer(), ___className, "QProxyStyle_PTR"]) as! QProxyStyle }
    public func BaseStyle() -> QStyle { callLocalFunction(l: ["", Pointer(), ___className, "BaseStyle"]) as! QStyle }
    public func SetBaseStyle(style: QStyle_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetBaseStyle", style as Any]) }
    override public func ConnectStandardIcon(f: @escaping (_ standardIcon: Int, _ option: QStyleOption, _ widget: QWidget) -> QIcon) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectStandardIcon", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! QStyleOption, inp[2] as! QWidget) } as Any) }
    override public func DisconnectStandardIcon() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectStandardIcon"]) }
    override public func StandardIcon(standardIcon: Int, option: QStyleOption_ITF? = nil, widget: QWidget_ITF? = nil) -> QIcon { callLocalFunction(l: ["", Pointer(), ___className, "StandardIcon", standardIcon as Any, option as Any, widget as Any]) as! QIcon }
    override public func StandardIconDefault(standardIcon: Int, option: QStyleOption_ITF? = nil, widget: QWidget_ITF? = nil) -> QIcon { callLocalFunction(l: ["", Pointer(), ___className, "StandardIconDefault", standardIcon as Any, option as Any, widget as Any]) as! QIcon }
    public func ConnectDestroyQProxyStyle(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQProxyStyle", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQProxyStyle() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQProxyStyle"]) }
    public func DestroyQProxyStyle() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQProxyStyle"]) }
    public func DestroyQProxyStyleDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQProxyStyleDefault"]) }
}

public func NewQProxyStyleFromPointer(ptr: String) -> QProxyStyle { let r = QProxyStyle(); r.initFrom(p: ptr, n: "widgets.QProxyStyle"); return r }
public func NewQProxyStyle(style: QStyle_ITF? = nil) -> QProxyStyle { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQProxyStyle", "", style as Any]) as! QProxyStyle }
public func NewQProxyStyle2(key: String) -> QProxyStyle { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQProxyStyle2", "", key as Any]) as! QProxyStyle }
public protocol QPushButton_ITF: QAbstractButton_ITF {
    func QPushButton_PTR() -> QPushButton
}

public class QPushButton: QAbstractButton, QPushButton_ITF {
    public func QPushButton_PTR() -> QPushButton { callLocalFunction(l: ["", Pointer(), ___className, "QPushButton_PTR"]) as! QPushButton }
    public func AutoDefault() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "AutoDefault"]) as! Bool }
    public func InitStyleOption(option: QStyleOptionButton_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InitStyleOption", option as Any]) }
    public func IsDefault() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsDefault"]) as! Bool }
    public func IsFlat() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsFlat"]) as! Bool }
    public func Menu() -> QMenu { callLocalFunction(l: ["", Pointer(), ___className, "Menu"]) as! QMenu }
    override public func ConnectPaintEvent(f: @escaping (_ vqp: QPaintEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPaintEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPaintEvent) } as Any) }
    override public func DisconnectPaintEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPaintEvent"]) }
    override public func PaintEvent(event: QPaintEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "PaintEvent", event as Any]) }
    public func PaintEventDefault(vqp: QPaintEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "PaintEventDefault", vqp as Any]) }
    public func SetAutoDefault(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAutoDefault", vbo as Any]) }
    public func SetDefault(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDefault", vbo as Any]) }
    public func SetFlat(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFlat", vbo as Any]) }
    public func SetMenu(menu: QMenu_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMenu", menu as Any]) }
    public func ConnectShowMenu(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectShowMenu", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectShowMenu() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectShowMenu"]) }
    public func ShowMenu() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowMenu"]) }
    public func ShowMenuDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowMenuDefault"]) }
    public func ConnectDestroyQPushButton(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQPushButton", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQPushButton() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQPushButton"]) }
    public func DestroyQPushButton() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQPushButton"]) }
    public func DestroyQPushButtonDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQPushButtonDefault"]) }
}

public func NewQPushButtonFromPointer(ptr: String) -> QPushButton { let r = QPushButton(); r.initFrom(p: ptr, n: "widgets.QPushButton"); return r }
public func NewQPushButton(parent: QWidget_ITF? = nil) -> QPushButton { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQPushButton", "", parent as Any]) as! QPushButton }
public func NewQPushButton2(text: String, parent: QWidget_ITF? = nil) -> QPushButton { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQPushButton2", "", text as Any, parent as Any]) as! QPushButton }
public func NewQPushButton3(icon: QIcon_ITF? = nil, text: String, parent: QWidget_ITF? = nil) -> QPushButton { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQPushButton3", "", icon as Any, text as Any, parent as Any]) as! QPushButton }
public protocol QRadioButton_ITF: QAbstractButton_ITF {
    func QRadioButton_PTR() -> QRadioButton
}

public class QRadioButton: QAbstractButton, QRadioButton_ITF {
    public func QRadioButton_PTR() -> QRadioButton { callLocalFunction(l: ["", Pointer(), ___className, "QRadioButton_PTR"]) as! QRadioButton }
    public func InitStyleOption(option: QStyleOptionButton_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InitStyleOption", option as Any]) }
    override public func ConnectPaintEvent(f: @escaping (_ vqp: QPaintEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPaintEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPaintEvent) } as Any) }
    override public func DisconnectPaintEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPaintEvent"]) }
    override public func PaintEvent(event: QPaintEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "PaintEvent", event as Any]) }
    public func PaintEventDefault(vqp: QPaintEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "PaintEventDefault", vqp as Any]) }
    public func ConnectDestroyQRadioButton(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQRadioButton", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQRadioButton() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQRadioButton"]) }
    public func DestroyQRadioButton() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQRadioButton"]) }
    public func DestroyQRadioButtonDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQRadioButtonDefault"]) }
}

public func NewQRadioButtonFromPointer(ptr: String) -> QRadioButton { let r = QRadioButton(); r.initFrom(p: ptr, n: "widgets.QRadioButton"); return r }
public func NewQRadioButton(parent: QWidget_ITF? = nil) -> QRadioButton { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQRadioButton", "", parent as Any]) as! QRadioButton }
public func NewQRadioButton2(text: String, parent: QWidget_ITF? = nil) -> QRadioButton { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQRadioButton2", "", text as Any, parent as Any]) as! QRadioButton }
public protocol QRubberBand_ITF: QWidget_ITF {
    func QRubberBand_PTR() -> QRubberBand
}

public class QRubberBand: QWidget, QRubberBand_ITF {
    public func QRubberBand_PTR() -> QRubberBand { callLocalFunction(l: ["", Pointer(), ___className, "QRubberBand_PTR"]) as! QRubberBand }
    public func InitStyleOption(option: QStyleOptionRubberBand_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InitStyleOption", option as Any]) }
    public func Shape() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Shape"]) as! Float) }
    public func ConnectDestroyQRubberBand(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQRubberBand", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQRubberBand() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQRubberBand"]) }
    public func DestroyQRubberBand() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQRubberBand"]) }
    public func DestroyQRubberBandDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQRubberBandDefault"]) }
}

public func NewQRubberBandFromPointer(ptr: String) -> QRubberBand { let r = QRubberBand(); r.initFrom(p: ptr, n: "widgets.QRubberBand"); return r }
public func NewQRubberBand(s: Int, p: QWidget_ITF? = nil) -> QRubberBand { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQRubberBand", "", s as Any, p as Any]) as! QRubberBand }
public protocol QScrollArea_ITF: QAbstractScrollArea_ITF {
    func QScrollArea_PTR() -> QScrollArea
}

public class QScrollArea: QAbstractScrollArea, QScrollArea_ITF {
    public func QScrollArea_PTR() -> QScrollArea { callLocalFunction(l: ["", Pointer(), ___className, "QScrollArea_PTR"]) as! QScrollArea }
    public func Alignment() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Alignment"]) as! Float) }
    public func EnsureVisible(x: Int, y: Int, xmargi: Int, ymargi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "EnsureVisible", x as Any, y as Any, xmargi as Any, ymargi as Any]) }
    public func EnsureWidgetVisible(childWidget: QWidget_ITF? = nil, xmargi: Int, ymargi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "EnsureWidgetVisible", childWidget as Any, xmargi as Any, ymargi as Any]) }
    public func SetAlignment(vqt: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAlignment", vqt as Any]) }
    public func SetWidget(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWidget", widget as Any]) }
    public func SetWidgetResizable(resizable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWidgetResizable", resizable as Any]) }
    public func TakeWidget() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "TakeWidget"]) as! QWidget }
    public func Widget() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "Widget"]) as! QWidget }
    public func WidgetResizable() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "WidgetResizable"]) as! Bool }
    public func ConnectDestroyQScrollArea(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQScrollArea", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQScrollArea() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQScrollArea"]) }
    public func DestroyQScrollArea() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQScrollArea"]) }
    public func DestroyQScrollAreaDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQScrollAreaDefault"]) }
}

public func NewQScrollAreaFromPointer(ptr: String) -> QScrollArea { let r = QScrollArea(); r.initFrom(p: ptr, n: "widgets.QScrollArea"); return r }
public func NewQScrollArea(parent: QWidget_ITF? = nil) -> QScrollArea { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQScrollArea", "", parent as Any]) as! QScrollArea }
public protocol QScrollBar_ITF: QAbstractSlider_ITF {
    func QScrollBar_PTR() -> QScrollBar
}

public class QScrollBar: QAbstractSlider, QScrollBar_ITF {
    public func QScrollBar_PTR() -> QScrollBar { callLocalFunction(l: ["", Pointer(), ___className, "QScrollBar_PTR"]) as! QScrollBar }
    public func InitStyleOption(option: QStyleOptionSlider_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InitStyleOption", option as Any]) }
    public func ConnectDestroyQScrollBar(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQScrollBar", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQScrollBar() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQScrollBar"]) }
    public func DestroyQScrollBar() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQScrollBar"]) }
    public func DestroyQScrollBarDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQScrollBarDefault"]) }
}

public func NewQScrollBarFromPointer(ptr: String) -> QScrollBar { let r = QScrollBar(); r.initFrom(p: ptr, n: "widgets.QScrollBar"); return r }
public func NewQScrollBar(parent: QWidget_ITF? = nil) -> QScrollBar { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQScrollBar", "", parent as Any]) as! QScrollBar }
public func NewQScrollBar2(orientation: Int, parent: QWidget_ITF? = nil) -> QScrollBar { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQScrollBar2", "", orientation as Any, parent as Any]) as! QScrollBar }
public protocol QScroller_ITF: QObject_ITF {
    func QScroller_PTR() -> QScroller
}

public class QScroller: QObject, QScroller_ITF {
    public func QScroller_PTR() -> QScroller { callLocalFunction(l: ["", Pointer(), ___className, "QScroller_PTR"]) as! QScroller }
    public func ActiveScrollers() -> [QScroller] { callLocalFunction(l: ["", Pointer(), ___className, "ActiveScrollers"]) as! [QScroller] }
    public func ConnectEnsureVisible(f: @escaping (_ rect: QRectF, _ xmargi: Float, _ ymargi: Float) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectEnsureVisible", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QRectF, inp[1] as! Float, inp[2] as! Float) } as Any) }
    public func DisconnectEnsureVisible() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectEnsureVisible"]) }
    public func EnsureVisible(rect: QRectF_ITF? = nil, xmargi: Float, ymargi: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "EnsureVisible", rect as Any, xmargi as Any, ymargi as Any]) }
    public func EnsureVisibleDefault(rect: QRectF_ITF? = nil, xmargi: Float, ymargi: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "EnsureVisibleDefault", rect as Any, xmargi as Any, ymargi as Any]) }
    public func ConnectEnsureVisible2(f: @escaping (_ rect: QRectF, _ xmargi: Float, _ ymargi: Float, _ scrollTime: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectEnsureVisible2", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QRectF, inp[1] as! Float, inp[2] as! Float, Int(inp[3] as! Float)) } as Any) }
    public func DisconnectEnsureVisible2() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectEnsureVisible2"]) }
    public func EnsureVisible2(rect: QRectF_ITF? = nil, xmargi: Float, ymargi: Float, scrollTime: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "EnsureVisible2", rect as Any, xmargi as Any, ymargi as Any, scrollTime as Any]) }
    public func EnsureVisible2Default(rect: QRectF_ITF? = nil, xmargi: Float, ymargi: Float, scrollTime: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "EnsureVisible2Default", rect as Any, xmargi as Any, ymargi as Any, scrollTime as Any]) }
    public func FinalPosition() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "FinalPosition"]) as! QPointF }
    public func GrabGesture(target: QObject_ITF? = nil, scrollGestureType: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "GrabGesture", target as Any, scrollGestureType as Any]) as! Float) }
    public func GrabbedGesture(target: QObject_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "GrabbedGesture", target as Any]) as! Float) }
    public func HandleInput(input: Int, position: QPointF_ITF? = nil, timestamp: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "HandleInput", input as Any, position as Any, timestamp as Any]) as! Bool }
    public func HasScroller(target: QObject_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "HasScroller", target as Any]) as! Bool }
    public func PixelPerMeter() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "PixelPerMeter"]) as! QPointF }
    public func ConnectResendPrepareEvent(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectResendPrepareEvent", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectResendPrepareEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectResendPrepareEvent"]) }
    public func ResendPrepareEvent() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResendPrepareEvent"]) }
    public func ResendPrepareEventDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResendPrepareEventDefault"]) }
    public func ConnectScrollTo(f: @escaping (_ pos: QPointF) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectScrollTo", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPointF) } as Any) }
    public func DisconnectScrollTo() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectScrollTo"]) }
    public func ScrollTo(pos: QPointF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ScrollTo", pos as Any]) }
    public func ScrollToDefault(pos: QPointF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ScrollToDefault", pos as Any]) }
    public func ConnectScrollTo2(f: @escaping (_ pos: QPointF, _ scrollTime: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectScrollTo2", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPointF, Int(inp[1] as! Float)) } as Any) }
    public func DisconnectScrollTo2() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectScrollTo2"]) }
    public func ScrollTo2(pos: QPointF_ITF? = nil, scrollTime: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ScrollTo2", pos as Any, scrollTime as Any]) }
    public func ScrollTo2Default(pos: QPointF_ITF? = nil, scrollTime: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ScrollTo2Default", pos as Any, scrollTime as Any]) }
    public func Scroller(target: QObject_ITF? = nil) -> QScroller { callLocalFunction(l: ["", Pointer(), ___className, "Scroller", target as Any]) as! QScroller }
    public func Scroller2(target: QObject_ITF? = nil) -> QScroller { callLocalFunction(l: ["", Pointer(), ___className, "Scroller2", target as Any]) as! QScroller }
    public func ScrollerProperties() -> QScrollerProperties { callLocalFunction(l: ["", Pointer(), ___className, "ScrollerProperties"]) as! QScrollerProperties }
    public func ConnectScrollerPropertiesChanged(f: @escaping (_ newProperties: QScrollerProperties) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectScrollerPropertiesChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QScrollerProperties) } as Any) }
    public func DisconnectScrollerPropertiesChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectScrollerPropertiesChanged"]) }
    public func ScrollerPropertiesChanged(newProperties: QScrollerProperties_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ScrollerPropertiesChanged", newProperties as Any]) }
    public func ConnectSetScrollerProperties(f: @escaping (_ prop: QScrollerProperties) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetScrollerProperties", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QScrollerProperties) } as Any) }
    public func DisconnectSetScrollerProperties() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetScrollerProperties"]) }
    public func SetScrollerProperties(prop: QScrollerProperties_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetScrollerProperties", prop as Any]) }
    public func SetScrollerPropertiesDefault(prop: QScrollerProperties_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetScrollerPropertiesDefault", prop as Any]) }
    public func SetSnapPositionsX(positions: [Float]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSnapPositionsX", positions as Any]) }
    public func SetSnapPositionsX2(first: Float, interval: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSnapPositionsX2", first as Any, interval as Any]) }
    public func SetSnapPositionsY(positions: [Float]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSnapPositionsY", positions as Any]) }
    public func SetSnapPositionsY2(first: Float, interval: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSnapPositionsY2", first as Any, interval as Any]) }
    public func State() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "State"]) as! Float) }
    public func ConnectStateChanged(f: @escaping (_ newState: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectStateChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectStateChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectStateChanged"]) }
    public func StateChanged(newState: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "StateChanged", newState as Any]) }
    public func Stop() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Stop"]) }
    public func Target() -> QObject { callLocalFunction(l: ["", Pointer(), ___className, "Target"]) as! QObject }
    public func UngrabGesture(target: QObject_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "UngrabGesture", target as Any]) }
    public func Velocity() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "Velocity"]) as! QPointF }
    override public func ChildEventDefault(event: QChildEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ChildEventDefault", event as Any]) }
    override public func ConnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ConnectNotifyDefault", sign as Any]) }
    override public func CustomEventDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CustomEventDefault", event as Any]) }
    override public func DeleteLaterDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DeleteLaterDefault"]) }
    override public func DisconnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DisconnectNotifyDefault", sign as Any]) }
    override public func EventDefault(e: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventDefault", e as Any]) as! Bool }
    override public func EventFilterDefault(watched: QObject_ITF? = nil, event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventFilterDefault", watched as Any, event as Any]) as! Bool }
    override public func MetaObjectDefault() -> QMetaObject { callLocalFunction(l: ["", Pointer(), ___className, "MetaObjectDefault"]) as! QMetaObject }
    override public func TimerEventDefault(event: QTimerEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TimerEventDefault", event as Any]) }
}

public func NewQScrollerFromPointer(ptr: String) -> QScroller { let r = QScroller(); r.initFrom(p: ptr, n: "widgets.QScroller"); return r }
public func QScroller_ActiveScrollers() -> [QScroller] { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QScroller_ActiveScrollers", ""]) as! [QScroller] }
public func QScroller_GrabGesture(target: QObject_ITF? = nil, scrollGestureType: Int) -> Int { Widgets.initModule(); return Int(callLocalFunction(l: ["", "", "widgets.QScroller_GrabGesture", "", target as Any, scrollGestureType as Any]) as! Float) }
public func QScroller_GrabbedGesture(target: QObject_ITF? = nil) -> Int { Widgets.initModule(); return Int(callLocalFunction(l: ["", "", "widgets.QScroller_GrabbedGesture", "", target as Any]) as! Float) }
public func QScroller_HasScroller(target: QObject_ITF? = nil) -> Bool { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QScroller_HasScroller", "", target as Any]) as! Bool }
public func QScroller_Scroller(target: QObject_ITF? = nil) -> QScroller { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QScroller_Scroller", "", target as Any]) as! QScroller }
public func QScroller_Scroller2(target: QObject_ITF? = nil) -> QScroller { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QScroller_Scroller2", "", target as Any]) as! QScroller }
public func QScroller_UngrabGesture(target: QObject_ITF? = nil) { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QScroller_UngrabGesture", "", target as Any]) }
public protocol QScrollerProperties_ITF {
    func QScrollerProperties_PTR() -> QScrollerProperties
}

public class QScrollerProperties: Internal, QScrollerProperties_ITF {
    public func QScrollerProperties_PTR() -> QScrollerProperties { callLocalFunction(l: ["", Pointer(), ___className, "QScrollerProperties_PTR"]) as! QScrollerProperties }
    public func ScrollMetric(metric: Int) -> QVariant { callLocalFunction(l: ["", Pointer(), ___className, "ScrollMetric", metric as Any]) as! QVariant }
    public func SetDefaultScrollerProperties(sp: QScrollerProperties_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDefaultScrollerProperties", sp as Any]) }
    public func SetScrollMetric(metric: Int, value: QVariant_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetScrollMetric", metric as Any, value as Any]) }
    public func UnsetDefaultScrollerProperties() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UnsetDefaultScrollerProperties"]) }
    public func ConnectDestroyQScrollerProperties(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQScrollerProperties", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQScrollerProperties() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQScrollerProperties"]) }
    public func DestroyQScrollerProperties() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQScrollerProperties"]) }
    public func DestroyQScrollerPropertiesDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQScrollerPropertiesDefault"]) }
}

public func NewQScrollerPropertiesFromPointer(ptr: String) -> QScrollerProperties { let r = QScrollerProperties(); r.initFrom(p: ptr, n: "widgets.QScrollerProperties"); return r }
public func NewQScrollerProperties() -> QScrollerProperties { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQScrollerProperties", ""]) as! QScrollerProperties }
public func NewQScrollerProperties2(sp: QScrollerProperties_ITF? = nil) -> QScrollerProperties { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQScrollerProperties2", "", sp as Any]) as! QScrollerProperties }
public func QScrollerProperties_SetDefaultScrollerProperties(sp: QScrollerProperties_ITF? = nil) { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QScrollerProperties_SetDefaultScrollerProperties", "", sp as Any]) }
public func QScrollerProperties_UnsetDefaultScrollerProperties() { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QScrollerProperties_UnsetDefaultScrollerProperties", ""]) }
public protocol QShortcut_ITF: QObject_ITF {
    func QShortcut_PTR() -> QShortcut
}

public class QShortcut: QObject, QShortcut_ITF {
    public func QShortcut_PTR() -> QShortcut { callLocalFunction(l: ["", Pointer(), ___className, "QShortcut_PTR"]) as! QShortcut }
    public func ConnectActivated(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectActivated", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectActivated() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectActivated"]) }
    public func Activated() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Activated"]) }
    public func ConnectActivatedAmbiguously(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectActivatedAmbiguously", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectActivatedAmbiguously() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectActivatedAmbiguously"]) }
    public func ActivatedAmbiguously() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ActivatedAmbiguously"]) }
    public func AutoRepeat() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "AutoRepeat"]) as! Bool }
    public func Context() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Context"]) as! Float) }
    public func Id() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Id"]) as! Float) }
    public func IsEnabled() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsEnabled"]) as! Bool }
    public func Key() -> QKeySequence { callLocalFunction(l: ["", Pointer(), ___className, "Key"]) as! QKeySequence }
    public func ParentWidget() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "ParentWidget"]) as! QWidget }
    public func SetAutoRepeat(on: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAutoRepeat", on as Any]) }
    public func SetContext(context: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetContext", context as Any]) }
    public func SetEnabled(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetEnabled", enable as Any]) }
    public func SetKey(key: QKeySequence_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetKey", key as Any]) }
    public func SetWhatsThis(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWhatsThis", text as Any]) }
    public func WhatsThis() -> String { callLocalFunction(l: ["", Pointer(), ___className, "WhatsThis"]) as! String }
    public func ConnectDestroyQShortcut(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQShortcut", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQShortcut() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQShortcut"]) }
    public func DestroyQShortcut() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQShortcut"]) }
    public func DestroyQShortcutDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQShortcutDefault"]) }
    override public func ChildEventDefault(event: QChildEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ChildEventDefault", event as Any]) }
    override public func ConnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ConnectNotifyDefault", sign as Any]) }
    override public func CustomEventDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CustomEventDefault", event as Any]) }
    override public func DeleteLaterDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DeleteLaterDefault"]) }
    override public func DisconnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DisconnectNotifyDefault", sign as Any]) }
    override public func EventDefault(e: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventDefault", e as Any]) as! Bool }
    override public func EventFilterDefault(watched: QObject_ITF? = nil, event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventFilterDefault", watched as Any, event as Any]) as! Bool }
    override public func MetaObjectDefault() -> QMetaObject { callLocalFunction(l: ["", Pointer(), ___className, "MetaObjectDefault"]) as! QMetaObject }
    override public func TimerEventDefault(event: QTimerEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TimerEventDefault", event as Any]) }
}

public func NewQShortcutFromPointer(ptr: String) -> QShortcut { let r = QShortcut(); r.initFrom(p: ptr, n: "widgets.QShortcut"); return r }
public func NewQShortcut(parent: QWidget_ITF? = nil) -> QShortcut { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQShortcut", "", parent as Any]) as! QShortcut }
public func NewQShortcut2(key: QKeySequence_ITF? = nil, parent: QWidget_ITF? = nil, member: String, ambiguousMember: String, context: Int) -> QShortcut { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQShortcut2", "", key as Any, parent as Any, member as Any, ambiguousMember as Any, context as Any]) as! QShortcut }
public protocol QSizeGrip_ITF: QWidget_ITF {
    func QSizeGrip_PTR() -> QSizeGrip
}

public class QSizeGrip: QWidget, QSizeGrip_ITF {
    public func QSizeGrip_PTR() -> QSizeGrip { callLocalFunction(l: ["", Pointer(), ___className, "QSizeGrip_PTR"]) as! QSizeGrip }
    override public func ConnectSetVisible(f: @escaping (_ visible: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetVisible", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    override public func DisconnectSetVisible() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetVisible"]) }
    override public func SetVisible(visible: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetVisible", visible as Any]) }
    override public func SetVisibleDefault(visible: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetVisibleDefault", visible as Any]) }
    public func ConnectDestroyQSizeGrip(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQSizeGrip", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQSizeGrip() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQSizeGrip"]) }
    public func DestroyQSizeGrip() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQSizeGrip"]) }
    public func DestroyQSizeGripDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQSizeGripDefault"]) }
}

public func NewQSizeGripFromPointer(ptr: String) -> QSizeGrip { let r = QSizeGrip(); r.initFrom(p: ptr, n: "widgets.QSizeGrip"); return r }
public func NewQSizeGrip(parent: QWidget_ITF? = nil) -> QSizeGrip { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQSizeGrip", "", parent as Any]) as! QSizeGrip }
public protocol QSizePolicy_ITF {
    func QSizePolicy_PTR() -> QSizePolicy
}

public class QSizePolicy: Internal, QSizePolicy_ITF {
    public func QSizePolicy_PTR() -> QSizePolicy { callLocalFunction(l: ["", Pointer(), ___className, "QSizePolicy_PTR"]) as! QSizePolicy }
    public func DestroyQSizePolicy() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQSizePolicy"]) }
    public func ControlType() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ControlType"]) as! Float) }
    public func ExpandingDirections() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ExpandingDirections"]) as! Float) }
    public func HasHeightForWidth() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "HasHeightForWidth"]) as! Bool }
    public func HasWidthForHeight() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "HasWidthForHeight"]) as! Bool }
    public func HorizontalPolicy() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "HorizontalPolicy"]) as! Float) }
    public func HorizontalStretch() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "HorizontalStretch"]) as! Float) }
    public func RetainSizeWhenHidden() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "RetainSizeWhenHidden"]) as! Bool }
    public func SetControlType(ty: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetControlType", ty as Any]) }
    public func SetHeightForWidth(dependent: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetHeightForWidth", dependent as Any]) }
    public func SetHorizontalPolicy(policy: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetHorizontalPolicy", policy as Any]) }
    public func SetHorizontalStretch(stretchFactor: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetHorizontalStretch", stretchFactor as Any]) }
    public func SetRetainSizeWhenHidden(retainSize: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRetainSizeWhenHidden", retainSize as Any]) }
    public func SetVerticalPolicy(policy: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetVerticalPolicy", policy as Any]) }
    public func SetVerticalStretch(stretchFactor: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetVerticalStretch", stretchFactor as Any]) }
    public func SetWidthForHeight(dependent: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWidthForHeight", dependent as Any]) }
    public func Transpose() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Transpose"]) }
    public func Transposed() -> QSizePolicy { callLocalFunction(l: ["", Pointer(), ___className, "Transposed"]) as! QSizePolicy }
    public func VerticalPolicy() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "VerticalPolicy"]) as! Float) }
    public func VerticalStretch() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "VerticalStretch"]) as! Float) }
}

public func NewQSizePolicyFromPointer(ptr: String) -> QSizePolicy { let r = QSizePolicy(); r.initFrom(p: ptr, n: "widgets.QSizePolicy"); return r }
public func NewQSizePolicy() -> QSizePolicy { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQSizePolicy", ""]) as! QSizePolicy }
public func NewQSizePolicy2(horizontal: Int, vertical: Int, ty: Int) -> QSizePolicy { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQSizePolicy2", "", horizontal as Any, vertical as Any, ty as Any]) as! QSizePolicy }
public protocol QSlider_ITF: QAbstractSlider_ITF {
    func QSlider_PTR() -> QSlider
}

public class QSlider: QAbstractSlider, QSlider_ITF {
    public func QSlider_PTR() -> QSlider { callLocalFunction(l: ["", Pointer(), ___className, "QSlider_PTR"]) as! QSlider }
    public func InitStyleOption(option: QStyleOptionSlider_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InitStyleOption", option as Any]) }
    public func SetTickInterval(ti: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTickInterval", ti as Any]) }
    public func SetTickPosition(position: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTickPosition", position as Any]) }
    public func TickInterval() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TickInterval"]) as! Float) }
    public func TickPosition() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TickPosition"]) as! Float) }
    public func ConnectDestroyQSlider(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQSlider", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQSlider() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQSlider"]) }
    public func DestroyQSlider() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQSlider"]) }
    public func DestroyQSliderDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQSliderDefault"]) }
}

public func NewQSliderFromPointer(ptr: String) -> QSlider { let r = QSlider(); r.initFrom(p: ptr, n: "widgets.QSlider"); return r }
public func NewQSlider(parent: QWidget_ITF? = nil) -> QSlider { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQSlider", "", parent as Any]) as! QSlider }
public func NewQSlider2(orientation: Int, parent: QWidget_ITF? = nil) -> QSlider { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQSlider2", "", orientation as Any, parent as Any]) as! QSlider }
public protocol QSpacerItem_ITF: QLayoutItem_ITF {
    func QSpacerItem_PTR() -> QSpacerItem
}

public class QSpacerItem: QLayoutItem, QSpacerItem_ITF {
    public func QSpacerItem_PTR() -> QSpacerItem { callLocalFunction(l: ["", Pointer(), ___className, "QSpacerItem_PTR"]) as! QSpacerItem }
    public func ChangeSize(w: Int, h: Int, hPolicy: Int, vPolicy: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ChangeSize", w as Any, h as Any, hPolicy as Any, vPolicy as Any]) }
    override public func ConnectExpandingDirections(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectExpandingDirections", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectExpandingDirections() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectExpandingDirections"]) }
    override public func ExpandingDirections() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ExpandingDirections"]) as! Float) }
    public func ExpandingDirectionsDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ExpandingDirectionsDefault"]) as! Float) }
    override public func ConnectGeometry(f: @escaping () -> QRect) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectGeometry", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectGeometry() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectGeometry"]) }
    override public func Geometry() -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "Geometry"]) as! QRect }
    public func GeometryDefault() -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "GeometryDefault"]) as! QRect }
    override public func ConnectIsEmpty(f: @escaping () -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectIsEmpty", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectIsEmpty() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectIsEmpty"]) }
    override public func IsEmpty() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsEmpty"]) as! Bool }
    public func IsEmptyDefault() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsEmptyDefault"]) as! Bool }
    override public func ConnectMaximumSize(f: @escaping () -> QSize) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMaximumSize", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectMaximumSize() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMaximumSize"]) }
    override public func MaximumSize() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "MaximumSize"]) as! QSize }
    public func MaximumSizeDefault() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "MaximumSizeDefault"]) as! QSize }
    override public func ConnectMinimumSize(f: @escaping () -> QSize) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMinimumSize", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectMinimumSize() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMinimumSize"]) }
    override public func MinimumSize() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "MinimumSize"]) as! QSize }
    public func MinimumSizeDefault() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "MinimumSizeDefault"]) as! QSize }
    override public func ConnectSetGeometry(f: @escaping (_ r: QRect) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetGeometry", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QRect) } as Any) }
    override public func DisconnectSetGeometry() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetGeometry"]) }
    override public func SetGeometry(r: QRect_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetGeometry", r as Any]) }
    public func SetGeometryDefault(r: QRect_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetGeometryDefault", r as Any]) }
    override public func ConnectSizeHint(f: @escaping () -> QSize) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSizeHint", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectSizeHint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSizeHint"]) }
    override public func SizeHint() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "SizeHint"]) as! QSize }
    public func SizeHintDefault() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "SizeHintDefault"]) as! QSize }
    public func SizePolicy() -> QSizePolicy { callLocalFunction(l: ["", Pointer(), ___className, "SizePolicy"]) as! QSizePolicy }
    public func ConnectDestroyQSpacerItem(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQSpacerItem", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQSpacerItem() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQSpacerItem"]) }
    public func DestroyQSpacerItem() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQSpacerItem"]) }
    public func DestroyQSpacerItemDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQSpacerItemDefault"]) }
}

public func NewQSpacerItemFromPointer(ptr: String) -> QSpacerItem { let r = QSpacerItem(); r.initFrom(p: ptr, n: "widgets.QSpacerItem"); return r }
public func NewQSpacerItem(w: Int, h: Int, hPolicy: Int, vPolicy: Int) -> QSpacerItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQSpacerItem", "", w as Any, h as Any, hPolicy as Any, vPolicy as Any]) as! QSpacerItem }
public protocol QSpinBox_ITF: QAbstractSpinBox_ITF {
    func QSpinBox_PTR() -> QSpinBox
}

public class QSpinBox: QAbstractSpinBox, QSpinBox_ITF {
    public func QSpinBox_PTR() -> QSpinBox { callLocalFunction(l: ["", Pointer(), ___className, "QSpinBox_PTR"]) as! QSpinBox }
    public func CleanText() -> String { callLocalFunction(l: ["", Pointer(), ___className, "CleanText"]) as! String }
    public func DisplayIntegerBase() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "DisplayIntegerBase"]) as! Float) }
    public func Maximum() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Maximum"]) as! Float) }
    public func Minimum() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Minimum"]) as! Float) }
    public func Prefix() -> String { callLocalFunction(l: ["", Pointer(), ___className, "Prefix"]) as! String }
    public func SetDisplayIntegerBase(base: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDisplayIntegerBase", base as Any]) }
    public func SetMaximum(max: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMaximum", max as Any]) }
    public func SetMinimum(mi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMinimum", mi as Any]) }
    public func SetPrefix(prefix: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPrefix", prefix as Any]) }
    public func SetRange(minimum: Int, maximum: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRange", minimum as Any, maximum as Any]) }
    public func SetSingleStep(val: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSingleStep", val as Any]) }
    public func SetStepType(stepType: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStepType", stepType as Any]) }
    public func SetSuffix(suffix: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSuffix", suffix as Any]) }
    public func ConnectSetValue(f: @escaping (_ val: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetValue", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSetValue() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetValue"]) }
    public func SetValue(val: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetValue", val as Any]) }
    public func SetValueDefault(val: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetValueDefault", val as Any]) }
    public func SingleStep() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SingleStep"]) as! Float) }
    public func StepType() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "StepType"]) as! Float) }
    public func Suffix() -> String { callLocalFunction(l: ["", Pointer(), ___className, "Suffix"]) as! String }
    public func ConnectTextFromValue(f: @escaping (_ value: Int) -> String) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTextFromValue", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectTextFromValue() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTextFromValue"]) }
    public func TextFromValue(value: Int) -> String { callLocalFunction(l: ["", Pointer(), ___className, "TextFromValue", value as Any]) as! String }
    public func TextFromValueDefault(value: Int) -> String { callLocalFunction(l: ["", Pointer(), ___className, "TextFromValueDefault", value as Any]) as! String }
    public func Value() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Value"]) as! Float) }
    public func ConnectValueChanged(f: @escaping (_ i: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectValueChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectValueChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectValueChanged"]) }
    public func ValueChanged(i: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ValueChanged", i as Any]) }
    public func ConnectValueChanged2(f: @escaping (_ text: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectValueChanged2", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectValueChanged2() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectValueChanged2"]) }
    public func ValueChanged2(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ValueChanged2", text as Any]) }
    public func ConnectValueFromText(f: @escaping (_ text: String) -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectValueFromText", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectValueFromText() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectValueFromText"]) }
    public func ValueFromText(text: String) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ValueFromText", text as Any]) as! Float) }
    public func ValueFromTextDefault(text: String) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ValueFromTextDefault", text as Any]) as! Float) }
    public func ConnectDestroyQSpinBox(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQSpinBox", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQSpinBox() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQSpinBox"]) }
    public func DestroyQSpinBox() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQSpinBox"]) }
    public func DestroyQSpinBoxDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQSpinBoxDefault"]) }
}

public func NewQSpinBoxFromPointer(ptr: String) -> QSpinBox { let r = QSpinBox(); r.initFrom(p: ptr, n: "widgets.QSpinBox"); return r }
public func NewQSpinBox(parent: QWidget_ITF? = nil) -> QSpinBox { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQSpinBox", "", parent as Any]) as! QSpinBox }
public protocol QSplashScreen_ITF: QWidget_ITF {
    func QSplashScreen_PTR() -> QSplashScreen
}

public class QSplashScreen: QWidget, QSplashScreen_ITF {
    public func QSplashScreen_PTR() -> QSplashScreen { callLocalFunction(l: ["", Pointer(), ___className, "QSplashScreen_PTR"]) as! QSplashScreen }
    public func ConnectClearMessage(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectClearMessage", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectClearMessage() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectClearMessage"]) }
    public func ClearMessage() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearMessage"]) }
    public func ClearMessageDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearMessageDefault"]) }
    public func ConnectDrawContents(f: @escaping (_ painter: QPainter) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDrawContents", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainter) } as Any) }
    public func DisconnectDrawContents() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDrawContents"]) }
    public func DrawContents(painter: QPainter_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawContents", painter as Any]) }
    public func DrawContentsDefault(painter: QPainter_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawContentsDefault", painter as Any]) }
    public func Finish(mainWi: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Finish", mainWi as Any]) }
    public func Message() -> String { callLocalFunction(l: ["", Pointer(), ___className, "Message"]) as! String }
    public func ConnectMessageChanged(f: @escaping (_ message: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMessageChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectMessageChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMessageChanged"]) }
    public func MessageChanged(message: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MessageChanged", message as Any]) }
    public func Pixmap() -> QPixmap { callLocalFunction(l: ["", Pointer(), ___className, "Pixmap"]) as! QPixmap }
    override public func Repaint() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Repaint"]) }
    public func SetPixmap(pixmap: QPixmap_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPixmap", pixmap as Any]) }
    public func ConnectShowMessage(f: @escaping (_ message: String, _ alignment: Int, _ color: QColor) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectShowMessage", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String, Int(inp[1] as! Float), inp[2] as! QColor) } as Any) }
    public func DisconnectShowMessage() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectShowMessage"]) }
    public func ShowMessage(message: String, alignment: Int, color: QColor_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowMessage", message as Any, alignment as Any, color as Any]) }
    public func ShowMessageDefault(message: String, alignment: Int, color: QColor_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowMessageDefault", message as Any, alignment as Any, color as Any]) }
    public func ConnectDestroyQSplashScreen(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQSplashScreen", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQSplashScreen() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQSplashScreen"]) }
    public func DestroyQSplashScreen() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQSplashScreen"]) }
    public func DestroyQSplashScreenDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQSplashScreenDefault"]) }
}

public func NewQSplashScreenFromPointer(ptr: String) -> QSplashScreen { let r = QSplashScreen(); r.initFrom(p: ptr, n: "widgets.QSplashScreen"); return r }
public func NewQSplashScreen(pixmap: QPixmap_ITF? = nil, ff: Int) -> QSplashScreen { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQSplashScreen", "", pixmap as Any, ff as Any]) as! QSplashScreen }
public func NewQSplashScreen2(parent: QWidget_ITF? = nil, pixmap: QPixmap_ITF? = nil, ff: Int) -> QSplashScreen { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQSplashScreen2", "", parent as Any, pixmap as Any, ff as Any]) as! QSplashScreen }
public protocol QSplitter_ITF: QFrame_ITF {
    func QSplitter_PTR() -> QSplitter
}

public class QSplitter: QFrame, QSplitter_ITF {
    public func QSplitter_PTR() -> QSplitter { callLocalFunction(l: ["", Pointer(), ___className, "QSplitter_PTR"]) as! QSplitter }
    public func AddWidget(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddWidget", widget as Any]) }
    public func ChildrenCollapsible() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "ChildrenCollapsible"]) as! Bool }
    public func ClosestLegalPosition(pos: Int, index: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ClosestLegalPosition", pos as Any, index as Any]) as! Float) }
    public func Count() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Count"]) as! Float) }
    public func ConnectCreateHandle(f: @escaping () -> QSplitterHandle) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCreateHandle", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectCreateHandle() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCreateHandle"]) }
    public func CreateHandle() -> QSplitterHandle { callLocalFunction(l: ["", Pointer(), ___className, "CreateHandle"]) as! QSplitterHandle }
    public func CreateHandleDefault() -> QSplitterHandle { callLocalFunction(l: ["", Pointer(), ___className, "CreateHandleDefault"]) as! QSplitterHandle }
    public func GetRange(index: Int, mi: Int, max: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "GetRange", index as Any, mi as Any, max as Any]) }
    public func Handle(index: Int) -> QSplitterHandle { callLocalFunction(l: ["", Pointer(), ___className, "Handle", index as Any]) as! QSplitterHandle }
    public func HandleWidth() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "HandleWidth"]) as! Float) }
    public func IndexOf(widget: QWidget_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "IndexOf", widget as Any]) as! Float) }
    public func InsertWidget(index: Int, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertWidget", index as Any, widget as Any]) }
    public func IsCollapsible(index: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsCollapsible", index as Any]) as! Bool }
    public func MoveSplitter(pos: Int, index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MoveSplitter", pos as Any, index as Any]) }
    public func OpaqueResize() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "OpaqueResize"]) as! Bool }
    public func Orientation() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Orientation"]) as! Float) }
    public func Refresh() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Refresh"]) }
    public func ReplaceWidget(index: Int, widget: QWidget_ITF? = nil) -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "ReplaceWidget", index as Any, widget as Any]) as! QWidget }
    public func RestoreState(state: QByteArray_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "RestoreState", state as Any]) as! Bool }
    public func SaveState() -> QByteArray { callLocalFunction(l: ["", Pointer(), ___className, "SaveState"]) as! QByteArray }
    public func SetChildrenCollapsible(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetChildrenCollapsible", vbo as Any]) }
    public func SetCollapsible(index: Int, collapse: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCollapsible", index as Any, collapse as Any]) }
    public func SetHandleWidth(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetHandleWidth", vi as Any]) }
    public func SetOpaqueResize(opaque: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOpaqueResize", opaque as Any]) }
    public func SetOrientation(vqt: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOrientation", vqt as Any]) }
    public func SetRubberBand(pos: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRubberBand", pos as Any]) }
    public func SetSizes(list: [Int]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSizes", list as Any]) }
    public func SetStretchFactor(index: Int, stretch: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStretchFactor", index as Any, stretch as Any]) }
    public func Sizes() -> [Int] { callLocalFunction(l: ["", Pointer(), ___className, "Sizes"]) as! [Int] }
    public func ConnectSplitterMoved(f: @escaping (_ pos: Int, _ index: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSplitterMoved", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float)) } as Any) }
    public func DisconnectSplitterMoved() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSplitterMoved"]) }
    public func SplitterMoved(pos: Int, index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SplitterMoved", pos as Any, index as Any]) }
    public func Widget(index: Int) -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "Widget", index as Any]) as! QWidget }
    public func ConnectDestroyQSplitter(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQSplitter", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQSplitter() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQSplitter"]) }
    public func DestroyQSplitter() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQSplitter"]) }
    public func DestroyQSplitterDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQSplitterDefault"]) }
}

public func NewQSplitterFromPointer(ptr: String) -> QSplitter { let r = QSplitter(); r.initFrom(p: ptr, n: "widgets.QSplitter"); return r }
public func NewQSplitter(parent: QWidget_ITF? = nil) -> QSplitter { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQSplitter", "", parent as Any]) as! QSplitter }
public func NewQSplitter2(orientation: Int, parent: QWidget_ITF? = nil) -> QSplitter { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQSplitter2", "", orientation as Any, parent as Any]) as! QSplitter }
public protocol QSplitterHandle_ITF: QWidget_ITF {
    func QSplitterHandle_PTR() -> QSplitterHandle
}

public class QSplitterHandle: QWidget, QSplitterHandle_ITF {
    public func QSplitterHandle_PTR() -> QSplitterHandle { callLocalFunction(l: ["", Pointer(), ___className, "QSplitterHandle_PTR"]) as! QSplitterHandle }
    public func ClosestLegalPosition(pos: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ClosestLegalPosition", pos as Any]) as! Float) }
    public func MoveSplitter(pos: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MoveSplitter", pos as Any]) }
    public func OpaqueResize() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "OpaqueResize"]) as! Bool }
    public func Orientation() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Orientation"]) as! Float) }
    public func SetOrientation(orientation: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOrientation", orientation as Any]) }
    public func Splitter() -> QSplitter { callLocalFunction(l: ["", Pointer(), ___className, "Splitter"]) as! QSplitter }
    public func ConnectDestroyQSplitterHandle(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQSplitterHandle", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQSplitterHandle() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQSplitterHandle"]) }
    public func DestroyQSplitterHandle() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQSplitterHandle"]) }
    public func DestroyQSplitterHandleDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQSplitterHandleDefault"]) }
}

public func NewQSplitterHandleFromPointer(ptr: String) -> QSplitterHandle { let r = QSplitterHandle(); r.initFrom(p: ptr, n: "widgets.QSplitterHandle"); return r }
public func NewQSplitterHandle(orientation: Int, parent: QSplitter_ITF? = nil) -> QSplitterHandle { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQSplitterHandle", "", orientation as Any, parent as Any]) as! QSplitterHandle }
public protocol QStackedLayout_ITF: QLayout_ITF {
    func QStackedLayout_PTR() -> QStackedLayout
}

public class QStackedLayout: QLayout, QStackedLayout_ITF {
    public func QStackedLayout_PTR() -> QStackedLayout { callLocalFunction(l: ["", Pointer(), ___className, "QStackedLayout_PTR"]) as! QStackedLayout }
    override public func ConnectAddItem(f: @escaping (_ item: QLayoutItem) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectAddItem", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QLayoutItem) } as Any) }
    override public func DisconnectAddItem() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectAddItem"]) }
    override public func AddItem(item: QLayoutItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddItem", item as Any]) }
    public func AddItemDefault(item: QLayoutItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddItemDefault", item as Any]) }
    public func AddWidget_QStackedLayout(widget: QWidget_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "AddWidget", widget as Any]) as! Float) }
    override public func ConnectCount(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCount", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectCount() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCount"]) }
    override public func Count() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Count"]) as! Float) }
    public func CountDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CountDefault"]) as! Float) }
    public func ConnectCurrentChanged(f: @escaping (_ index: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCurrentChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectCurrentChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCurrentChanged"]) }
    public func CurrentChanged(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CurrentChanged", index as Any]) }
    public func CurrentIndex() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CurrentIndex"]) as! Float) }
    public func CurrentWidget() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "CurrentWidget"]) as! QWidget }
    public func InsertWidget(index: Int, widget: QWidget_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "InsertWidget", index as Any, widget as Any]) as! Float) }
    override public func ConnectItemAt(f: @escaping (_ index: Int) -> QLayoutItem) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectItemAt", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    override public func DisconnectItemAt() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectItemAt"]) }
    override public func ItemAt(index: Int) -> QLayoutItem { callLocalFunction(l: ["", Pointer(), ___className, "ItemAt", index as Any]) as! QLayoutItem }
    public func ItemAtDefault(index: Int) -> QLayoutItem { callLocalFunction(l: ["", Pointer(), ___className, "ItemAtDefault", index as Any]) as! QLayoutItem }
    public func ConnectSetCurrentIndex(f: @escaping (_ index: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetCurrentIndex", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSetCurrentIndex() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetCurrentIndex"]) }
    public func SetCurrentIndex(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentIndex", index as Any]) }
    public func SetCurrentIndexDefault(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentIndexDefault", index as Any]) }
    public func ConnectSetCurrentWidget(f: @escaping (_ widget: QWidget) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetCurrentWidget", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QWidget) } as Any) }
    public func DisconnectSetCurrentWidget() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetCurrentWidget"]) }
    public func SetCurrentWidget(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentWidget", widget as Any]) }
    public func SetCurrentWidgetDefault(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentWidgetDefault", widget as Any]) }
    public func SetStackingMode(stackingMode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStackingMode", stackingMode as Any]) }
    override public func ConnectSizeHint(f: @escaping () -> QSize) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSizeHint", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectSizeHint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSizeHint"]) }
    override public func SizeHint() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "SizeHint"]) as! QSize }
    override public func SizeHintDefault() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "SizeHintDefault"]) as! QSize }
    public func StackingMode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "StackingMode"]) as! Float) }
    override public func ConnectTakeAt(f: @escaping (_ index: Int) -> QLayoutItem) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTakeAt", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    override public func DisconnectTakeAt() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTakeAt"]) }
    override public func TakeAt(index: Int) -> QLayoutItem { callLocalFunction(l: ["", Pointer(), ___className, "TakeAt", index as Any]) as! QLayoutItem }
    public func TakeAtDefault(index: Int) -> QLayoutItem { callLocalFunction(l: ["", Pointer(), ___className, "TakeAtDefault", index as Any]) as! QLayoutItem }
    public func Widget_QObject(index: Int) -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "Widget", index as Any]) as! QWidget }
    public func ConnectWidgetRemoved(f: @escaping (_ index: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectWidgetRemoved", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectWidgetRemoved() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectWidgetRemoved"]) }
    public func WidgetRemoved(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "WidgetRemoved", index as Any]) }
    public func ConnectDestroyQStackedLayout(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQStackedLayout", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQStackedLayout() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQStackedLayout"]) }
    public func DestroyQStackedLayout() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStackedLayout"]) }
    public func DestroyQStackedLayoutDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStackedLayoutDefault"]) }
}

public func NewQStackedLayoutFromPointer(ptr: String) -> QStackedLayout { let r = QStackedLayout(); r.initFrom(p: ptr, n: "widgets.QStackedLayout"); return r }
public func NewQStackedLayout() -> QStackedLayout { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStackedLayout", ""]) as! QStackedLayout }
public func NewQStackedLayout2(parent: QWidget_ITF? = nil) -> QStackedLayout { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStackedLayout2", "", parent as Any]) as! QStackedLayout }
public func NewQStackedLayout3(parentLayout: QLayout_ITF? = nil) -> QStackedLayout { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStackedLayout3", "", parentLayout as Any]) as! QStackedLayout }
public protocol QStackedWidget_ITF: QFrame_ITF {
    func QStackedWidget_PTR() -> QStackedWidget
}

public class QStackedWidget: QFrame, QStackedWidget_ITF {
    public func QStackedWidget_PTR() -> QStackedWidget { callLocalFunction(l: ["", Pointer(), ___className, "QStackedWidget_PTR"]) as! QStackedWidget }
    public func AddWidget(widget: QWidget_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "AddWidget", widget as Any]) as! Float) }
    public func Count() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Count"]) as! Float) }
    public func ConnectCurrentChanged(f: @escaping (_ index: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCurrentChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectCurrentChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCurrentChanged"]) }
    public func CurrentChanged(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CurrentChanged", index as Any]) }
    public func CurrentIndex() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CurrentIndex"]) as! Float) }
    public func CurrentWidget() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "CurrentWidget"]) as! QWidget }
    public func IndexOf(widget: QWidget_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "IndexOf", widget as Any]) as! Float) }
    public func InsertWidget(index: Int, widget: QWidget_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "InsertWidget", index as Any, widget as Any]) as! Float) }
    public func RemoveWidget(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveWidget", widget as Any]) }
    public func ConnectSetCurrentIndex(f: @escaping (_ index: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetCurrentIndex", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSetCurrentIndex() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetCurrentIndex"]) }
    public func SetCurrentIndex(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentIndex", index as Any]) }
    public func SetCurrentIndexDefault(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentIndexDefault", index as Any]) }
    public func ConnectSetCurrentWidget(f: @escaping (_ widget: QWidget) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetCurrentWidget", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QWidget) } as Any) }
    public func DisconnectSetCurrentWidget() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetCurrentWidget"]) }
    public func SetCurrentWidget(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentWidget", widget as Any]) }
    public func SetCurrentWidgetDefault(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentWidgetDefault", widget as Any]) }
    public func Widget(index: Int) -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "Widget", index as Any]) as! QWidget }
    public func ConnectWidgetRemoved(f: @escaping (_ index: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectWidgetRemoved", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectWidgetRemoved() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectWidgetRemoved"]) }
    public func WidgetRemoved(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "WidgetRemoved", index as Any]) }
    public func ConnectDestroyQStackedWidget(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQStackedWidget", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQStackedWidget() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQStackedWidget"]) }
    public func DestroyQStackedWidget() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStackedWidget"]) }
    public func DestroyQStackedWidgetDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStackedWidgetDefault"]) }
}

public func NewQStackedWidgetFromPointer(ptr: String) -> QStackedWidget { let r = QStackedWidget(); r.initFrom(p: ptr, n: "widgets.QStackedWidget"); return r }
public func NewQStackedWidget(parent: QWidget_ITF? = nil) -> QStackedWidget { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStackedWidget", "", parent as Any]) as! QStackedWidget }
public protocol QStandardItemEditorCreator_ITF: QItemEditorCreatorBase_ITF {
    func QStandardItemEditorCreator_PTR() -> QStandardItemEditorCreator
}

public class QStandardItemEditorCreator: QItemEditorCreatorBase, QStandardItemEditorCreator_ITF {
    public func QStandardItemEditorCreator_PTR() -> QStandardItemEditorCreator { callLocalFunction(l: ["", Pointer(), ___className, "QStandardItemEditorCreator_PTR"]) as! QStandardItemEditorCreator }
    public func DestroyQStandardItemEditorCreator() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStandardItemEditorCreator"]) }
}

public protocol QStatusBar_ITF: QWidget_ITF {
    func QStatusBar_PTR() -> QStatusBar
}

public class QStatusBar: QWidget, QStatusBar_ITF {
    public func QStatusBar_PTR() -> QStatusBar { callLocalFunction(l: ["", Pointer(), ___className, "QStatusBar_PTR"]) as! QStatusBar }
    public func AddPermanentWidget(widget: QWidget_ITF? = nil, stretch: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddPermanentWidget", widget as Any, stretch as Any]) }
    public func AddWidget(widget: QWidget_ITF? = nil, stretch: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddWidget", widget as Any, stretch as Any]) }
    public func ConnectClearMessage(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectClearMessage", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectClearMessage() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectClearMessage"]) }
    public func ClearMessage() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearMessage"]) }
    public func ClearMessageDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearMessageDefault"]) }
    public func CurrentMessage() -> String { callLocalFunction(l: ["", Pointer(), ___className, "CurrentMessage"]) as! String }
    public func HideOrShow() { _ = callLocalFunction(l: ["", Pointer(), ___className, "HideOrShow"]) }
    public func InsertPermanentWidget(index: Int, widget: QWidget_ITF? = nil, stretch: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "InsertPermanentWidget", index as Any, widget as Any, stretch as Any]) as! Float) }
    public func InsertWidget(index: Int, widget: QWidget_ITF? = nil, stretch: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "InsertWidget", index as Any, widget as Any, stretch as Any]) as! Float) }
    public func IsSizeGripEnabled() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsSizeGripEnabled"]) as! Bool }
    public func ConnectMessageChanged(f: @escaping (_ message: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMessageChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectMessageChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMessageChanged"]) }
    public func MessageChanged(message: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MessageChanged", message as Any]) }
    public func Reformat() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Reformat"]) }
    public func RemoveWidget(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveWidget", widget as Any]) }
    public func SetSizeGripEnabled(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSizeGripEnabled", vbo as Any]) }
    public func ConnectShowMessage(f: @escaping (_ message: String, _ timeout: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectShowMessage", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String, Int(inp[1] as! Float)) } as Any) }
    public func DisconnectShowMessage() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectShowMessage"]) }
    public func ShowMessage(message: String, timeout: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowMessage", message as Any, timeout as Any]) }
    public func ShowMessageDefault(message: String, timeout: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowMessageDefault", message as Any, timeout as Any]) }
    public func ConnectDestroyQStatusBar(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQStatusBar", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQStatusBar() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQStatusBar"]) }
    public func DestroyQStatusBar() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStatusBar"]) }
    public func DestroyQStatusBarDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStatusBarDefault"]) }
}

public func NewQStatusBarFromPointer(ptr: String) -> QStatusBar { let r = QStatusBar(); r.initFrom(p: ptr, n: "widgets.QStatusBar"); return r }
public func NewQStatusBar(parent: QWidget_ITF? = nil) -> QStatusBar { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStatusBar", "", parent as Any]) as! QStatusBar }
public protocol QStyle_ITF: QObject_ITF {
    func QStyle_PTR() -> QStyle
}

public class QStyle: QObject, QStyle_ITF {
    public func QStyle_PTR() -> QStyle { callLocalFunction(l: ["", Pointer(), ___className, "QStyle_PTR"]) as! QStyle }
    public func AlignedRect(direction: Int, alignment: Int, size: QSize_ITF? = nil, rectangle: QRect_ITF? = nil) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "AlignedRect", direction as Any, alignment as Any, size as Any, rectangle as Any]) as! QRect }
    public func CombinedLayoutSpacing(controls1: Int, controls2: Int, orientation: Int, option: QStyleOption_ITF? = nil, widget: QWidget_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CombinedLayoutSpacing", controls1 as Any, controls2 as Any, orientation as Any, option as Any, widget as Any]) as! Float) }
    public func ConnectDrawComplexControl(f: @escaping (_ control: Int, _ option: QStyleOptionComplex, _ painter: QPainter, _ widget: QWidget) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDrawComplexControl", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! QStyleOptionComplex, inp[2] as! QPainter, inp[3] as! QWidget) } as Any) }
    public func DisconnectDrawComplexControl() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDrawComplexControl"]) }
    public func DrawComplexControl(control: Int, option: QStyleOptionComplex_ITF? = nil, painter: QPainter_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawComplexControl", control as Any, option as Any, painter as Any, widget as Any]) }
    public func ConnectDrawControl(f: @escaping (_ element: Int, _ option: QStyleOption, _ painter: QPainter, _ widget: QWidget) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDrawControl", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! QStyleOption, inp[2] as! QPainter, inp[3] as! QWidget) } as Any) }
    public func DisconnectDrawControl() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDrawControl"]) }
    public func DrawControl(element: Int, option: QStyleOption_ITF? = nil, painter: QPainter_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawControl", element as Any, option as Any, painter as Any, widget as Any]) }
    public func ConnectDrawItemPixmap(f: @escaping (_ painter: QPainter, _ rectangle: QRect, _ alignment: Int, _ pixmap: QPixmap) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDrawItemPixmap", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainter, inp[1] as! QRect, Int(inp[2] as! Float), inp[3] as! QPixmap) } as Any) }
    public func DisconnectDrawItemPixmap() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDrawItemPixmap"]) }
    public func DrawItemPixmap(painter: QPainter_ITF? = nil, rectangle: QRect_ITF? = nil, alignment: Int, pixmap: QPixmap_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawItemPixmap", painter as Any, rectangle as Any, alignment as Any, pixmap as Any]) }
    public func DrawItemPixmapDefault(painter: QPainter_ITF? = nil, rectangle: QRect_ITF? = nil, alignment: Int, pixmap: QPixmap_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawItemPixmapDefault", painter as Any, rectangle as Any, alignment as Any, pixmap as Any]) }
    public func ConnectDrawItemText(f: @escaping (_ painter: QPainter, _ rectangle: QRect, _ alignment: Int, _ palette: QPalette, _ enabled: Bool, _ text: String, _ textRole: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDrawItemText", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainter, inp[1] as! QRect, Int(inp[2] as! Float), inp[3] as! QPalette, inp[4] as! Bool, inp[5] as! String, Int(inp[6] as! Float)) } as Any) }
    public func DisconnectDrawItemText() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDrawItemText"]) }
    public func DrawItemText(painter: QPainter_ITF? = nil, rectangle: QRect_ITF? = nil, alignment: Int, palette: QPalette_ITF? = nil, enabled: Bool, text: String, textRole: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawItemText", painter as Any, rectangle as Any, alignment as Any, palette as Any, enabled as Any, text as Any, textRole as Any]) }
    public func DrawItemTextDefault(painter: QPainter_ITF? = nil, rectangle: QRect_ITF? = nil, alignment: Int, palette: QPalette_ITF? = nil, enabled: Bool, text: String, textRole: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawItemTextDefault", painter as Any, rectangle as Any, alignment as Any, palette as Any, enabled as Any, text as Any, textRole as Any]) }
    public func ConnectDrawPrimitive(f: @escaping (_ element: Int, _ option: QStyleOption, _ painter: QPainter, _ widget: QWidget) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDrawPrimitive", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! QStyleOption, inp[2] as! QPainter, inp[3] as! QWidget) } as Any) }
    public func DisconnectDrawPrimitive() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDrawPrimitive"]) }
    public func DrawPrimitive(element: Int, option: QStyleOption_ITF? = nil, painter: QPainter_ITF? = nil, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawPrimitive", element as Any, option as Any, painter as Any, widget as Any]) }
    public func ConnectGeneratedIconPixmap(f: @escaping (_ iconMode: Int, _ pixmap: QPixmap, _ option: QStyleOption) -> QPixmap) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectGeneratedIconPixmap", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! QPixmap, inp[2] as! QStyleOption) } as Any) }
    public func DisconnectGeneratedIconPixmap() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectGeneratedIconPixmap"]) }
    public func GeneratedIconPixmap(iconMode: Int, pixmap: QPixmap_ITF? = nil, option: QStyleOption_ITF? = nil) -> QPixmap { callLocalFunction(l: ["", Pointer(), ___className, "GeneratedIconPixmap", iconMode as Any, pixmap as Any, option as Any]) as! QPixmap }
    public func ConnectHitTestComplexControl(f: @escaping (_ control: Int, _ option: QStyleOptionComplex, _ position: QPoint, _ widget: QWidget) -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHitTestComplexControl", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! QStyleOptionComplex, inp[2] as! QPoint, inp[3] as! QWidget) } as Any) }
    public func DisconnectHitTestComplexControl() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHitTestComplexControl"]) }
    public func HitTestComplexControl(control: Int, option: QStyleOptionComplex_ITF? = nil, position: QPoint_ITF? = nil, widget: QWidget_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "HitTestComplexControl", control as Any, option as Any, position as Any, widget as Any]) as! Float) }
    public func ConnectItemPixmapRect(f: @escaping (_ rectangle: QRect, _ alignment: Int, _ pixmap: QPixmap) -> QRect) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectItemPixmapRect", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QRect, Int(inp[1] as! Float), inp[2] as! QPixmap) } as Any) }
    public func DisconnectItemPixmapRect() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectItemPixmapRect"]) }
    public func ItemPixmapRect(rectangle: QRect_ITF? = nil, alignment: Int, pixmap: QPixmap_ITF? = nil) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "ItemPixmapRect", rectangle as Any, alignment as Any, pixmap as Any]) as! QRect }
    public func ItemPixmapRectDefault(rectangle: QRect_ITF? = nil, alignment: Int, pixmap: QPixmap_ITF? = nil) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "ItemPixmapRectDefault", rectangle as Any, alignment as Any, pixmap as Any]) as! QRect }
    public func ConnectItemTextRect(f: @escaping (_ metrics: QFontMetrics, _ rectangle: QRect, _ alignment: Int, _ enabled: Bool, _ text: String) -> QRect) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectItemTextRect", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QFontMetrics, inp[1] as! QRect, Int(inp[2] as! Float), inp[3] as! Bool, inp[4] as! String) } as Any) }
    public func DisconnectItemTextRect() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectItemTextRect"]) }
    public func ItemTextRect(metrics: QFontMetrics_ITF? = nil, rectangle: QRect_ITF? = nil, alignment: Int, enabled: Bool, text: String) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "ItemTextRect", metrics as Any, rectangle as Any, alignment as Any, enabled as Any, text as Any]) as! QRect }
    public func ItemTextRectDefault(metrics: QFontMetrics_ITF? = nil, rectangle: QRect_ITF? = nil, alignment: Int, enabled: Bool, text: String) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "ItemTextRectDefault", metrics as Any, rectangle as Any, alignment as Any, enabled as Any, text as Any]) as! QRect }
    public func ConnectLayoutSpacing(f: @escaping (_ control1: Int, _ control2: Int, _ orientation: Int, _ option: QStyleOption, _ widget: QWidget) -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectLayoutSpacing", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float), Int(inp[2] as! Float), inp[3] as! QStyleOption, inp[4] as! QWidget) } as Any) }
    public func DisconnectLayoutSpacing() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectLayoutSpacing"]) }
    public func LayoutSpacing(control1: Int, control2: Int, orientation: Int, option: QStyleOption_ITF? = nil, widget: QWidget_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "LayoutSpacing", control1 as Any, control2 as Any, orientation as Any, option as Any, widget as Any]) as! Float) }
    public func ConnectPixelMetric(f: @escaping (_ metric: Int, _ option: QStyleOption, _ widget: QWidget) -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPixelMetric", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! QStyleOption, inp[2] as! QWidget) } as Any) }
    public func DisconnectPixelMetric() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPixelMetric"]) }
    public func PixelMetric(metric: Int, option: QStyleOption_ITF? = nil, widget: QWidget_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "PixelMetric", metric as Any, option as Any, widget as Any]) as! Float) }
    public func ConnectPolish(f: @escaping (_ widget: QWidget) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPolish", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QWidget) } as Any) }
    public func DisconnectPolish() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPolish"]) }
    public func Polish(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Polish", widget as Any]) }
    public func PolishDefault(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "PolishDefault", widget as Any]) }
    public func ConnectPolish2(f: @escaping (_ application: QApplication) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPolish2", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QApplication) } as Any) }
    public func DisconnectPolish2() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPolish2"]) }
    public func Polish2(application: QApplication_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Polish2", application as Any]) }
    public func Polish2Default(application: QApplication_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Polish2Default", application as Any]) }
    public func ConnectPolish3(f: @escaping (_ palette: QPalette) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPolish3", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPalette) } as Any) }
    public func DisconnectPolish3() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPolish3"]) }
    public func Polish3(palette: QPalette_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Polish3", palette as Any]) }
    public func Polish3Default(palette: QPalette_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Polish3Default", palette as Any]) }
    public func Proxy() -> QStyle { callLocalFunction(l: ["", Pointer(), ___className, "Proxy"]) as! QStyle }
    public func ConnectSizeFromContents(f: @escaping (_ ty: Int, _ option: QStyleOption, _ contentsSize: QSize, _ widget: QWidget) -> QSize) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSizeFromContents", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! QStyleOption, inp[2] as! QSize, inp[3] as! QWidget) } as Any) }
    public func DisconnectSizeFromContents() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSizeFromContents"]) }
    public func SizeFromContents(ty: Int, option: QStyleOption_ITF? = nil, contentsSize: QSize_ITF? = nil, widget: QWidget_ITF? = nil) -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "SizeFromContents", ty as Any, option as Any, contentsSize as Any, widget as Any]) as! QSize }
    public func SliderPositionFromValue(mi: Int, max: Int, logicalValue: Int, span: Int, upsideDown: Bool) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SliderPositionFromValue", mi as Any, max as Any, logicalValue as Any, span as Any, upsideDown as Any]) as! Float) }
    public func SliderValueFromPosition(mi: Int, max: Int, position: Int, span: Int, upsideDown: Bool) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SliderValueFromPosition", mi as Any, max as Any, position as Any, span as Any, upsideDown as Any]) as! Float) }
    public func ConnectStandardIcon(f: @escaping (_ standardIcon: Int, _ option: QStyleOption, _ widget: QWidget) -> QIcon) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectStandardIcon", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! QStyleOption, inp[2] as! QWidget) } as Any) }
    public func DisconnectStandardIcon() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectStandardIcon"]) }
    public func StandardIcon(standardIcon: Int, option: QStyleOption_ITF? = nil, widget: QWidget_ITF? = nil) -> QIcon { callLocalFunction(l: ["", Pointer(), ___className, "StandardIcon", standardIcon as Any, option as Any, widget as Any]) as! QIcon }
    public func ConnectStandardPalette(f: @escaping () -> QPalette) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectStandardPalette", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectStandardPalette() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectStandardPalette"]) }
    public func StandardPalette() -> QPalette { callLocalFunction(l: ["", Pointer(), ___className, "StandardPalette"]) as! QPalette }
    public func StandardPaletteDefault() -> QPalette { callLocalFunction(l: ["", Pointer(), ___className, "StandardPaletteDefault"]) as! QPalette }
    public func ConnectStyleHint(f: @escaping (_ hint: Int, _ option: QStyleOption, _ widget: QWidget, _ returnData: QStyleHintReturn) -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectStyleHint", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! QStyleOption, inp[2] as! QWidget, inp[3] as! QStyleHintReturn) } as Any) }
    public func DisconnectStyleHint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectStyleHint"]) }
    public func StyleHint(hint: Int, option: QStyleOption_ITF? = nil, widget: QWidget_ITF? = nil, returnData: QStyleHintReturn_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "StyleHint", hint as Any, option as Any, widget as Any, returnData as Any]) as! Float) }
    public func ConnectSubControlRect(f: @escaping (_ control: Int, _ option: QStyleOptionComplex, _ subControl: Int, _ widget: QWidget) -> QRect) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSubControlRect", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! QStyleOptionComplex, Int(inp[2] as! Float), inp[3] as! QWidget) } as Any) }
    public func DisconnectSubControlRect() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSubControlRect"]) }
    public func SubControlRect(control: Int, option: QStyleOptionComplex_ITF? = nil, subControl: Int, widget: QWidget_ITF? = nil) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "SubControlRect", control as Any, option as Any, subControl as Any, widget as Any]) as! QRect }
    public func ConnectSubElementRect(f: @escaping (_ element: Int, _ option: QStyleOption, _ widget: QWidget) -> QRect) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSubElementRect", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! QStyleOption, inp[2] as! QWidget) } as Any) }
    public func DisconnectSubElementRect() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSubElementRect"]) }
    public func SubElementRect(element: Int, option: QStyleOption_ITF? = nil, widget: QWidget_ITF? = nil) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "SubElementRect", element as Any, option as Any, widget as Any]) as! QRect }
    public func ConnectUnpolish(f: @escaping (_ widget: QWidget) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectUnpolish", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QWidget) } as Any) }
    public func DisconnectUnpolish() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectUnpolish"]) }
    public func Unpolish(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Unpolish", widget as Any]) }
    public func UnpolishDefault(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "UnpolishDefault", widget as Any]) }
    public func ConnectUnpolish2(f: @escaping (_ application: QApplication) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectUnpolish2", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QApplication) } as Any) }
    public func DisconnectUnpolish2() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectUnpolish2"]) }
    public func Unpolish2(application: QApplication_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Unpolish2", application as Any]) }
    public func Unpolish2Default(application: QApplication_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Unpolish2Default", application as Any]) }
    public func VisualAlignment(direction: Int, alignment: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "VisualAlignment", direction as Any, alignment as Any]) as! Float) }
    public func VisualPos(direction: Int, boundingRectangle: QRect_ITF? = nil, logicalPosition: QPoint_ITF? = nil) -> QPoint { callLocalFunction(l: ["", Pointer(), ___className, "VisualPos", direction as Any, boundingRectangle as Any, logicalPosition as Any]) as! QPoint }
    public func VisualRect(direction: Int, boundingRectangle: QRect_ITF? = nil, logicalRectangle: QRect_ITF? = nil) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "VisualRect", direction as Any, boundingRectangle as Any, logicalRectangle as Any]) as! QRect }
    public func ConnectDestroyQStyle(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQStyle", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQStyle() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQStyle"]) }
    public func DestroyQStyle() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStyle"]) }
    public func DestroyQStyleDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStyleDefault"]) }
    public func ConnectStandardPixmap(f: @escaping (_ standardIcon: Int, _ option: QStyleOption, _ widget: QWidget) -> QPixmap) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectStandardPixmap", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! QStyleOption, inp[2] as! QWidget) } as Any) }
    public func DisconnectStandardPixmap() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectStandardPixmap"]) }
    public func StandardPixmap(standardIcon: Int, option: QStyleOption_ITF? = nil, widget: QWidget_ITF? = nil) -> QPixmap { callLocalFunction(l: ["", Pointer(), ___className, "StandardPixmap", standardIcon as Any, option as Any, widget as Any]) as! QPixmap }
    override public func ChildEventDefault(event: QChildEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ChildEventDefault", event as Any]) }
    override public func ConnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ConnectNotifyDefault", sign as Any]) }
    override public func CustomEventDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CustomEventDefault", event as Any]) }
    override public func DeleteLaterDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DeleteLaterDefault"]) }
    override public func DisconnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DisconnectNotifyDefault", sign as Any]) }
    override public func EventDefault(e: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventDefault", e as Any]) as! Bool }
    override public func EventFilterDefault(watched: QObject_ITF? = nil, event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventFilterDefault", watched as Any, event as Any]) as! Bool }
    override public func MetaObjectDefault() -> QMetaObject { callLocalFunction(l: ["", Pointer(), ___className, "MetaObjectDefault"]) as! QMetaObject }
    override public func TimerEventDefault(event: QTimerEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TimerEventDefault", event as Any]) }
}

public func NewQStyleFromPointer(ptr: String) -> QStyle { let r = QStyle(); r.initFrom(p: ptr, n: "widgets.QStyle"); return r }
public func NewQStyle2() -> QStyle { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyle2", ""]) as! QStyle }
public func QStyle_AlignedRect(direction: Int, alignment: Int, size: QSize_ITF? = nil, rectangle: QRect_ITF? = nil) -> QRect { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QStyle_AlignedRect", "", direction as Any, alignment as Any, size as Any, rectangle as Any]) as! QRect }
public func QStyle_SliderPositionFromValue(mi: Int, max: Int, logicalValue: Int, span: Int, upsideDown: Bool) -> Int { Widgets.initModule(); return Int(callLocalFunction(l: ["", "", "widgets.QStyle_SliderPositionFromValue", "", mi as Any, max as Any, logicalValue as Any, span as Any, upsideDown as Any]) as! Float) }
public func QStyle_SliderValueFromPosition(mi: Int, max: Int, position: Int, span: Int, upsideDown: Bool) -> Int { Widgets.initModule(); return Int(callLocalFunction(l: ["", "", "widgets.QStyle_SliderValueFromPosition", "", mi as Any, max as Any, position as Any, span as Any, upsideDown as Any]) as! Float) }
public func QStyle_VisualAlignment(direction: Int, alignment: Int) -> Int { Widgets.initModule(); return Int(callLocalFunction(l: ["", "", "widgets.QStyle_VisualAlignment", "", direction as Any, alignment as Any]) as! Float) }
public func QStyle_VisualPos(direction: Int, boundingRectangle: QRect_ITF? = nil, logicalPosition: QPoint_ITF? = nil) -> QPoint { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QStyle_VisualPos", "", direction as Any, boundingRectangle as Any, logicalPosition as Any]) as! QPoint }
public func QStyle_VisualRect(direction: Int, boundingRectangle: QRect_ITF? = nil, logicalRectangle: QRect_ITF? = nil) -> QRect { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QStyle_VisualRect", "", direction as Any, boundingRectangle as Any, logicalRectangle as Any]) as! QRect }
public protocol QStyleFactory_ITF {
    func QStyleFactory_PTR() -> QStyleFactory
}

public class QStyleFactory: Internal, QStyleFactory_ITF {
    public func QStyleFactory_PTR() -> QStyleFactory { callLocalFunction(l: ["", Pointer(), ___className, "QStyleFactory_PTR"]) as! QStyleFactory }
    public func DestroyQStyleFactory() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStyleFactory"]) }
    public func Create(key: String) -> QStyle { callLocalFunction(l: ["", Pointer(), ___className, "Create", key as Any]) as! QStyle }
    public func Keys() -> [String] { callLocalFunction(l: ["", Pointer(), ___className, "Keys"]) as! [String] }
}

public func NewQStyleFactoryFromPointer(ptr: String) -> QStyleFactory { let r = QStyleFactory(); r.initFrom(p: ptr, n: "widgets.QStyleFactory"); return r }
public func QStyleFactory_Create(key: String) -> QStyle { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QStyleFactory_Create", "", key as Any]) as! QStyle }
public func QStyleFactory_Keys() -> [String] { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QStyleFactory_Keys", ""]) as! [String] }
public protocol QStyleHintReturn_ITF {
    func QStyleHintReturn_PTR() -> QStyleHintReturn
}

public class QStyleHintReturn: Internal, QStyleHintReturn_ITF {
    public func QStyleHintReturn_PTR() -> QStyleHintReturn { callLocalFunction(l: ["", Pointer(), ___className, "QStyleHintReturn_PTR"]) as! QStyleHintReturn }
    public func DestroyQStyleHintReturn() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStyleHintReturn"]) }
    public func Version() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Version"]) as! Float) }
    public func SetVersion(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetVersion", vi as Any]) }
    public func Type() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Type"]) as! Float) }
    public func SetType(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetType", vi as Any]) }
}

public func NewQStyleHintReturnFromPointer(ptr: String) -> QStyleHintReturn { let r = QStyleHintReturn(); r.initFrom(p: ptr, n: "widgets.QStyleHintReturn"); return r }
public func NewQStyleHintReturn(version: Int, ty: Int) -> QStyleHintReturn { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleHintReturn", "", version as Any, ty as Any]) as! QStyleHintReturn }
public protocol QStyleHintReturnMask_ITF: QStyleHintReturn_ITF {
    func QStyleHintReturnMask_PTR() -> QStyleHintReturnMask
}

public class QStyleHintReturnMask: QStyleHintReturn, QStyleHintReturnMask_ITF {
    public func QStyleHintReturnMask_PTR() -> QStyleHintReturnMask { callLocalFunction(l: ["", Pointer(), ___className, "QStyleHintReturnMask_PTR"]) as! QStyleHintReturnMask }
    public func DestroyQStyleHintReturnMask() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStyleHintReturnMask"]) }
    public func Region() -> QRegion { callLocalFunction(l: ["", Pointer(), ___className, "Region"]) as! QRegion }
    public func SetRegion(vqr: QRegion_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRegion", vqr as Any]) }
}

public func NewQStyleHintReturnMaskFromPointer(ptr: String) -> QStyleHintReturnMask { let r = QStyleHintReturnMask(); r.initFrom(p: ptr, n: "widgets.QStyleHintReturnMask"); return r }
public func NewQStyleHintReturnMask() -> QStyleHintReturnMask { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleHintReturnMask", ""]) as! QStyleHintReturnMask }
public protocol QStyleHintReturnVariant_ITF: QStyleHintReturn_ITF {
    func QStyleHintReturnVariant_PTR() -> QStyleHintReturnVariant
}

public class QStyleHintReturnVariant: QStyleHintReturn, QStyleHintReturnVariant_ITF {
    public func QStyleHintReturnVariant_PTR() -> QStyleHintReturnVariant { callLocalFunction(l: ["", Pointer(), ___className, "QStyleHintReturnVariant_PTR"]) as! QStyleHintReturnVariant }
    public func DestroyQStyleHintReturnVariant() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStyleHintReturnVariant"]) }
    public func Variant() -> QVariant { callLocalFunction(l: ["", Pointer(), ___className, "Variant"]) as! QVariant }
    public func SetVariant(vqv: QVariant_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetVariant", vqv as Any]) }
}

public func NewQStyleHintReturnVariantFromPointer(ptr: String) -> QStyleHintReturnVariant { let r = QStyleHintReturnVariant(); r.initFrom(p: ptr, n: "widgets.QStyleHintReturnVariant"); return r }
public func NewQStyleHintReturnVariant() -> QStyleHintReturnVariant { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleHintReturnVariant", ""]) as! QStyleHintReturnVariant }
public protocol QStyleOption_ITF {
    func QStyleOption_PTR() -> QStyleOption
}

public class QStyleOption: Internal, QStyleOption_ITF {
    public func QStyleOption_PTR() -> QStyleOption { callLocalFunction(l: ["", Pointer(), ___className, "QStyleOption_PTR"]) as! QStyleOption }
    public func InitFrom(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InitFrom", widget as Any]) }
    public func DestroyQStyleOption() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStyleOption"]) }
    public func Version() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Version"]) as! Float) }
    public func SetVersion(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetVersion", vi as Any]) }
    public func Type() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Type"]) as! Float) }
    public func SetType(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetType", vi as Any]) }
    public func State() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "State"]) as! Float) }
    public func SetState(vqs: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetState", vqs as Any]) }
    public func Direction() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Direction"]) as! Float) }
    public func SetDirection(vqt: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDirection", vqt as Any]) }
    public func Rect() -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "Rect"]) as! QRect }
    public func SetRect(vqr: QRect_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRect", vqr as Any]) }
    public func FontMetrics() -> QFontMetrics { callLocalFunction(l: ["", Pointer(), ___className, "FontMetrics"]) as! QFontMetrics }
    public func SetFontMetrics(vqf: QFontMetrics_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFontMetrics", vqf as Any]) }
    public func Palette() -> QPalette { callLocalFunction(l: ["", Pointer(), ___className, "Palette"]) as! QPalette }
    public func SetPalette(vqp: QPalette_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPalette", vqp as Any]) }
    public func StyleObject() -> QObject { callLocalFunction(l: ["", Pointer(), ___className, "StyleObject"]) as! QObject }
    public func SetStyleObject(vqo: QObject_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStyleObject", vqo as Any]) }
}

public func NewQStyleOptionFromPointer(ptr: String) -> QStyleOption { let r = QStyleOption(); r.initFrom(p: ptr, n: "widgets.QStyleOption"); return r }
public func NewQStyleOption(version: Int, ty: Int) -> QStyleOption { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOption", "", version as Any, ty as Any]) as! QStyleOption }
public func NewQStyleOption2(other: QStyleOption_ITF? = nil) -> QStyleOption { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOption2", "", other as Any]) as! QStyleOption }
public protocol QStyleOptionButton_ITF: QStyleOption_ITF {
    func QStyleOptionButton_PTR() -> QStyleOptionButton
}

public class QStyleOptionButton: QStyleOption, QStyleOptionButton_ITF {
    public func QStyleOptionButton_PTR() -> QStyleOptionButton { callLocalFunction(l: ["", Pointer(), ___className, "QStyleOptionButton_PTR"]) as! QStyleOptionButton }
    public func DestroyQStyleOptionButton() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStyleOptionButton"]) }
    public func Features() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Features"]) as! Float) }
    public func SetFeatures(vqs: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFeatures", vqs as Any]) }
    public func Text() -> String { callLocalFunction(l: ["", Pointer(), ___className, "Text"]) as! String }
    public func SetText(vqs: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetText", vqs as Any]) }
    public func Icon() -> QIcon { callLocalFunction(l: ["", Pointer(), ___className, "Icon"]) as! QIcon }
    public func SetIcon(vqi: QIcon_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIcon", vqi as Any]) }
    public func IconSize() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "IconSize"]) as! QSize }
    public func SetIconSize(vqs: QSize_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIconSize", vqs as Any]) }
}

public func NewQStyleOptionButtonFromPointer(ptr: String) -> QStyleOptionButton { let r = QStyleOptionButton(); r.initFrom(p: ptr, n: "widgets.QStyleOptionButton"); return r }
public func NewQStyleOptionButton() -> QStyleOptionButton { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionButton", ""]) as! QStyleOptionButton }
public func NewQStyleOptionButton2(other: QStyleOptionButton_ITF? = nil) -> QStyleOptionButton { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionButton2", "", other as Any]) as! QStyleOptionButton }
public protocol QStyleOptionComboBox_ITF: QStyleOptionComplex_ITF {
    func QStyleOptionComboBox_PTR() -> QStyleOptionComboBox
}

public class QStyleOptionComboBox: QStyleOptionComplex, QStyleOptionComboBox_ITF {
    public func QStyleOptionComboBox_PTR() -> QStyleOptionComboBox { callLocalFunction(l: ["", Pointer(), ___className, "QStyleOptionComboBox_PTR"]) as! QStyleOptionComboBox }
    public func DestroyQStyleOptionComboBox() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStyleOptionComboBox"]) }
    public func Editable() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "Editable"]) as! Bool }
    public func SetEditable(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetEditable", vbo as Any]) }
    public func PopupRect() -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "PopupRect"]) as! QRect }
    public func SetPopupRect(vqr: QRect_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPopupRect", vqr as Any]) }
    public func Frame() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "Frame"]) as! Bool }
    public func SetFrame(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFrame", vbo as Any]) }
    public func CurrentText() -> String { callLocalFunction(l: ["", Pointer(), ___className, "CurrentText"]) as! String }
    public func SetCurrentText(vqs: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentText", vqs as Any]) }
    public func CurrentIcon() -> QIcon { callLocalFunction(l: ["", Pointer(), ___className, "CurrentIcon"]) as! QIcon }
    public func SetCurrentIcon(vqi: QIcon_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentIcon", vqi as Any]) }
    public func IconSize() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "IconSize"]) as! QSize }
    public func SetIconSize(vqs: QSize_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIconSize", vqs as Any]) }
}

public func NewQStyleOptionComboBoxFromPointer(ptr: String) -> QStyleOptionComboBox { let r = QStyleOptionComboBox(); r.initFrom(p: ptr, n: "widgets.QStyleOptionComboBox"); return r }
public func NewQStyleOptionComboBox() -> QStyleOptionComboBox { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionComboBox", ""]) as! QStyleOptionComboBox }
public func NewQStyleOptionComboBox2(other: QStyleOptionComboBox_ITF? = nil) -> QStyleOptionComboBox { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionComboBox2", "", other as Any]) as! QStyleOptionComboBox }
public protocol QStyleOptionComplex_ITF: QStyleOption_ITF {
    func QStyleOptionComplex_PTR() -> QStyleOptionComplex
}

public class QStyleOptionComplex: QStyleOption, QStyleOptionComplex_ITF {
    public func QStyleOptionComplex_PTR() -> QStyleOptionComplex { callLocalFunction(l: ["", Pointer(), ___className, "QStyleOptionComplex_PTR"]) as! QStyleOptionComplex }
    public func DestroyQStyleOptionComplex() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStyleOptionComplex"]) }
    public func SubControls() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SubControls"]) as! Float) }
    public func SetSubControls(vqs: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSubControls", vqs as Any]) }
    public func ActiveSubControls() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ActiveSubControls"]) as! Float) }
    public func SetActiveSubControls(vqs: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetActiveSubControls", vqs as Any]) }
}

public func NewQStyleOptionComplexFromPointer(ptr: String) -> QStyleOptionComplex { let r = QStyleOptionComplex(); r.initFrom(p: ptr, n: "widgets.QStyleOptionComplex"); return r }
public func NewQStyleOptionComplex(version: Int, ty: Int) -> QStyleOptionComplex { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionComplex", "", version as Any, ty as Any]) as! QStyleOptionComplex }
public func NewQStyleOptionComplex2(other: QStyleOptionComplex_ITF? = nil) -> QStyleOptionComplex { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionComplex2", "", other as Any]) as! QStyleOptionComplex }
public protocol QStyleOptionDockWidget_ITF: QStyleOption_ITF {
    func QStyleOptionDockWidget_PTR() -> QStyleOptionDockWidget
}

public class QStyleOptionDockWidget: QStyleOption, QStyleOptionDockWidget_ITF {
    public func QStyleOptionDockWidget_PTR() -> QStyleOptionDockWidget { callLocalFunction(l: ["", Pointer(), ___className, "QStyleOptionDockWidget_PTR"]) as! QStyleOptionDockWidget }
    public func DestroyQStyleOptionDockWidget() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStyleOptionDockWidget"]) }
    public func Title() -> String { callLocalFunction(l: ["", Pointer(), ___className, "Title"]) as! String }
    public func SetTitle(vqs: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTitle", vqs as Any]) }
    public func Closable() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "Closable"]) as! Bool }
    public func SetClosable(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetClosable", vbo as Any]) }
    public func Movable() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "Movable"]) as! Bool }
    public func SetMovable(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMovable", vbo as Any]) }
    public func Floatable() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "Floatable"]) as! Bool }
    public func SetFloatable(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFloatable", vbo as Any]) }
}

public func NewQStyleOptionDockWidgetFromPointer(ptr: String) -> QStyleOptionDockWidget { let r = QStyleOptionDockWidget(); r.initFrom(p: ptr, n: "widgets.QStyleOptionDockWidget"); return r }
public func NewQStyleOptionDockWidget() -> QStyleOptionDockWidget { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionDockWidget", ""]) as! QStyleOptionDockWidget }
public func NewQStyleOptionDockWidget2(other: QStyleOptionDockWidget_ITF? = nil) -> QStyleOptionDockWidget { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionDockWidget2", "", other as Any]) as! QStyleOptionDockWidget }
public protocol QStyleOptionFocusRect_ITF: QStyleOption_ITF {
    func QStyleOptionFocusRect_PTR() -> QStyleOptionFocusRect
}

public class QStyleOptionFocusRect: QStyleOption, QStyleOptionFocusRect_ITF {
    public func QStyleOptionFocusRect_PTR() -> QStyleOptionFocusRect { callLocalFunction(l: ["", Pointer(), ___className, "QStyleOptionFocusRect_PTR"]) as! QStyleOptionFocusRect }
    public func DestroyQStyleOptionFocusRect() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStyleOptionFocusRect"]) }
    public func BackgroundColor() -> QColor { callLocalFunction(l: ["", Pointer(), ___className, "BackgroundColor"]) as! QColor }
    public func SetBackgroundColor(vqc: QColor_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetBackgroundColor", vqc as Any]) }
}

public func NewQStyleOptionFocusRectFromPointer(ptr: String) -> QStyleOptionFocusRect { let r = QStyleOptionFocusRect(); r.initFrom(p: ptr, n: "widgets.QStyleOptionFocusRect"); return r }
public func NewQStyleOptionFocusRect() -> QStyleOptionFocusRect { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionFocusRect", ""]) as! QStyleOptionFocusRect }
public func NewQStyleOptionFocusRect2(other: QStyleOptionFocusRect_ITF? = nil) -> QStyleOptionFocusRect { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionFocusRect2", "", other as Any]) as! QStyleOptionFocusRect }
public protocol QStyleOptionFrame_ITF: QStyleOption_ITF {
    func QStyleOptionFrame_PTR() -> QStyleOptionFrame
}

public class QStyleOptionFrame: QStyleOption, QStyleOptionFrame_ITF {
    public func QStyleOptionFrame_PTR() -> QStyleOptionFrame { callLocalFunction(l: ["", Pointer(), ___className, "QStyleOptionFrame_PTR"]) as! QStyleOptionFrame }
    public func DestroyQStyleOptionFrame() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStyleOptionFrame"]) }
    public func LineWidth() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "LineWidth"]) as! Float) }
    public func SetLineWidth(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetLineWidth", vi as Any]) }
    public func MidLineWidth() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "MidLineWidth"]) as! Float) }
    public func SetMidLineWidth(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMidLineWidth", vi as Any]) }
    public func Features() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Features"]) as! Float) }
    public func SetFeatures(vqs: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFeatures", vqs as Any]) }
    public func FrameShape() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "FrameShape"]) as! Float) }
    public func SetFrameShape(vqf: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFrameShape", vqf as Any]) }
}

public func NewQStyleOptionFrameFromPointer(ptr: String) -> QStyleOptionFrame { let r = QStyleOptionFrame(); r.initFrom(p: ptr, n: "widgets.QStyleOptionFrame"); return r }
public func NewQStyleOptionFrame() -> QStyleOptionFrame { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionFrame", ""]) as! QStyleOptionFrame }
public func NewQStyleOptionFrame2(other: QStyleOptionFrame_ITF? = nil) -> QStyleOptionFrame { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionFrame2", "", other as Any]) as! QStyleOptionFrame }
public protocol QStyleOptionGraphicsItem_ITF: QStyleOption_ITF {
    func QStyleOptionGraphicsItem_PTR() -> QStyleOptionGraphicsItem
}

public class QStyleOptionGraphicsItem: QStyleOption, QStyleOptionGraphicsItem_ITF {
    public func QStyleOptionGraphicsItem_PTR() -> QStyleOptionGraphicsItem { callLocalFunction(l: ["", Pointer(), ___className, "QStyleOptionGraphicsItem_PTR"]) as! QStyleOptionGraphicsItem }
    public func DestroyQStyleOptionGraphicsItem() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStyleOptionGraphicsItem"]) }
    public func LevelOfDetailFromTransform(worldTransform: QTransform_ITF? = nil) -> Float { callLocalFunction(l: ["", Pointer(), ___className, "LevelOfDetailFromTransform", worldTransform as Any]) as! Float }
    public func ExposedRect() -> QRectF { callLocalFunction(l: ["", Pointer(), ___className, "ExposedRect"]) as! QRectF }
    public func SetExposedRect(vqr: QRectF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetExposedRect", vqr as Any]) }
}

public func NewQStyleOptionGraphicsItemFromPointer(ptr: String) -> QStyleOptionGraphicsItem { let r = QStyleOptionGraphicsItem(); r.initFrom(p: ptr, n: "widgets.QStyleOptionGraphicsItem"); return r }
public func NewQStyleOptionGraphicsItem() -> QStyleOptionGraphicsItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionGraphicsItem", ""]) as! QStyleOptionGraphicsItem }
public func NewQStyleOptionGraphicsItem2(other: QStyleOptionGraphicsItem_ITF? = nil) -> QStyleOptionGraphicsItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionGraphicsItem2", "", other as Any]) as! QStyleOptionGraphicsItem }
public func QStyleOptionGraphicsItem_LevelOfDetailFromTransform(worldTransform: QTransform_ITF? = nil) -> Float { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QStyleOptionGraphicsItem_LevelOfDetailFromTransform", "", worldTransform as Any]) as! Float }
public protocol QStyleOptionGroupBox_ITF: QStyleOptionComplex_ITF {
    func QStyleOptionGroupBox_PTR() -> QStyleOptionGroupBox
}

public class QStyleOptionGroupBox: QStyleOptionComplex, QStyleOptionGroupBox_ITF {
    public func QStyleOptionGroupBox_PTR() -> QStyleOptionGroupBox { callLocalFunction(l: ["", Pointer(), ___className, "QStyleOptionGroupBox_PTR"]) as! QStyleOptionGroupBox }
    public func DestroyQStyleOptionGroupBox() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStyleOptionGroupBox"]) }
    public func Features() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Features"]) as! Float) }
    public func SetFeatures(vqs: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFeatures", vqs as Any]) }
    public func Text() -> String { callLocalFunction(l: ["", Pointer(), ___className, "Text"]) as! String }
    public func SetText(vqs: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetText", vqs as Any]) }
    public func TextAlignment() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TextAlignment"]) as! Float) }
    public func SetTextAlignment(vqt: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTextAlignment", vqt as Any]) }
    public func TextColor() -> QColor { callLocalFunction(l: ["", Pointer(), ___className, "TextColor"]) as! QColor }
    public func SetTextColor(vqc: QColor_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTextColor", vqc as Any]) }
    public func LineWidth() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "LineWidth"]) as! Float) }
    public func SetLineWidth(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetLineWidth", vi as Any]) }
    public func MidLineWidth() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "MidLineWidth"]) as! Float) }
    public func SetMidLineWidth(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMidLineWidth", vi as Any]) }
}

public func NewQStyleOptionGroupBoxFromPointer(ptr: String) -> QStyleOptionGroupBox { let r = QStyleOptionGroupBox(); r.initFrom(p: ptr, n: "widgets.QStyleOptionGroupBox"); return r }
public func NewQStyleOptionGroupBox() -> QStyleOptionGroupBox { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionGroupBox", ""]) as! QStyleOptionGroupBox }
public func NewQStyleOptionGroupBox2(other: QStyleOptionGroupBox_ITF? = nil) -> QStyleOptionGroupBox { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionGroupBox2", "", other as Any]) as! QStyleOptionGroupBox }
public protocol QStyleOptionHeader_ITF: QStyleOption_ITF {
    func QStyleOptionHeader_PTR() -> QStyleOptionHeader
}

public class QStyleOptionHeader: QStyleOption, QStyleOptionHeader_ITF {
    public func QStyleOptionHeader_PTR() -> QStyleOptionHeader { callLocalFunction(l: ["", Pointer(), ___className, "QStyleOptionHeader_PTR"]) as! QStyleOptionHeader }
    public func DestroyQStyleOptionHeader() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStyleOptionHeader"]) }
    public func Section() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Section"]) as! Float) }
    public func SetSection(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSection", vi as Any]) }
    public func Text() -> String { callLocalFunction(l: ["", Pointer(), ___className, "Text"]) as! String }
    public func SetText(vqs: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetText", vqs as Any]) }
    public func TextAlignment() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TextAlignment"]) as! Float) }
    public func SetTextAlignment(vqt: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTextAlignment", vqt as Any]) }
    public func Icon() -> QIcon { callLocalFunction(l: ["", Pointer(), ___className, "Icon"]) as! QIcon }
    public func SetIcon(vqi: QIcon_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIcon", vqi as Any]) }
    public func IconAlignment() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "IconAlignment"]) as! Float) }
    public func SetIconAlignment(vqt: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIconAlignment", vqt as Any]) }
    public func Position() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Position"]) as! Float) }
    public func SetPosition(vqs: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPosition", vqs as Any]) }
    public func SelectedPosition() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SelectedPosition"]) as! Float) }
    public func SetSelectedPosition(vqs: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSelectedPosition", vqs as Any]) }
    public func SortIndicator() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SortIndicator"]) as! Float) }
    public func SetSortIndicator(vqs: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSortIndicator", vqs as Any]) }
    public func Orientation() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Orientation"]) as! Float) }
    public func SetOrientation(vqt: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOrientation", vqt as Any]) }
}

public func NewQStyleOptionHeaderFromPointer(ptr: String) -> QStyleOptionHeader { let r = QStyleOptionHeader(); r.initFrom(p: ptr, n: "widgets.QStyleOptionHeader"); return r }
public func NewQStyleOptionHeader() -> QStyleOptionHeader { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionHeader", ""]) as! QStyleOptionHeader }
public func NewQStyleOptionHeader2(other: QStyleOptionHeader_ITF? = nil) -> QStyleOptionHeader { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionHeader2", "", other as Any]) as! QStyleOptionHeader }
public protocol QStyleOptionMenuItem_ITF: QStyleOption_ITF {
    func QStyleOptionMenuItem_PTR() -> QStyleOptionMenuItem
}

public class QStyleOptionMenuItem: QStyleOption, QStyleOptionMenuItem_ITF {
    public func QStyleOptionMenuItem_PTR() -> QStyleOptionMenuItem { callLocalFunction(l: ["", Pointer(), ___className, "QStyleOptionMenuItem_PTR"]) as! QStyleOptionMenuItem }
    public func DestroyQStyleOptionMenuItem() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStyleOptionMenuItem"]) }
    public func MenuItemType() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "MenuItemType"]) as! Float) }
    public func SetMenuItemType(vqs: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMenuItemType", vqs as Any]) }
    public func CheckType() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CheckType"]) as! Float) }
    public func SetCheckType(vqs: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCheckType", vqs as Any]) }
    public func Checked() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "Checked"]) as! Bool }
    public func SetChecked(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetChecked", vbo as Any]) }
    public func MenuHasCheckableItems() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "MenuHasCheckableItems"]) as! Bool }
    public func SetMenuHasCheckableItems(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMenuHasCheckableItems", vbo as Any]) }
    public func MenuRect() -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "MenuRect"]) as! QRect }
    public func SetMenuRect(vqr: QRect_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMenuRect", vqr as Any]) }
    public func Text() -> String { callLocalFunction(l: ["", Pointer(), ___className, "Text"]) as! String }
    public func SetText(vqs: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetText", vqs as Any]) }
    public func Icon() -> QIcon { callLocalFunction(l: ["", Pointer(), ___className, "Icon"]) as! QIcon }
    public func SetIcon(vqi: QIcon_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIcon", vqi as Any]) }
    public func MaxIconWidth() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "MaxIconWidth"]) as! Float) }
    public func SetMaxIconWidth(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMaxIconWidth", vi as Any]) }
    public func TabWidth() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TabWidth"]) as! Float) }
    public func SetTabWidth(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabWidth", vi as Any]) }
    public func Font() -> QFont { callLocalFunction(l: ["", Pointer(), ___className, "Font"]) as! QFont }
    public func SetFont(vqf: QFont_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFont", vqf as Any]) }
}

public func NewQStyleOptionMenuItemFromPointer(ptr: String) -> QStyleOptionMenuItem { let r = QStyleOptionMenuItem(); r.initFrom(p: ptr, n: "widgets.QStyleOptionMenuItem"); return r }
public func NewQStyleOptionMenuItem() -> QStyleOptionMenuItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionMenuItem", ""]) as! QStyleOptionMenuItem }
public func NewQStyleOptionMenuItem2(other: QStyleOptionMenuItem_ITF? = nil) -> QStyleOptionMenuItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionMenuItem2", "", other as Any]) as! QStyleOptionMenuItem }
public protocol QStyleOptionProgressBar_ITF: QStyleOption_ITF {
    func QStyleOptionProgressBar_PTR() -> QStyleOptionProgressBar
}

public class QStyleOptionProgressBar: QStyleOption, QStyleOptionProgressBar_ITF {
    public func QStyleOptionProgressBar_PTR() -> QStyleOptionProgressBar { callLocalFunction(l: ["", Pointer(), ___className, "QStyleOptionProgressBar_PTR"]) as! QStyleOptionProgressBar }
    public func DestroyQStyleOptionProgressBar() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStyleOptionProgressBar"]) }
    public func Minimum() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Minimum"]) as! Float) }
    public func SetMinimum(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMinimum", vi as Any]) }
    public func Maximum() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Maximum"]) as! Float) }
    public func SetMaximum(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMaximum", vi as Any]) }
    public func Progress() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Progress"]) as! Float) }
    public func SetProgress(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetProgress", vi as Any]) }
    public func Text() -> String { callLocalFunction(l: ["", Pointer(), ___className, "Text"]) as! String }
    public func SetText(vqs: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetText", vqs as Any]) }
    public func TextAlignment() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TextAlignment"]) as! Float) }
    public func SetTextAlignment(vqt: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTextAlignment", vqt as Any]) }
    public func TextVisible() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "TextVisible"]) as! Bool }
    public func SetTextVisible(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTextVisible", vbo as Any]) }
    public func InvertedAppearance() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "InvertedAppearance"]) as! Bool }
    public func SetInvertedAppearance(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetInvertedAppearance", vbo as Any]) }
    public func BottomToTop() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "BottomToTop"]) as! Bool }
    public func SetBottomToTop(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetBottomToTop", vbo as Any]) }
}

public func NewQStyleOptionProgressBarFromPointer(ptr: String) -> QStyleOptionProgressBar { let r = QStyleOptionProgressBar(); r.initFrom(p: ptr, n: "widgets.QStyleOptionProgressBar"); return r }
public func NewQStyleOptionProgressBar() -> QStyleOptionProgressBar { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionProgressBar", ""]) as! QStyleOptionProgressBar }
public func NewQStyleOptionProgressBar2(other: QStyleOptionProgressBar_ITF? = nil) -> QStyleOptionProgressBar { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionProgressBar2", "", other as Any]) as! QStyleOptionProgressBar }
public protocol QStyleOptionRubberBand_ITF: QStyleOption_ITF {
    func QStyleOptionRubberBand_PTR() -> QStyleOptionRubberBand
}

public class QStyleOptionRubberBand: QStyleOption, QStyleOptionRubberBand_ITF {
    public func QStyleOptionRubberBand_PTR() -> QStyleOptionRubberBand { callLocalFunction(l: ["", Pointer(), ___className, "QStyleOptionRubberBand_PTR"]) as! QStyleOptionRubberBand }
    public func DestroyQStyleOptionRubberBand() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStyleOptionRubberBand"]) }
    public func Shape() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Shape"]) as! Float) }
    public func SetShape(vqr: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetShape", vqr as Any]) }
    public func Opaque() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "Opaque"]) as! Bool }
    public func SetOpaque(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOpaque", vbo as Any]) }
}

public func NewQStyleOptionRubberBandFromPointer(ptr: String) -> QStyleOptionRubberBand { let r = QStyleOptionRubberBand(); r.initFrom(p: ptr, n: "widgets.QStyleOptionRubberBand"); return r }
public func NewQStyleOptionRubberBand() -> QStyleOptionRubberBand { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionRubberBand", ""]) as! QStyleOptionRubberBand }
public func NewQStyleOptionRubberBand2(other: QStyleOptionRubberBand_ITF? = nil) -> QStyleOptionRubberBand { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionRubberBand2", "", other as Any]) as! QStyleOptionRubberBand }
public protocol QStyleOptionSizeGrip_ITF: QStyleOptionComplex_ITF {
    func QStyleOptionSizeGrip_PTR() -> QStyleOptionSizeGrip
}

public class QStyleOptionSizeGrip: QStyleOptionComplex, QStyleOptionSizeGrip_ITF {
    public func QStyleOptionSizeGrip_PTR() -> QStyleOptionSizeGrip { callLocalFunction(l: ["", Pointer(), ___className, "QStyleOptionSizeGrip_PTR"]) as! QStyleOptionSizeGrip }
    public func DestroyQStyleOptionSizeGrip() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStyleOptionSizeGrip"]) }
    public func Corner() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Corner"]) as! Float) }
    public func SetCorner(vqt: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCorner", vqt as Any]) }
}

public func NewQStyleOptionSizeGripFromPointer(ptr: String) -> QStyleOptionSizeGrip { let r = QStyleOptionSizeGrip(); r.initFrom(p: ptr, n: "widgets.QStyleOptionSizeGrip"); return r }
public func NewQStyleOptionSizeGrip() -> QStyleOptionSizeGrip { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionSizeGrip", ""]) as! QStyleOptionSizeGrip }
public func NewQStyleOptionSizeGrip2(other: QStyleOptionSizeGrip_ITF? = nil) -> QStyleOptionSizeGrip { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionSizeGrip2", "", other as Any]) as! QStyleOptionSizeGrip }
public protocol QStyleOptionSlider_ITF: QStyleOptionComplex_ITF {
    func QStyleOptionSlider_PTR() -> QStyleOptionSlider
}

public class QStyleOptionSlider: QStyleOptionComplex, QStyleOptionSlider_ITF {
    public func QStyleOptionSlider_PTR() -> QStyleOptionSlider { callLocalFunction(l: ["", Pointer(), ___className, "QStyleOptionSlider_PTR"]) as! QStyleOptionSlider }
    public func DestroyQStyleOptionSlider() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStyleOptionSlider"]) }
    public func Orientation() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Orientation"]) as! Float) }
    public func SetOrientation(vqt: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOrientation", vqt as Any]) }
    public func Minimum() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Minimum"]) as! Float) }
    public func SetMinimum(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMinimum", vi as Any]) }
    public func Maximum() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Maximum"]) as! Float) }
    public func SetMaximum(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMaximum", vi as Any]) }
    public func TickPosition() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TickPosition"]) as! Float) }
    public func SetTickPosition(vqs: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTickPosition", vqs as Any]) }
    public func TickInterval() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TickInterval"]) as! Float) }
    public func SetTickInterval(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTickInterval", vi as Any]) }
    public func UpsideDown() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "UpsideDown"]) as! Bool }
    public func SetUpsideDown(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetUpsideDown", vbo as Any]) }
    public func SliderPosition() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SliderPosition"]) as! Float) }
    public func SetSliderPosition(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSliderPosition", vi as Any]) }
    public func SliderValue() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SliderValue"]) as! Float) }
    public func SetSliderValue(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSliderValue", vi as Any]) }
    public func SingleStep() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SingleStep"]) as! Float) }
    public func SetSingleStep(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSingleStep", vi as Any]) }
    public func PageStep() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "PageStep"]) as! Float) }
    public func SetPageStep(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPageStep", vi as Any]) }
    public func NotchTarget() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "NotchTarget"]) as! Float }
    public func SetNotchTarget(vqr: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetNotchTarget", vqr as Any]) }
    public func DialWrapping() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "DialWrapping"]) as! Bool }
    public func SetDialWrapping(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDialWrapping", vbo as Any]) }
}

public func NewQStyleOptionSliderFromPointer(ptr: String) -> QStyleOptionSlider { let r = QStyleOptionSlider(); r.initFrom(p: ptr, n: "widgets.QStyleOptionSlider"); return r }
public func NewQStyleOptionSlider() -> QStyleOptionSlider { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionSlider", ""]) as! QStyleOptionSlider }
public func NewQStyleOptionSlider2(other: QStyleOptionSlider_ITF? = nil) -> QStyleOptionSlider { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionSlider2", "", other as Any]) as! QStyleOptionSlider }
public protocol QStyleOptionSpinBox_ITF: QStyleOptionComplex_ITF {
    func QStyleOptionSpinBox_PTR() -> QStyleOptionSpinBox
}

public class QStyleOptionSpinBox: QStyleOptionComplex, QStyleOptionSpinBox_ITF {
    public func QStyleOptionSpinBox_PTR() -> QStyleOptionSpinBox { callLocalFunction(l: ["", Pointer(), ___className, "QStyleOptionSpinBox_PTR"]) as! QStyleOptionSpinBox }
    public func DestroyQStyleOptionSpinBox() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStyleOptionSpinBox"]) }
    public func ButtonSymbols() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ButtonSymbols"]) as! Float) }
    public func SetButtonSymbols(vqa: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetButtonSymbols", vqa as Any]) }
    public func StepEnabled() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "StepEnabled"]) as! Float) }
    public func SetStepEnabled(vqa: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStepEnabled", vqa as Any]) }
    public func Frame() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "Frame"]) as! Bool }
    public func SetFrame(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFrame", vbo as Any]) }
}

public func NewQStyleOptionSpinBoxFromPointer(ptr: String) -> QStyleOptionSpinBox { let r = QStyleOptionSpinBox(); r.initFrom(p: ptr, n: "widgets.QStyleOptionSpinBox"); return r }
public func NewQStyleOptionSpinBox() -> QStyleOptionSpinBox { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionSpinBox", ""]) as! QStyleOptionSpinBox }
public func NewQStyleOptionSpinBox2(other: QStyleOptionSpinBox_ITF? = nil) -> QStyleOptionSpinBox { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionSpinBox2", "", other as Any]) as! QStyleOptionSpinBox }
public protocol QStyleOptionTab_ITF: QStyleOption_ITF {
    func QStyleOptionTab_PTR() -> QStyleOptionTab
}

public class QStyleOptionTab: QStyleOption, QStyleOptionTab_ITF {
    public func QStyleOptionTab_PTR() -> QStyleOptionTab { callLocalFunction(l: ["", Pointer(), ___className, "QStyleOptionTab_PTR"]) as! QStyleOptionTab }
    public func DestroyQStyleOptionTab() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStyleOptionTab"]) }
    public func Shape() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Shape"]) as! Float) }
    public func SetShape(vqt: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetShape", vqt as Any]) }
    public func Text() -> String { callLocalFunction(l: ["", Pointer(), ___className, "Text"]) as! String }
    public func SetText(vqs: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetText", vqs as Any]) }
    public func Icon() -> QIcon { callLocalFunction(l: ["", Pointer(), ___className, "Icon"]) as! QIcon }
    public func SetIcon(vqi: QIcon_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIcon", vqi as Any]) }
    public func Row() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Row"]) as! Float) }
    public func SetRow(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRow", vi as Any]) }
    public func Position() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Position"]) as! Float) }
    public func SetPosition(vqs: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPosition", vqs as Any]) }
    public func SelectedPosition() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SelectedPosition"]) as! Float) }
    public func SetSelectedPosition(vqs: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSelectedPosition", vqs as Any]) }
    public func CornerWidgets() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CornerWidgets"]) as! Float) }
    public func SetCornerWidgets(vqs: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCornerWidgets", vqs as Any]) }
    public func IconSize() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "IconSize"]) as! QSize }
    public func SetIconSize(vqs: QSize_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIconSize", vqs as Any]) }
    public func DocumentMode() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "DocumentMode"]) as! Bool }
    public func SetDocumentMode(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDocumentMode", vbo as Any]) }
    public func LeftButtonSize() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "LeftButtonSize"]) as! QSize }
    public func SetLeftButtonSize(vqs: QSize_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetLeftButtonSize", vqs as Any]) }
    public func RightButtonSize() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "RightButtonSize"]) as! QSize }
    public func SetRightButtonSize(vqs: QSize_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRightButtonSize", vqs as Any]) }
}

public func NewQStyleOptionTabFromPointer(ptr: String) -> QStyleOptionTab { let r = QStyleOptionTab(); r.initFrom(p: ptr, n: "widgets.QStyleOptionTab"); return r }
public func NewQStyleOptionTab() -> QStyleOptionTab { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionTab", ""]) as! QStyleOptionTab }
public func NewQStyleOptionTab2(other: QStyleOptionTab_ITF? = nil) -> QStyleOptionTab { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionTab2", "", other as Any]) as! QStyleOptionTab }
public protocol QStyleOptionTabBarBase_ITF: QStyleOption_ITF {
    func QStyleOptionTabBarBase_PTR() -> QStyleOptionTabBarBase
}

public class QStyleOptionTabBarBase: QStyleOption, QStyleOptionTabBarBase_ITF {
    public func QStyleOptionTabBarBase_PTR() -> QStyleOptionTabBarBase { callLocalFunction(l: ["", Pointer(), ___className, "QStyleOptionTabBarBase_PTR"]) as! QStyleOptionTabBarBase }
    public func DestroyQStyleOptionTabBarBase() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStyleOptionTabBarBase"]) }
    public func Shape() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Shape"]) as! Float) }
    public func SetShape(vqt: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetShape", vqt as Any]) }
    public func TabBarRect() -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "TabBarRect"]) as! QRect }
    public func SetTabBarRect(vqr: QRect_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabBarRect", vqr as Any]) }
    public func SelectedTabRect() -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "SelectedTabRect"]) as! QRect }
    public func SetSelectedTabRect(vqr: QRect_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSelectedTabRect", vqr as Any]) }
    public func DocumentMode() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "DocumentMode"]) as! Bool }
    public func SetDocumentMode(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDocumentMode", vbo as Any]) }
}

public func NewQStyleOptionTabBarBaseFromPointer(ptr: String) -> QStyleOptionTabBarBase { let r = QStyleOptionTabBarBase(); r.initFrom(p: ptr, n: "widgets.QStyleOptionTabBarBase"); return r }
public func NewQStyleOptionTabBarBase() -> QStyleOptionTabBarBase { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionTabBarBase", ""]) as! QStyleOptionTabBarBase }
public func NewQStyleOptionTabBarBase2(other: QStyleOptionTabBarBase_ITF? = nil) -> QStyleOptionTabBarBase { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionTabBarBase2", "", other as Any]) as! QStyleOptionTabBarBase }
public protocol QStyleOptionTabWidgetFrame_ITF: QStyleOption_ITF {
    func QStyleOptionTabWidgetFrame_PTR() -> QStyleOptionTabWidgetFrame
}

public class QStyleOptionTabWidgetFrame: QStyleOption, QStyleOptionTabWidgetFrame_ITF {
    public func QStyleOptionTabWidgetFrame_PTR() -> QStyleOptionTabWidgetFrame { callLocalFunction(l: ["", Pointer(), ___className, "QStyleOptionTabWidgetFrame_PTR"]) as! QStyleOptionTabWidgetFrame }
    public func DestroyQStyleOptionTabWidgetFrame() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStyleOptionTabWidgetFrame"]) }
    public func LineWidth() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "LineWidth"]) as! Float) }
    public func SetLineWidth(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetLineWidth", vi as Any]) }
    public func MidLineWidth() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "MidLineWidth"]) as! Float) }
    public func SetMidLineWidth(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMidLineWidth", vi as Any]) }
    public func Shape() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Shape"]) as! Float) }
    public func SetShape(vqt: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetShape", vqt as Any]) }
    public func TabBarSize() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "TabBarSize"]) as! QSize }
    public func SetTabBarSize(vqs: QSize_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabBarSize", vqs as Any]) }
    public func RightCornerWidgetSize() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "RightCornerWidgetSize"]) as! QSize }
    public func SetRightCornerWidgetSize(vqs: QSize_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRightCornerWidgetSize", vqs as Any]) }
    public func LeftCornerWidgetSize() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "LeftCornerWidgetSize"]) as! QSize }
    public func SetLeftCornerWidgetSize(vqs: QSize_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetLeftCornerWidgetSize", vqs as Any]) }
    public func TabBarRect() -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "TabBarRect"]) as! QRect }
    public func SetTabBarRect(vqr: QRect_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabBarRect", vqr as Any]) }
    public func SelectedTabRect() -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "SelectedTabRect"]) as! QRect }
    public func SetSelectedTabRect(vqr: QRect_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSelectedTabRect", vqr as Any]) }
}

public func NewQStyleOptionTabWidgetFrameFromPointer(ptr: String) -> QStyleOptionTabWidgetFrame { let r = QStyleOptionTabWidgetFrame(); r.initFrom(p: ptr, n: "widgets.QStyleOptionTabWidgetFrame"); return r }
public func NewQStyleOptionTabWidgetFrame() -> QStyleOptionTabWidgetFrame { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionTabWidgetFrame", ""]) as! QStyleOptionTabWidgetFrame }
public func NewQStyleOptionTabWidgetFrame2(other: QStyleOptionTabWidgetFrame_ITF? = nil) -> QStyleOptionTabWidgetFrame { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionTabWidgetFrame2", "", other as Any]) as! QStyleOptionTabWidgetFrame }
public protocol QStyleOptionTitleBar_ITF: QStyleOptionComplex_ITF {
    func QStyleOptionTitleBar_PTR() -> QStyleOptionTitleBar
}

public class QStyleOptionTitleBar: QStyleOptionComplex, QStyleOptionTitleBar_ITF {
    public func QStyleOptionTitleBar_PTR() -> QStyleOptionTitleBar { callLocalFunction(l: ["", Pointer(), ___className, "QStyleOptionTitleBar_PTR"]) as! QStyleOptionTitleBar }
    public func DestroyQStyleOptionTitleBar() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStyleOptionTitleBar"]) }
    public func Text() -> String { callLocalFunction(l: ["", Pointer(), ___className, "Text"]) as! String }
    public func SetText(vqs: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetText", vqs as Any]) }
    public func Icon() -> QIcon { callLocalFunction(l: ["", Pointer(), ___className, "Icon"]) as! QIcon }
    public func SetIcon(vqi: QIcon_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIcon", vqi as Any]) }
    public func TitleBarState() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TitleBarState"]) as! Float) }
    public func SetTitleBarState(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTitleBarState", vi as Any]) }
    public func TitleBarFlags() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TitleBarFlags"]) as! Float) }
    public func SetTitleBarFlags(vqt: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTitleBarFlags", vqt as Any]) }
}

public func NewQStyleOptionTitleBarFromPointer(ptr: String) -> QStyleOptionTitleBar { let r = QStyleOptionTitleBar(); r.initFrom(p: ptr, n: "widgets.QStyleOptionTitleBar"); return r }
public func NewQStyleOptionTitleBar() -> QStyleOptionTitleBar { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionTitleBar", ""]) as! QStyleOptionTitleBar }
public func NewQStyleOptionTitleBar2(other: QStyleOptionTitleBar_ITF? = nil) -> QStyleOptionTitleBar { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionTitleBar2", "", other as Any]) as! QStyleOptionTitleBar }
public protocol QStyleOptionToolBar_ITF: QStyleOption_ITF {
    func QStyleOptionToolBar_PTR() -> QStyleOptionToolBar
}

public class QStyleOptionToolBar: QStyleOption, QStyleOptionToolBar_ITF {
    public func QStyleOptionToolBar_PTR() -> QStyleOptionToolBar { callLocalFunction(l: ["", Pointer(), ___className, "QStyleOptionToolBar_PTR"]) as! QStyleOptionToolBar }
    public func DestroyQStyleOptionToolBar() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStyleOptionToolBar"]) }
    public func PositionOfLine() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "PositionOfLine"]) as! Float) }
    public func SetPositionOfLine(vqs: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPositionOfLine", vqs as Any]) }
    public func PositionWithinLine() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "PositionWithinLine"]) as! Float) }
    public func SetPositionWithinLine(vqs: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPositionWithinLine", vqs as Any]) }
    public func ToolBarArea() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ToolBarArea"]) as! Float) }
    public func SetToolBarArea(vqt: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetToolBarArea", vqt as Any]) }
    public func Features() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Features"]) as! Float) }
    public func SetFeatures(vqs: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFeatures", vqs as Any]) }
    public func LineWidth() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "LineWidth"]) as! Float) }
    public func SetLineWidth(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetLineWidth", vi as Any]) }
    public func MidLineWidth() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "MidLineWidth"]) as! Float) }
    public func SetMidLineWidth(vi: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMidLineWidth", vi as Any]) }
}

public func NewQStyleOptionToolBarFromPointer(ptr: String) -> QStyleOptionToolBar { let r = QStyleOptionToolBar(); r.initFrom(p: ptr, n: "widgets.QStyleOptionToolBar"); return r }
public func NewQStyleOptionToolBar() -> QStyleOptionToolBar { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionToolBar", ""]) as! QStyleOptionToolBar }
public func NewQStyleOptionToolBar2(other: QStyleOptionToolBar_ITF? = nil) -> QStyleOptionToolBar { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionToolBar2", "", other as Any]) as! QStyleOptionToolBar }
public protocol QStyleOptionToolBox_ITF: QStyleOption_ITF {
    func QStyleOptionToolBox_PTR() -> QStyleOptionToolBox
}

public class QStyleOptionToolBox: QStyleOption, QStyleOptionToolBox_ITF {
    public func QStyleOptionToolBox_PTR() -> QStyleOptionToolBox { callLocalFunction(l: ["", Pointer(), ___className, "QStyleOptionToolBox_PTR"]) as! QStyleOptionToolBox }
    public func DestroyQStyleOptionToolBox() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStyleOptionToolBox"]) }
    public func Text() -> String { callLocalFunction(l: ["", Pointer(), ___className, "Text"]) as! String }
    public func SetText(vqs: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetText", vqs as Any]) }
    public func Icon() -> QIcon { callLocalFunction(l: ["", Pointer(), ___className, "Icon"]) as! QIcon }
    public func SetIcon(vqi: QIcon_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIcon", vqi as Any]) }
    public func SelectedPosition() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SelectedPosition"]) as! Float) }
    public func SetSelectedPosition(vqs: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSelectedPosition", vqs as Any]) }
}

public func NewQStyleOptionToolBoxFromPointer(ptr: String) -> QStyleOptionToolBox { let r = QStyleOptionToolBox(); r.initFrom(p: ptr, n: "widgets.QStyleOptionToolBox"); return r }
public func NewQStyleOptionToolBox() -> QStyleOptionToolBox { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionToolBox", ""]) as! QStyleOptionToolBox }
public func NewQStyleOptionToolBox2(other: QStyleOptionToolBox_ITF? = nil) -> QStyleOptionToolBox { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionToolBox2", "", other as Any]) as! QStyleOptionToolBox }
public protocol QStyleOptionToolButton_ITF: QStyleOptionComplex_ITF {
    func QStyleOptionToolButton_PTR() -> QStyleOptionToolButton
}

public class QStyleOptionToolButton: QStyleOptionComplex, QStyleOptionToolButton_ITF {
    public func QStyleOptionToolButton_PTR() -> QStyleOptionToolButton { callLocalFunction(l: ["", Pointer(), ___className, "QStyleOptionToolButton_PTR"]) as! QStyleOptionToolButton }
    public func DestroyQStyleOptionToolButton() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStyleOptionToolButton"]) }
    public func Features() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Features"]) as! Float) }
    public func SetFeatures(vqs: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFeatures", vqs as Any]) }
    public func Icon() -> QIcon { callLocalFunction(l: ["", Pointer(), ___className, "Icon"]) as! QIcon }
    public func SetIcon(vqi: QIcon_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIcon", vqi as Any]) }
    public func IconSize() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "IconSize"]) as! QSize }
    public func SetIconSize(vqs: QSize_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIconSize", vqs as Any]) }
    public func Text() -> String { callLocalFunction(l: ["", Pointer(), ___className, "Text"]) as! String }
    public func SetText(vqs: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetText", vqs as Any]) }
    public func ArrowType() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ArrowType"]) as! Float) }
    public func SetArrowType(vqt: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetArrowType", vqt as Any]) }
    public func ToolButtonStyle() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ToolButtonStyle"]) as! Float) }
    public func SetToolButtonStyle(vqt: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetToolButtonStyle", vqt as Any]) }
    public func Pos() -> QPoint { callLocalFunction(l: ["", Pointer(), ___className, "Pos"]) as! QPoint }
    public func SetPos(vqp: QPoint_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPos", vqp as Any]) }
    public func Font() -> QFont { callLocalFunction(l: ["", Pointer(), ___className, "Font"]) as! QFont }
    public func SetFont(vqf: QFont_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFont", vqf as Any]) }
}

public func NewQStyleOptionToolButtonFromPointer(ptr: String) -> QStyleOptionToolButton { let r = QStyleOptionToolButton(); r.initFrom(p: ptr, n: "widgets.QStyleOptionToolButton"); return r }
public func NewQStyleOptionToolButton() -> QStyleOptionToolButton { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionToolButton", ""]) as! QStyleOptionToolButton }
public func NewQStyleOptionToolButton2(other: QStyleOptionToolButton_ITF? = nil) -> QStyleOptionToolButton { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionToolButton2", "", other as Any]) as! QStyleOptionToolButton }
public protocol QStyleOptionViewItem_ITF: QStyleOption_ITF {
    func QStyleOptionViewItem_PTR() -> QStyleOptionViewItem
}

public class QStyleOptionViewItem: QStyleOption, QStyleOptionViewItem_ITF {
    public func QStyleOptionViewItem_PTR() -> QStyleOptionViewItem { callLocalFunction(l: ["", Pointer(), ___className, "QStyleOptionViewItem_PTR"]) as! QStyleOptionViewItem }
    public func DestroyQStyleOptionViewItem() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStyleOptionViewItem"]) }
    public func DisplayAlignment() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "DisplayAlignment"]) as! Float) }
    public func SetDisplayAlignment(vqt: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDisplayAlignment", vqt as Any]) }
    public func DecorationAlignment() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "DecorationAlignment"]) as! Float) }
    public func SetDecorationAlignment(vqt: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDecorationAlignment", vqt as Any]) }
    public func TextElideMode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TextElideMode"]) as! Float) }
    public func SetTextElideMode(vqt: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTextElideMode", vqt as Any]) }
    public func DecorationPosition() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "DecorationPosition"]) as! Float) }
    public func SetDecorationPosition(vqs: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDecorationPosition", vqs as Any]) }
    public func DecorationSize() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "DecorationSize"]) as! QSize }
    public func SetDecorationSize(vqs: QSize_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDecorationSize", vqs as Any]) }
    public func Font() -> QFont { callLocalFunction(l: ["", Pointer(), ___className, "Font"]) as! QFont }
    public func SetFont(vqf: QFont_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFont", vqf as Any]) }
    public func ShowDecorationSelected() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "ShowDecorationSelected"]) as! Bool }
    public func SetShowDecorationSelected(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetShowDecorationSelected", vbo as Any]) }
    public func Features() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Features"]) as! Float) }
    public func SetFeatures(vqs: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFeatures", vqs as Any]) }
    public func Index() -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "Index"]) as! QModelIndex }
    public func SetIndex(vqm: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIndex", vqm as Any]) }
    public func CheckState() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CheckState"]) as! Float) }
    public func SetCheckState(vqt: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCheckState", vqt as Any]) }
    public func Icon() -> QIcon { callLocalFunction(l: ["", Pointer(), ___className, "Icon"]) as! QIcon }
    public func SetIcon(vqi: QIcon_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIcon", vqi as Any]) }
    public func Text() -> String { callLocalFunction(l: ["", Pointer(), ___className, "Text"]) as! String }
    public func SetText(vqs: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetText", vqs as Any]) }
    public func ViewItemPosition() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ViewItemPosition"]) as! Float) }
    public func SetViewItemPosition(vqs: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetViewItemPosition", vqs as Any]) }
    public func BackgroundBrush() -> QBrush { callLocalFunction(l: ["", Pointer(), ___className, "BackgroundBrush"]) as! QBrush }
    public func SetBackgroundBrush(vqb: QBrush_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetBackgroundBrush", vqb as Any]) }
}

public func NewQStyleOptionViewItemFromPointer(ptr: String) -> QStyleOptionViewItem { let r = QStyleOptionViewItem(); r.initFrom(p: ptr, n: "widgets.QStyleOptionViewItem"); return r }
public func NewQStyleOptionViewItem() -> QStyleOptionViewItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionViewItem", ""]) as! QStyleOptionViewItem }
public func NewQStyleOptionViewItem2(other: QStyleOptionViewItem_ITF? = nil) -> QStyleOptionViewItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyleOptionViewItem2", "", other as Any]) as! QStyleOptionViewItem }
public protocol QStylePainter_ITF: QPainter_ITF {
    func QStylePainter_PTR() -> QStylePainter
}

public class QStylePainter: QPainter, QStylePainter_ITF {
    public func QStylePainter_PTR() -> QStylePainter { callLocalFunction(l: ["", Pointer(), ___className, "QStylePainter_PTR"]) as! QStylePainter }
    public func DestroyQStylePainter() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStylePainter"]) }
    public func Begin_QStylePainter(widget: QWidget_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "Begin", widget as Any]) as! Bool }
    public func Begin2(pd: QPaintDevice_ITF? = nil, widget: QWidget_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "Begin2", pd as Any, widget as Any]) as! Bool }
    public func DrawComplexControl(cc: Int, option: QStyleOptionComplex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawComplexControl", cc as Any, option as Any]) }
    public func DrawControl(ce: Int, option: QStyleOption_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawControl", ce as Any, option as Any]) }
    public func DrawItemPixmap(rect: QRect_ITF? = nil, flags: Int, pixmap: QPixmap_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawItemPixmap", rect as Any, flags as Any, pixmap as Any]) }
    public func DrawItemText(rect: QRect_ITF? = nil, flags: Int, pal: QPalette_ITF? = nil, enabled: Bool, text: String, textRole: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawItemText", rect as Any, flags as Any, pal as Any, enabled as Any, text as Any, textRole as Any]) }
    public func DrawPrimitive(pe: Int, option: QStyleOption_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawPrimitive", pe as Any, option as Any]) }
    public func Style() -> QStyle { callLocalFunction(l: ["", Pointer(), ___className, "Style"]) as! QStyle }
}

public func NewQStylePainterFromPointer(ptr: String) -> QStylePainter { let r = QStylePainter(); r.initFrom(p: ptr, n: "widgets.QStylePainter"); return r }
public func NewQStylePainter() -> QStylePainter { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStylePainter", ""]) as! QStylePainter }
public func NewQStylePainter2(widget: QWidget_ITF? = nil) -> QStylePainter { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStylePainter2", "", widget as Any]) as! QStylePainter }
public func NewQStylePainter3(pd: QPaintDevice_ITF? = nil, widget: QWidget_ITF? = nil) -> QStylePainter { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStylePainter3", "", pd as Any, widget as Any]) as! QStylePainter }
public protocol QStylePlugin_ITF: QObject_ITF {
    func QStylePlugin_PTR() -> QStylePlugin
}

public class QStylePlugin: QObject, QStylePlugin_ITF {
    public func QStylePlugin_PTR() -> QStylePlugin { callLocalFunction(l: ["", Pointer(), ___className, "QStylePlugin_PTR"]) as! QStylePlugin }
    public func ConnectCreate(f: @escaping (_ key: String) -> QStyle) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCreate", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectCreate() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCreate"]) }
    public func Create(key: String) -> QStyle { callLocalFunction(l: ["", Pointer(), ___className, "Create", key as Any]) as! QStyle }
    public func ConnectDestroyQStylePlugin(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQStylePlugin", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQStylePlugin() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQStylePlugin"]) }
    public func DestroyQStylePlugin() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStylePlugin"]) }
    public func DestroyQStylePluginDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStylePluginDefault"]) }
    override public func ChildEventDefault(event: QChildEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ChildEventDefault", event as Any]) }
    override public func ConnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ConnectNotifyDefault", sign as Any]) }
    override public func CustomEventDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CustomEventDefault", event as Any]) }
    override public func DeleteLaterDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DeleteLaterDefault"]) }
    override public func DisconnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DisconnectNotifyDefault", sign as Any]) }
    override public func EventDefault(e: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventDefault", e as Any]) as! Bool }
    override public func EventFilterDefault(watched: QObject_ITF? = nil, event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventFilterDefault", watched as Any, event as Any]) as! Bool }
    override public func MetaObjectDefault() -> QMetaObject { callLocalFunction(l: ["", Pointer(), ___className, "MetaObjectDefault"]) as! QMetaObject }
    override public func TimerEventDefault(event: QTimerEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TimerEventDefault", event as Any]) }
}

public func NewQStylePluginFromPointer(ptr: String) -> QStylePlugin { let r = QStylePlugin(); r.initFrom(p: ptr, n: "widgets.QStylePlugin"); return r }
public func NewQStylePlugin(parent: QObject_ITF? = nil) -> QStylePlugin { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStylePlugin", "", parent as Any]) as! QStylePlugin }
public protocol QStyledItemDelegate_ITF: QAbstractItemDelegate_ITF {
    func QStyledItemDelegate_PTR() -> QStyledItemDelegate
}

public class QStyledItemDelegate: QAbstractItemDelegate, QStyledItemDelegate_ITF {
    public func QStyledItemDelegate_PTR() -> QStyledItemDelegate { callLocalFunction(l: ["", Pointer(), ___className, "QStyledItemDelegate_PTR"]) as! QStyledItemDelegate }
    public func ConnectDisplayText(f: @escaping (_ value: QVariant, _ locale: QLocale) -> String) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDisplayText", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QVariant, inp[1] as! QLocale) } as Any) }
    public func DisconnectDisplayText() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDisplayText"]) }
    public func DisplayText(value: QVariant_ITF? = nil, locale: QLocale_ITF? = nil) -> String { callLocalFunction(l: ["", Pointer(), ___className, "DisplayText", value as Any, locale as Any]) as! String }
    public func DisplayTextDefault(value: QVariant_ITF? = nil, locale: QLocale_ITF? = nil) -> String { callLocalFunction(l: ["", Pointer(), ___className, "DisplayTextDefault", value as Any, locale as Any]) as! String }
    public func ConnectInitStyleOption(f: @escaping (_ option: QStyleOptionViewItem, _ index: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectInitStyleOption", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QStyleOptionViewItem, inp[1] as! QModelIndex) } as Any) }
    public func DisconnectInitStyleOption() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectInitStyleOption"]) }
    public func InitStyleOption(option: QStyleOptionViewItem_ITF? = nil, index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InitStyleOption", option as Any, index as Any]) }
    public func InitStyleOptionDefault(option: QStyleOptionViewItem_ITF? = nil, index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InitStyleOptionDefault", option as Any, index as Any]) }
    public func ItemEditorFactory() -> QItemEditorFactory { callLocalFunction(l: ["", Pointer(), ___className, "ItemEditorFactory"]) as! QItemEditorFactory }
    override public func ConnectPaint(f: @escaping (_ painter: QPainter, _ option: QStyleOptionViewItem, _ index: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPaint", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainter, inp[1] as! QStyleOptionViewItem, inp[2] as! QModelIndex) } as Any) }
    override public func DisconnectPaint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPaint"]) }
    override public func Paint(painter: QPainter_ITF? = nil, option: QStyleOptionViewItem_ITF? = nil, index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Paint", painter as Any, option as Any, index as Any]) }
    public func PaintDefault(painter: QPainter_ITF? = nil, option: QStyleOptionViewItem_ITF? = nil, index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "PaintDefault", painter as Any, option as Any, index as Any]) }
    public func SetItemEditorFactory(factory: QItemEditorFactory_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetItemEditorFactory", factory as Any]) }
    override public func ConnectSizeHint(f: @escaping (_ option: QStyleOptionViewItem, _ index: QModelIndex) -> QSize) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSizeHint", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QStyleOptionViewItem, inp[1] as! QModelIndex) } as Any) }
    override public func DisconnectSizeHint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSizeHint"]) }
    override public func SizeHint(option: QStyleOptionViewItem_ITF? = nil, index: QModelIndex_ITF? = nil) -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "SizeHint", option as Any, index as Any]) as! QSize }
    public func SizeHintDefault(option: QStyleOptionViewItem_ITF? = nil, index: QModelIndex_ITF? = nil) -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "SizeHintDefault", option as Any, index as Any]) as! QSize }
    public func ConnectDestroyQStyledItemDelegate(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQStyledItemDelegate", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQStyledItemDelegate() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQStyledItemDelegate"]) }
    public func DestroyQStyledItemDelegate() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStyledItemDelegate"]) }
    public func DestroyQStyledItemDelegateDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQStyledItemDelegateDefault"]) }
}

public func NewQStyledItemDelegateFromPointer(ptr: String) -> QStyledItemDelegate { let r = QStyledItemDelegate(); r.initFrom(p: ptr, n: "widgets.QStyledItemDelegate"); return r }
public func NewQStyledItemDelegate(parent: QObject_ITF? = nil) -> QStyledItemDelegate { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQStyledItemDelegate", "", parent as Any]) as! QStyledItemDelegate }
public protocol QSwipeGesture_ITF: QGesture_ITF {
    func QSwipeGesture_PTR() -> QSwipeGesture
}

public class QSwipeGesture: QGesture, QSwipeGesture_ITF {
    public func QSwipeGesture_PTR() -> QSwipeGesture { callLocalFunction(l: ["", Pointer(), ___className, "QSwipeGesture_PTR"]) as! QSwipeGesture }
    public func HorizontalDirection() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "HorizontalDirection"]) as! Float) }
    public func SetSwipeAngle(value: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSwipeAngle", value as Any]) }
    public func SwipeAngle() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "SwipeAngle"]) as! Float }
    public func VerticalDirection() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "VerticalDirection"]) as! Float) }
    public func ConnectDestroyQSwipeGesture(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQSwipeGesture", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQSwipeGesture() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQSwipeGesture"]) }
    public func DestroyQSwipeGesture() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQSwipeGesture"]) }
    public func DestroyQSwipeGestureDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQSwipeGestureDefault"]) }
}

public func NewQSwipeGestureFromPointer(ptr: String) -> QSwipeGesture { let r = QSwipeGesture(); r.initFrom(p: ptr, n: "widgets.QSwipeGesture"); return r }
public protocol QSystemTrayIcon_ITF: QObject_ITF {
    func QSystemTrayIcon_PTR() -> QSystemTrayIcon
}

public class QSystemTrayIcon: QObject, QSystemTrayIcon_ITF {
    public func QSystemTrayIcon_PTR() -> QSystemTrayIcon { callLocalFunction(l: ["", Pointer(), ___className, "QSystemTrayIcon_PTR"]) as! QSystemTrayIcon }
    public func ConnectActivated(f: @escaping (_ reason: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectActivated", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectActivated() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectActivated"]) }
    public func Activated(reason: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Activated", reason as Any]) }
    public func ContextMenu() -> QMenu { callLocalFunction(l: ["", Pointer(), ___className, "ContextMenu"]) as! QMenu }
    override public func EventDefault(e: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventDefault", e as Any]) as! Bool }
    public func Geometry() -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "Geometry"]) as! QRect }
    public func ConnectHide(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHide", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectHide() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHide"]) }
    public func Hide() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Hide"]) }
    public func HideDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "HideDefault"]) }
    public func Icon() -> QIcon { callLocalFunction(l: ["", Pointer(), ___className, "Icon"]) as! QIcon }
    public func IsSystemTrayAvailable() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsSystemTrayAvailable"]) as! Bool }
    public func IsVisible() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsVisible"]) as! Bool }
    public func ConnectMessageClicked(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMessageClicked", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectMessageClicked() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMessageClicked"]) }
    public func MessageClicked() { _ = callLocalFunction(l: ["", Pointer(), ___className, "MessageClicked"]) }
    public func SetContextMenu(menu: QMenu_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetContextMenu", menu as Any]) }
    public func SetIcon(icon: QIcon_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIcon", icon as Any]) }
    public func SetToolTip(tip: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetToolTip", tip as Any]) }
    public func ConnectSetVisible(f: @escaping (_ visible: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetVisible", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectSetVisible() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetVisible"]) }
    public func SetVisible(visible: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetVisible", visible as Any]) }
    public func SetVisibleDefault(visible: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetVisibleDefault", visible as Any]) }
    public func ConnectShow(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectShow", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectShow() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectShow"]) }
    public func Show() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Show"]) }
    public func ShowDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowDefault"]) }
    public func ConnectShowMessage(f: @escaping (_ title: String, _ message: String, _ icon: Int, _ millisecondsTimeoutHint: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectShowMessage", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String, inp[1] as! String, Int(inp[2] as! Float), Int(inp[3] as! Float)) } as Any) }
    public func DisconnectShowMessage() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectShowMessage"]) }
    public func ShowMessage(title: String, message: String, icon: Int, millisecondsTimeoutHint: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowMessage", title as Any, message as Any, icon as Any, millisecondsTimeoutHint as Any]) }
    public func ShowMessageDefault(title: String, message: String, icon: Int, millisecondsTimeoutHint: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowMessageDefault", title as Any, message as Any, icon as Any, millisecondsTimeoutHint as Any]) }
    public func ConnectShowMessage2(f: @escaping (_ title: String, _ message: String, _ icon: QIcon, _ millisecondsTimeoutHint: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectShowMessage2", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String, inp[1] as! String, inp[2] as! QIcon, Int(inp[3] as! Float)) } as Any) }
    public func DisconnectShowMessage2() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectShowMessage2"]) }
    public func ShowMessage2(title: String, message: String, icon: QIcon_ITF? = nil, millisecondsTimeoutHint: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowMessage2", title as Any, message as Any, icon as Any, millisecondsTimeoutHint as Any]) }
    public func ShowMessage2Default(title: String, message: String, icon: QIcon_ITF? = nil, millisecondsTimeoutHint: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowMessage2Default", title as Any, message as Any, icon as Any, millisecondsTimeoutHint as Any]) }
    public func SupportsMessages() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "SupportsMessages"]) as! Bool }
    public func ToolTip() -> String { callLocalFunction(l: ["", Pointer(), ___className, "ToolTip"]) as! String }
    public func ConnectDestroyQSystemTrayIcon(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQSystemTrayIcon", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQSystemTrayIcon() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQSystemTrayIcon"]) }
    public func DestroyQSystemTrayIcon() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQSystemTrayIcon"]) }
    public func DestroyQSystemTrayIconDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQSystemTrayIconDefault"]) }
    override public func ChildEventDefault(event: QChildEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ChildEventDefault", event as Any]) }
    override public func ConnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ConnectNotifyDefault", sign as Any]) }
    override public func CustomEventDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CustomEventDefault", event as Any]) }
    override public func DeleteLaterDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DeleteLaterDefault"]) }
    override public func DisconnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DisconnectNotifyDefault", sign as Any]) }
    override public func EventFilterDefault(watched: QObject_ITF? = nil, event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventFilterDefault", watched as Any, event as Any]) as! Bool }
    override public func MetaObjectDefault() -> QMetaObject { callLocalFunction(l: ["", Pointer(), ___className, "MetaObjectDefault"]) as! QMetaObject }
    override public func TimerEventDefault(event: QTimerEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TimerEventDefault", event as Any]) }
}

public func NewQSystemTrayIconFromPointer(ptr: String) -> QSystemTrayIcon { let r = QSystemTrayIcon(); r.initFrom(p: ptr, n: "widgets.QSystemTrayIcon"); return r }
public func NewQSystemTrayIcon(parent: QObject_ITF? = nil) -> QSystemTrayIcon { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQSystemTrayIcon", "", parent as Any]) as! QSystemTrayIcon }
public func NewQSystemTrayIcon2(icon: QIcon_ITF? = nil, parent: QObject_ITF? = nil) -> QSystemTrayIcon { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQSystemTrayIcon2", "", icon as Any, parent as Any]) as! QSystemTrayIcon }
public func QSystemTrayIcon_IsSystemTrayAvailable() -> Bool { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QSystemTrayIcon_IsSystemTrayAvailable", ""]) as! Bool }
public func QSystemTrayIcon_SupportsMessages() -> Bool { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QSystemTrayIcon_SupportsMessages", ""]) as! Bool }
public protocol QTabBar_ITF: QWidget_ITF {
    func QTabBar_PTR() -> QTabBar
}

public class QTabBar: QWidget, QTabBar_ITF {
    public func QTabBar_PTR() -> QTabBar { callLocalFunction(l: ["", Pointer(), ___className, "QTabBar_PTR"]) as! QTabBar }
    public func AccessibleTabName(index: Int) -> String { callLocalFunction(l: ["", Pointer(), ___className, "AccessibleTabName", index as Any]) as! String }
    public func AddTab(text: String) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "AddTab", text as Any]) as! Float) }
    public func AddTab2(icon: QIcon_ITF? = nil, text: String) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "AddTab2", icon as Any, text as Any]) as! Float) }
    public func AutoHide() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "AutoHide"]) as! Bool }
    public func ChangeCurrentOnDrag() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "ChangeCurrentOnDrag"]) as! Bool }
    public func Count() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Count"]) as! Float) }
    public func ConnectCurrentChanged(f: @escaping (_ index: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCurrentChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectCurrentChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCurrentChanged"]) }
    public func CurrentChanged(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CurrentChanged", index as Any]) }
    public func CurrentIndex() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CurrentIndex"]) as! Float) }
    public func DocumentMode() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "DocumentMode"]) as! Bool }
    public func DrawBase() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "DrawBase"]) as! Bool }
    public func ElideMode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ElideMode"]) as! Float) }
    public func Expanding() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "Expanding"]) as! Bool }
    public func IconSize() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "IconSize"]) as! QSize }
    public func InitStyleOption(option: QStyleOptionTab_ITF? = nil, tabIndex: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InitStyleOption", option as Any, tabIndex as Any]) }
    public func InsertTab(index: Int, text: String) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "InsertTab", index as Any, text as Any]) as! Float) }
    public func InsertTab2(index: Int, icon: QIcon_ITF? = nil, text: String) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "InsertTab2", index as Any, icon as Any, text as Any]) as! Float) }
    public func IsMovable() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsMovable"]) as! Bool }
    public func IsTabEnabled(index: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsTabEnabled", index as Any]) as! Bool }
    public func ConnectMinimumTabSizeHint(f: @escaping (_ index: Int) -> QSize) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMinimumTabSizeHint", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectMinimumTabSizeHint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMinimumTabSizeHint"]) }
    public func MinimumTabSizeHint(index: Int) -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "MinimumTabSizeHint", index as Any]) as! QSize }
    public func MinimumTabSizeHintDefault(index: Int) -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "MinimumTabSizeHintDefault", index as Any]) as! QSize }
    public func MoveTab(from: Int, to: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MoveTab", from as Any, to as Any]) }
    public func RemoveTab(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveTab", index as Any]) }
    public func SelectionBehaviorOnRemove() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SelectionBehaviorOnRemove"]) as! Float) }
    public func SetAccessibleTabName(index: Int, name: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAccessibleTabName", index as Any, name as Any]) }
    public func SetAutoHide(hide: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAutoHide", hide as Any]) }
    public func SetChangeCurrentOnDrag(change: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetChangeCurrentOnDrag", change as Any]) }
    public func ConnectSetCurrentIndex(f: @escaping (_ index: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetCurrentIndex", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSetCurrentIndex() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetCurrentIndex"]) }
    public func SetCurrentIndex(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentIndex", index as Any]) }
    public func SetCurrentIndexDefault(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentIndexDefault", index as Any]) }
    public func SetDocumentMode(set: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDocumentMode", set as Any]) }
    public func SetDrawBase(drawTheBase: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDrawBase", drawTheBase as Any]) }
    public func SetElideMode(vqt: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetElideMode", vqt as Any]) }
    public func SetExpanding(enabled: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetExpanding", enabled as Any]) }
    public func SetIconSize(size: QSize_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIconSize", size as Any]) }
    public func SetMovable(movable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMovable", movable as Any]) }
    public func SetSelectionBehaviorOnRemove(behavior: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSelectionBehaviorOnRemove", behavior as Any]) }
    public func SetShape(shape: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetShape", shape as Any]) }
    public func SetTabButton(index: Int, position: Int, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabButton", index as Any, position as Any, widget as Any]) }
    public func SetTabData(index: Int, data: QVariant_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabData", index as Any, data as Any]) }
    public func SetTabEnabled(index: Int, enabled: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabEnabled", index as Any, enabled as Any]) }
    public func SetTabIcon(index: Int, icon: QIcon_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabIcon", index as Any, icon as Any]) }
    public func SetTabText(index: Int, text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabText", index as Any, text as Any]) }
    public func SetTabTextColor(index: Int, color: QColor_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabTextColor", index as Any, color as Any]) }
    public func SetTabToolTip(index: Int, tip: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabToolTip", index as Any, tip as Any]) }
    public func SetTabWhatsThis(index: Int, text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabWhatsThis", index as Any, text as Any]) }
    public func SetTabsClosable(closable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabsClosable", closable as Any]) }
    public func SetUsesScrollButtons(useButtons: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetUsesScrollButtons", useButtons as Any]) }
    public func Shape() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Shape"]) as! Float) }
    public func TabAt(position: QPoint_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TabAt", position as Any]) as! Float) }
    public func ConnectTabBarClicked(f: @escaping (_ index: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTabBarClicked", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectTabBarClicked() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTabBarClicked"]) }
    public func TabBarClicked(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TabBarClicked", index as Any]) }
    public func ConnectTabBarDoubleClicked(f: @escaping (_ index: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTabBarDoubleClicked", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectTabBarDoubleClicked() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTabBarDoubleClicked"]) }
    public func TabBarDoubleClicked(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TabBarDoubleClicked", index as Any]) }
    public func TabButton(index: Int, position: Int) -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "TabButton", index as Any, position as Any]) as! QWidget }
    public func ConnectTabCloseRequested(f: @escaping (_ index: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTabCloseRequested", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectTabCloseRequested() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTabCloseRequested"]) }
    public func TabCloseRequested(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TabCloseRequested", index as Any]) }
    public func TabData(index: Int) -> QVariant { callLocalFunction(l: ["", Pointer(), ___className, "TabData", index as Any]) as! QVariant }
    public func TabIcon(index: Int) -> QIcon { callLocalFunction(l: ["", Pointer(), ___className, "TabIcon", index as Any]) as! QIcon }
    public func ConnectTabInserted(f: @escaping (_ index: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTabInserted", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectTabInserted() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTabInserted"]) }
    public func TabInserted(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TabInserted", index as Any]) }
    public func TabInsertedDefault(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TabInsertedDefault", index as Any]) }
    public func ConnectTabLayoutChange(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTabLayoutChange", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectTabLayoutChange() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTabLayoutChange"]) }
    public func TabLayoutChange() { _ = callLocalFunction(l: ["", Pointer(), ___className, "TabLayoutChange"]) }
    public func TabLayoutChangeDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "TabLayoutChangeDefault"]) }
    public func ConnectTabMoved(f: @escaping (_ from: Int, _ to: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTabMoved", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float)) } as Any) }
    public func DisconnectTabMoved() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTabMoved"]) }
    public func TabMoved(from: Int, to: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TabMoved", from as Any, to as Any]) }
    public func TabRect(index: Int) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "TabRect", index as Any]) as! QRect }
    public func ConnectTabRemoved(f: @escaping (_ index: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTabRemoved", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectTabRemoved() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTabRemoved"]) }
    public func TabRemoved(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TabRemoved", index as Any]) }
    public func TabRemovedDefault(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TabRemovedDefault", index as Any]) }
    public func ConnectTabSizeHint(f: @escaping (_ index: Int) -> QSize) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTabSizeHint", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectTabSizeHint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTabSizeHint"]) }
    public func TabSizeHint(index: Int) -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "TabSizeHint", index as Any]) as! QSize }
    public func TabSizeHintDefault(index: Int) -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "TabSizeHintDefault", index as Any]) as! QSize }
    public func TabText(index: Int) -> String { callLocalFunction(l: ["", Pointer(), ___className, "TabText", index as Any]) as! String }
    public func TabTextColor(index: Int) -> QColor { callLocalFunction(l: ["", Pointer(), ___className, "TabTextColor", index as Any]) as! QColor }
    public func TabToolTip(index: Int) -> String { callLocalFunction(l: ["", Pointer(), ___className, "TabToolTip", index as Any]) as! String }
    public func TabWhatsThis(index: Int) -> String { callLocalFunction(l: ["", Pointer(), ___className, "TabWhatsThis", index as Any]) as! String }
    public func TabsClosable() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "TabsClosable"]) as! Bool }
    public func UsesScrollButtons() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "UsesScrollButtons"]) as! Bool }
    public func ConnectDestroyQTabBar(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQTabBar", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQTabBar() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQTabBar"]) }
    public func DestroyQTabBar() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQTabBar"]) }
    public func DestroyQTabBarDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQTabBarDefault"]) }
}

public func NewQTabBarFromPointer(ptr: String) -> QTabBar { let r = QTabBar(); r.initFrom(p: ptr, n: "widgets.QTabBar"); return r }
public func NewQTabBar(parent: QWidget_ITF? = nil) -> QTabBar { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQTabBar", "", parent as Any]) as! QTabBar }
public protocol QTabWidget_ITF: QWidget_ITF {
    func QTabWidget_PTR() -> QTabWidget
}

public class QTabWidget: QWidget, QTabWidget_ITF {
    public func QTabWidget_PTR() -> QTabWidget { callLocalFunction(l: ["", Pointer(), ___className, "QTabWidget_PTR"]) as! QTabWidget }
    public func AddTab(page: QWidget_ITF? = nil, label: String) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "AddTab", page as Any, label as Any]) as! Float) }
    public func AddTab2(page: QWidget_ITF? = nil, icon: QIcon_ITF? = nil, label: String) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "AddTab2", page as Any, icon as Any, label as Any]) as! Float) }
    public func Clear() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Clear"]) }
    public func CornerWidget(corner: Int) -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "CornerWidget", corner as Any]) as! QWidget }
    public func Count() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Count"]) as! Float) }
    public func ConnectCurrentChanged(f: @escaping (_ index: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCurrentChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectCurrentChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCurrentChanged"]) }
    public func CurrentChanged(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CurrentChanged", index as Any]) }
    public func CurrentIndex() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CurrentIndex"]) as! Float) }
    public func CurrentWidget() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "CurrentWidget"]) as! QWidget }
    public func DocumentMode() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "DocumentMode"]) as! Bool }
    public func ElideMode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ElideMode"]) as! Float) }
    public func IconSize() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "IconSize"]) as! QSize }
    public func IndexOf(w: QWidget_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "IndexOf", w as Any]) as! Float) }
    public func InitStyleOption(option: QStyleOptionTabWidgetFrame_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InitStyleOption", option as Any]) }
    public func InsertTab(index: Int, page: QWidget_ITF? = nil, label: String) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "InsertTab", index as Any, page as Any, label as Any]) as! Float) }
    public func InsertTab2(index: Int, page: QWidget_ITF? = nil, icon: QIcon_ITF? = nil, label: String) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "InsertTab2", index as Any, page as Any, icon as Any, label as Any]) as! Float) }
    public func IsMovable() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsMovable"]) as! Bool }
    public func IsTabEnabled(index: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsTabEnabled", index as Any]) as! Bool }
    public func RemoveTab(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveTab", index as Any]) }
    public func SetCornerWidget(widget: QWidget_ITF? = nil, corner: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCornerWidget", widget as Any, corner as Any]) }
    public func ConnectSetCurrentIndex(f: @escaping (_ index: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetCurrentIndex", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSetCurrentIndex() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetCurrentIndex"]) }
    public func SetCurrentIndex(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentIndex", index as Any]) }
    public func SetCurrentIndexDefault(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentIndexDefault", index as Any]) }
    public func ConnectSetCurrentWidget(f: @escaping (_ widget: QWidget) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetCurrentWidget", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QWidget) } as Any) }
    public func DisconnectSetCurrentWidget() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetCurrentWidget"]) }
    public func SetCurrentWidget(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentWidget", widget as Any]) }
    public func SetCurrentWidgetDefault(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentWidgetDefault", widget as Any]) }
    public func SetDocumentMode(set: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDocumentMode", set as Any]) }
    public func SetElideMode(vqt: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetElideMode", vqt as Any]) }
    public func SetIconSize(size: QSize_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIconSize", size as Any]) }
    public func SetMovable(movable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMovable", movable as Any]) }
    public func SetTabBar(tb: QTabBar_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabBar", tb as Any]) }
    public func SetTabBarAutoHide(enabled: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabBarAutoHide", enabled as Any]) }
    public func SetTabEnabled(index: Int, enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabEnabled", index as Any, enable as Any]) }
    public func SetTabIcon(index: Int, icon: QIcon_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabIcon", index as Any, icon as Any]) }
    public func SetTabPosition(vqt: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabPosition", vqt as Any]) }
    public func SetTabShape(s: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabShape", s as Any]) }
    public func SetTabText(index: Int, label: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabText", index as Any, label as Any]) }
    public func SetTabToolTip(index: Int, tip: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabToolTip", index as Any, tip as Any]) }
    public func SetTabWhatsThis(index: Int, text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabWhatsThis", index as Any, text as Any]) }
    public func SetTabsClosable(closeable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabsClosable", closeable as Any]) }
    public func SetUsesScrollButtons(useButtons: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetUsesScrollButtons", useButtons as Any]) }
    public func TabBar() -> QTabBar { callLocalFunction(l: ["", Pointer(), ___className, "TabBar"]) as! QTabBar }
    public func TabBarAutoHide() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "TabBarAutoHide"]) as! Bool }
    public func ConnectTabBarClicked(f: @escaping (_ index: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTabBarClicked", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectTabBarClicked() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTabBarClicked"]) }
    public func TabBarClicked(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TabBarClicked", index as Any]) }
    public func ConnectTabBarDoubleClicked(f: @escaping (_ index: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTabBarDoubleClicked", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectTabBarDoubleClicked() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTabBarDoubleClicked"]) }
    public func TabBarDoubleClicked(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TabBarDoubleClicked", index as Any]) }
    public func ConnectTabCloseRequested(f: @escaping (_ index: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTabCloseRequested", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectTabCloseRequested() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTabCloseRequested"]) }
    public func TabCloseRequested(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TabCloseRequested", index as Any]) }
    public func TabIcon(index: Int) -> QIcon { callLocalFunction(l: ["", Pointer(), ___className, "TabIcon", index as Any]) as! QIcon }
    public func ConnectTabInserted(f: @escaping (_ index: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTabInserted", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectTabInserted() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTabInserted"]) }
    public func TabInserted(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TabInserted", index as Any]) }
    public func TabInsertedDefault(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TabInsertedDefault", index as Any]) }
    public func TabPosition() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TabPosition"]) as! Float) }
    public func ConnectTabRemoved(f: @escaping (_ index: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTabRemoved", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectTabRemoved() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTabRemoved"]) }
    public func TabRemoved(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TabRemoved", index as Any]) }
    public func TabRemovedDefault(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TabRemovedDefault", index as Any]) }
    public func TabShape() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TabShape"]) as! Float) }
    public func TabText(index: Int) -> String { callLocalFunction(l: ["", Pointer(), ___className, "TabText", index as Any]) as! String }
    public func TabToolTip(index: Int) -> String { callLocalFunction(l: ["", Pointer(), ___className, "TabToolTip", index as Any]) as! String }
    public func TabWhatsThis(index: Int) -> String { callLocalFunction(l: ["", Pointer(), ___className, "TabWhatsThis", index as Any]) as! String }
    public func TabsClosable() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "TabsClosable"]) as! Bool }
    public func UsesScrollButtons() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "UsesScrollButtons"]) as! Bool }
    public func Widget(index: Int) -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "Widget", index as Any]) as! QWidget }
    public func ConnectDestroyQTabWidget(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQTabWidget", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQTabWidget() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQTabWidget"]) }
    public func DestroyQTabWidget() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQTabWidget"]) }
    public func DestroyQTabWidgetDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQTabWidgetDefault"]) }
}

public func NewQTabWidgetFromPointer(ptr: String) -> QTabWidget { let r = QTabWidget(); r.initFrom(p: ptr, n: "widgets.QTabWidget"); return r }
public func NewQTabWidget(parent: QWidget_ITF? = nil) -> QTabWidget { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQTabWidget", "", parent as Any]) as! QTabWidget }
public protocol QTableView_ITF: QAbstractItemView_ITF {
    func QTableView_PTR() -> QTableView
}

public class QTableView: QAbstractItemView, QTableView_ITF {
    public func QTableView_PTR() -> QTableView { callLocalFunction(l: ["", Pointer(), ___className, "QTableView_PTR"]) as! QTableView }
    public func ClearSpans() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearSpans"]) }
    public func ColumnAt(x: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ColumnAt", x as Any]) as! Float) }
    public func ConnectColumnCountChanged(f: @escaping (_ oldCount: Int, _ newCount: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectColumnCountChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float)) } as Any) }
    public func DisconnectColumnCountChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectColumnCountChanged"]) }
    public func ColumnCountChanged(oldCount: Int, newCount: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ColumnCountChanged", oldCount as Any, newCount as Any]) }
    public func ColumnCountChangedDefault(oldCount: Int, newCount: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ColumnCountChangedDefault", oldCount as Any, newCount as Any]) }
    public func ConnectColumnMoved(f: @escaping (_ column: Int, _ oldIndex: Int, _ newIndex: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectColumnMoved", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float), Int(inp[2] as! Float)) } as Any) }
    public func DisconnectColumnMoved() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectColumnMoved"]) }
    public func ColumnMoved(column: Int, oldIndex: Int, newIndex: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ColumnMoved", column as Any, oldIndex as Any, newIndex as Any]) }
    public func ColumnMovedDefault(column: Int, oldIndex: Int, newIndex: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ColumnMovedDefault", column as Any, oldIndex as Any, newIndex as Any]) }
    public func ConnectColumnResized(f: @escaping (_ column: Int, _ oldWidth: Int, _ newWidth: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectColumnResized", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float), Int(inp[2] as! Float)) } as Any) }
    public func DisconnectColumnResized() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectColumnResized"]) }
    public func ColumnResized(column: Int, oldWidth: Int, newWidth: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ColumnResized", column as Any, oldWidth as Any, newWidth as Any]) }
    public func ColumnResizedDefault(column: Int, oldWidth: Int, newWidth: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ColumnResizedDefault", column as Any, oldWidth as Any, newWidth as Any]) }
    public func ColumnSpan(row: Int, column: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ColumnSpan", row as Any, column as Any]) as! Float) }
    public func ColumnViewportPosition(column: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ColumnViewportPosition", column as Any]) as! Float) }
    public func ColumnWidth(column: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ColumnWidth", column as Any]) as! Float) }
    override public func ConnectCurrentChanged(f: @escaping (_ current: QModelIndex, _ previous: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCurrentChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex, inp[1] as! QModelIndex) } as Any) }
    override public func DisconnectCurrentChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCurrentChanged"]) }
    override public func CurrentChanged(current: QModelIndex_ITF? = nil, previous: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CurrentChanged", current as Any, previous as Any]) }
    override public func CurrentChangedDefault(current: QModelIndex_ITF? = nil, previous: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CurrentChangedDefault", current as Any, previous as Any]) }
    public func GridStyle() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "GridStyle"]) as! Float) }
    public func ConnectHideColumn(f: @escaping (_ column: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHideColumn", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectHideColumn() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHideColumn"]) }
    public func HideColumn(column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "HideColumn", column as Any]) }
    public func HideColumnDefault(column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "HideColumnDefault", column as Any]) }
    public func ConnectHideRow(f: @escaping (_ row: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHideRow", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectHideRow() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHideRow"]) }
    public func HideRow(row: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "HideRow", row as Any]) }
    public func HideRowDefault(row: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "HideRowDefault", row as Any]) }
    public func HorizontalHeader() -> QHeaderView { callLocalFunction(l: ["", Pointer(), ___className, "HorizontalHeader"]) as! QHeaderView }
    override public func ConnectHorizontalOffset(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHorizontalOffset", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectHorizontalOffset() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHorizontalOffset"]) }
    override public func HorizontalOffset() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "HorizontalOffset"]) as! Float) }
    public func HorizontalOffsetDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "HorizontalOffsetDefault"]) as! Float) }
    override public func ConnectIndexAt(f: @escaping (_ pos: QPoint) -> QModelIndex) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectIndexAt", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPoint) } as Any) }
    override public func DisconnectIndexAt() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectIndexAt"]) }
    override public func IndexAt(point: QPoint_ITF? = nil) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "IndexAt", point as Any]) as! QModelIndex }
    public func IndexAtDefault(pos: QPoint_ITF? = nil) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "IndexAtDefault", pos as Any]) as! QModelIndex }
    public func IsColumnHidden(column: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsColumnHidden", column as Any]) as! Bool }
    public func IsCornerButtonEnabled() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsCornerButtonEnabled"]) as! Bool }
    override public func ConnectIsIndexHidden(f: @escaping (_ index: QModelIndex) -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectIsIndexHidden", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    override public func DisconnectIsIndexHidden() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectIsIndexHidden"]) }
    override public func IsIndexHidden(index: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsIndexHidden", index as Any]) as! Bool }
    public func IsIndexHiddenDefault(index: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsIndexHiddenDefault", index as Any]) as! Bool }
    public func IsRowHidden(row: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsRowHidden", row as Any]) as! Bool }
    public func IsSortingEnabled() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsSortingEnabled"]) as! Bool }
    override public func ConnectMoveCursor(f: @escaping (_ cursorAction: Int, _ modifiers: Int) -> QModelIndex) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMoveCursor", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float)) } as Any) }
    override public func DisconnectMoveCursor() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMoveCursor"]) }
    override public func MoveCursor(cursorAction: Int, modifiers: Int) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "MoveCursor", cursorAction as Any, modifiers as Any]) as! QModelIndex }
    public func MoveCursorDefault(cursorAction: Int, modifiers: Int) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "MoveCursorDefault", cursorAction as Any, modifiers as Any]) as! QModelIndex }
    public func ConnectResizeColumnToContents(f: @escaping (_ column: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectResizeColumnToContents", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectResizeColumnToContents() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectResizeColumnToContents"]) }
    public func ResizeColumnToContents(column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResizeColumnToContents", column as Any]) }
    public func ResizeColumnToContentsDefault(column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResizeColumnToContentsDefault", column as Any]) }
    public func ConnectResizeColumnsToContents(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectResizeColumnsToContents", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectResizeColumnsToContents() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectResizeColumnsToContents"]) }
    public func ResizeColumnsToContents() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResizeColumnsToContents"]) }
    public func ResizeColumnsToContentsDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResizeColumnsToContentsDefault"]) }
    public func ConnectResizeRowToContents(f: @escaping (_ row: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectResizeRowToContents", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectResizeRowToContents() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectResizeRowToContents"]) }
    public func ResizeRowToContents(row: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResizeRowToContents", row as Any]) }
    public func ResizeRowToContentsDefault(row: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResizeRowToContentsDefault", row as Any]) }
    public func ConnectResizeRowsToContents(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectResizeRowsToContents", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectResizeRowsToContents() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectResizeRowsToContents"]) }
    public func ResizeRowsToContents() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResizeRowsToContents"]) }
    public func ResizeRowsToContentsDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResizeRowsToContentsDefault"]) }
    public func RowAt(y: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "RowAt", y as Any]) as! Float) }
    public func ConnectRowCountChanged(f: @escaping (_ oldCount: Int, _ newCount: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRowCountChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float)) } as Any) }
    public func DisconnectRowCountChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRowCountChanged"]) }
    public func RowCountChanged(oldCount: Int, newCount: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RowCountChanged", oldCount as Any, newCount as Any]) }
    public func RowCountChangedDefault(oldCount: Int, newCount: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RowCountChangedDefault", oldCount as Any, newCount as Any]) }
    public func RowHeight(row: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "RowHeight", row as Any]) as! Float) }
    public func ConnectRowMoved(f: @escaping (_ row: Int, _ oldIndex: Int, _ newIndex: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRowMoved", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float), Int(inp[2] as! Float)) } as Any) }
    public func DisconnectRowMoved() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRowMoved"]) }
    public func RowMoved(row: Int, oldIndex: Int, newIndex: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RowMoved", row as Any, oldIndex as Any, newIndex as Any]) }
    public func RowMovedDefault(row: Int, oldIndex: Int, newIndex: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RowMovedDefault", row as Any, oldIndex as Any, newIndex as Any]) }
    public func ConnectRowResized(f: @escaping (_ row: Int, _ oldHeight: Int, _ newHeight: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRowResized", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float), Int(inp[2] as! Float)) } as Any) }
    public func DisconnectRowResized() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRowResized"]) }
    public func RowResized(row: Int, oldHeight: Int, newHeight: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RowResized", row as Any, oldHeight as Any, newHeight as Any]) }
    public func RowResizedDefault(row: Int, oldHeight: Int, newHeight: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RowResizedDefault", row as Any, oldHeight as Any, newHeight as Any]) }
    public func RowSpan(row: Int, column: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "RowSpan", row as Any, column as Any]) as! Float) }
    public func RowViewportPosition(row: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "RowViewportPosition", row as Any]) as! Float) }
    public func ConnectSelectColumn(f: @escaping (_ column: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSelectColumn", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSelectColumn() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSelectColumn"]) }
    public func SelectColumn(column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SelectColumn", column as Any]) }
    public func SelectColumnDefault(column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SelectColumnDefault", column as Any]) }
    public func ConnectSelectRow(f: @escaping (_ row: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSelectRow", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSelectRow() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSelectRow"]) }
    public func SelectRow(row: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SelectRow", row as Any]) }
    public func SelectRowDefault(row: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SelectRowDefault", row as Any]) }
    override public func ConnectSelectionChanged(f: @escaping (_ selected: QItemSelection, _ deselected: QItemSelection) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSelectionChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QItemSelection, inp[1] as! QItemSelection) } as Any) }
    override public func DisconnectSelectionChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSelectionChanged"]) }
    override public func SelectionChanged(selected: QItemSelection_ITF? = nil, deselected: QItemSelection_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SelectionChanged", selected as Any, deselected as Any]) }
    override public func SelectionChangedDefault(selected: QItemSelection_ITF? = nil, deselected: QItemSelection_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SelectionChangedDefault", selected as Any, deselected as Any]) }
    public func SetColumnHidden(column: Int, hide: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetColumnHidden", column as Any, hide as Any]) }
    public func SetColumnWidth(column: Int, width: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetColumnWidth", column as Any, width as Any]) }
    public func SetCornerButtonEnabled(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCornerButtonEnabled", enable as Any]) }
    public func SetGridStyle(style: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetGridStyle", style as Any]) }
    public func SetHorizontalHeader(header: QHeaderView_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetHorizontalHeader", header as Any]) }
    override public func ConnectSetRootIndex(f: @escaping (_ index: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetRootIndex", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    override public func DisconnectSetRootIndex() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetRootIndex"]) }
    override public func SetRootIndex(index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRootIndex", index as Any]) }
    override public func SetRootIndexDefault(index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRootIndexDefault", index as Any]) }
    public func SetRowHeight(row: Int, height: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRowHeight", row as Any, height as Any]) }
    public func SetRowHidden(row: Int, hide: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRowHidden", row as Any, hide as Any]) }
    override public func ConnectSetSelection(f: @escaping (_ rect: QRect, _ flags: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetSelection", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QRect, Int(inp[1] as! Float)) } as Any) }
    override public func DisconnectSetSelection() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetSelection"]) }
    override public func SetSelection(rect: QRect_ITF? = nil, flags: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSelection", rect as Any, flags as Any]) }
    public func SetSelectionDefault(rect: QRect_ITF? = nil, flags: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSelectionDefault", rect as Any, flags as Any]) }
    public func ConnectSetShowGrid(f: @escaping (_ show: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetShowGrid", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectSetShowGrid() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetShowGrid"]) }
    public func SetShowGrid(show: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetShowGrid", show as Any]) }
    public func SetShowGridDefault(show: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetShowGridDefault", show as Any]) }
    public func SetSortingEnabled(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSortingEnabled", enable as Any]) }
    public func SetSpan(row: Int, column: Int, rowSpanCount: Int, columnSpanCount: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSpan", row as Any, column as Any, rowSpanCount as Any, columnSpanCount as Any]) }
    public func SetVerticalHeader(header: QHeaderView_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetVerticalHeader", header as Any]) }
    public func SetWordWrap(on: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWordWrap", on as Any]) }
    public func ConnectShowColumn(f: @escaping (_ column: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectShowColumn", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectShowColumn() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectShowColumn"]) }
    public func ShowColumn(column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowColumn", column as Any]) }
    public func ShowColumnDefault(column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowColumnDefault", column as Any]) }
    public func ShowGrid() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "ShowGrid"]) as! Bool }
    public func ConnectShowRow(f: @escaping (_ row: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectShowRow", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectShowRow() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectShowRow"]) }
    public func ShowRow(row: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowRow", row as Any]) }
    public func ShowRowDefault(row: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowRowDefault", row as Any]) }
    public func ConnectSortByColumn(f: @escaping (_ column: Int, _ order: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSortByColumn", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float)) } as Any) }
    public func DisconnectSortByColumn() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSortByColumn"]) }
    public func SortByColumn(column: Int, order: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SortByColumn", column as Any, order as Any]) }
    public func SortByColumnDefault(column: Int, order: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SortByColumnDefault", column as Any, order as Any]) }
    override public func ConnectUpdateGeometries(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectUpdateGeometries", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectUpdateGeometries() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectUpdateGeometries"]) }
    override public func UpdateGeometries() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UpdateGeometries"]) }
    override public func UpdateGeometriesDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UpdateGeometriesDefault"]) }
    public func VerticalHeader() -> QHeaderView { callLocalFunction(l: ["", Pointer(), ___className, "VerticalHeader"]) as! QHeaderView }
    override public func ConnectVerticalOffset(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectVerticalOffset", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectVerticalOffset() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectVerticalOffset"]) }
    override public func VerticalOffset() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "VerticalOffset"]) as! Float) }
    public func VerticalOffsetDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "VerticalOffsetDefault"]) as! Float) }
    public func WordWrap() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "WordWrap"]) as! Bool }
    public func ConnectDestroyQTableView(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQTableView", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQTableView() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQTableView"]) }
    public func DestroyQTableView() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQTableView"]) }
    public func DestroyQTableViewDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQTableViewDefault"]) }
    override public func ScrollTo(index: QModelIndex_ITF? = nil, hint: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ScrollTo", index as Any, hint as Any]) }
    public func ScrollToDefault(index: QModelIndex_ITF? = nil, hint: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ScrollToDefault", index as Any, hint as Any]) }
    override public func VisualRect(index: QModelIndex_ITF? = nil) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "VisualRect", index as Any]) as! QRect }
    public func VisualRectDefault(index: QModelIndex_ITF? = nil) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "VisualRectDefault", index as Any]) as! QRect }
    override public func VisualRegionForSelection(selection: QItemSelection_ITF? = nil) -> QRegion { callLocalFunction(l: ["", Pointer(), ___className, "VisualRegionForSelection", selection as Any]) as! QRegion }
    public func VisualRegionForSelectionDefault(selection: QItemSelection_ITF? = nil) -> QRegion { callLocalFunction(l: ["", Pointer(), ___className, "VisualRegionForSelectionDefault", selection as Any]) as! QRegion }
}

public func NewQTableViewFromPointer(ptr: String) -> QTableView { let r = QTableView(); r.initFrom(p: ptr, n: "widgets.QTableView"); return r }
public func NewQTableView(parent: QWidget_ITF? = nil) -> QTableView { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQTableView", "", parent as Any]) as! QTableView }
public protocol QTableWidget_ITF: QTableView_ITF {
    func QTableWidget_PTR() -> QTableWidget
}

public class QTableWidget: QTableView, QTableWidget_ITF {
    public func QTableWidget_PTR() -> QTableWidget { callLocalFunction(l: ["", Pointer(), ___className, "QTableWidget_PTR"]) as! QTableWidget }
    public func ConnectCellActivated(f: @escaping (_ row: Int, _ column: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCellActivated", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float)) } as Any) }
    public func DisconnectCellActivated() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCellActivated"]) }
    public func CellActivated(row: Int, column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CellActivated", row as Any, column as Any]) }
    public func ConnectCellChanged(f: @escaping (_ row: Int, _ column: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCellChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float)) } as Any) }
    public func DisconnectCellChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCellChanged"]) }
    public func CellChanged(row: Int, column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CellChanged", row as Any, column as Any]) }
    public func ConnectCellClicked(f: @escaping (_ row: Int, _ column: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCellClicked", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float)) } as Any) }
    public func DisconnectCellClicked() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCellClicked"]) }
    public func CellClicked(row: Int, column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CellClicked", row as Any, column as Any]) }
    public func ConnectCellDoubleClicked(f: @escaping (_ row: Int, _ column: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCellDoubleClicked", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float)) } as Any) }
    public func DisconnectCellDoubleClicked() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCellDoubleClicked"]) }
    public func CellDoubleClicked(row: Int, column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CellDoubleClicked", row as Any, column as Any]) }
    public func ConnectCellEntered(f: @escaping (_ row: Int, _ column: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCellEntered", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float)) } as Any) }
    public func DisconnectCellEntered() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCellEntered"]) }
    public func CellEntered(row: Int, column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CellEntered", row as Any, column as Any]) }
    public func ConnectCellPressed(f: @escaping (_ row: Int, _ column: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCellPressed", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float)) } as Any) }
    public func DisconnectCellPressed() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCellPressed"]) }
    public func CellPressed(row: Int, column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CellPressed", row as Any, column as Any]) }
    public func CellWidget(row: Int, column: Int) -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "CellWidget", row as Any, column as Any]) as! QWidget }
    public func ConnectClear(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectClear", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectClear() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectClear"]) }
    public func Clear() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Clear"]) }
    public func ClearDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearDefault"]) }
    public func ConnectClearContents(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectClearContents", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectClearContents() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectClearContents"]) }
    public func ClearContents() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearContents"]) }
    public func ClearContentsDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearContentsDefault"]) }
    public func ClosePersistentEditor_QTableView(item: QTableWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClosePersistentEditor", item as Any]) }
    public func Column(item: QTableWidgetItem_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Column", item as Any]) as! Float) }
    public func ColumnCount() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ColumnCount"]) as! Float) }
    public func ConnectCurrentCellChanged(f: @escaping (_ currentRow: Int, _ currentColumn: Int, _ previousRow: Int, _ previousColumn: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCurrentCellChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float), Int(inp[2] as! Float), Int(inp[3] as! Float)) } as Any) }
    public func DisconnectCurrentCellChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCurrentCellChanged"]) }
    public func CurrentCellChanged(currentRow: Int, currentColumn: Int, previousRow: Int, previousColumn: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CurrentCellChanged", currentRow as Any, currentColumn as Any, previousRow as Any, previousColumn as Any]) }
    public func CurrentColumn() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CurrentColumn"]) as! Float) }
    public func CurrentItem() -> QTableWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "CurrentItem"]) as! QTableWidgetItem }
    public func ConnectCurrentItemChanged(f: @escaping (_ current: QTableWidgetItem, _ previous: QTableWidgetItem) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCurrentItemChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QTableWidgetItem, inp[1] as! QTableWidgetItem) } as Any) }
    public func DisconnectCurrentItemChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCurrentItemChanged"]) }
    public func CurrentItemChanged(current: QTableWidgetItem_ITF? = nil, previous: QTableWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CurrentItemChanged", current as Any, previous as Any]) }
    public func CurrentRow() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CurrentRow"]) as! Float) }
    public func ConnectDropMimeData(f: @escaping (_ row: Int, _ column: Int, _ data: QMimeData, _ action: Int) -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDropMimeData", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float), inp[2] as! QMimeData, Int(inp[3] as! Float)) } as Any) }
    public func DisconnectDropMimeData() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDropMimeData"]) }
    public func DropMimeData(row: Int, column: Int, data: QMimeData_ITF? = nil, action: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "DropMimeData", row as Any, column as Any, data as Any, action as Any]) as! Bool }
    public func DropMimeDataDefault(row: Int, column: Int, data: QMimeData_ITF? = nil, action: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "DropMimeDataDefault", row as Any, column as Any, data as Any, action as Any]) as! Bool }
    public func EditItem(item: QTableWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "EditItem", item as Any]) }
    public func FindItems(text: String, flags: Int) -> [QTableWidgetItem] { callLocalFunction(l: ["", Pointer(), ___className, "FindItems", text as Any, flags as Any]) as! [QTableWidgetItem] }
    public func HorizontalHeaderItem(column: Int) -> QTableWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "HorizontalHeaderItem", column as Any]) as! QTableWidgetItem }
    public func IndexFromItem(item: QTableWidgetItem_ITF? = nil) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "IndexFromItem", item as Any]) as! QModelIndex }
    public func ConnectInsertColumn(f: @escaping (_ column: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectInsertColumn", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectInsertColumn() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectInsertColumn"]) }
    public func InsertColumn(column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertColumn", column as Any]) }
    public func InsertColumnDefault(column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertColumnDefault", column as Any]) }
    public func ConnectInsertRow(f: @escaping (_ row: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectInsertRow", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectInsertRow() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectInsertRow"]) }
    public func InsertRow(row: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertRow", row as Any]) }
    public func InsertRowDefault(row: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertRowDefault", row as Any]) }
    public func IsPersistentEditorOpen_QTableView(item: QTableWidgetItem_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsPersistentEditorOpen", item as Any]) as! Bool }
    public func Item(row: Int, column: Int) -> QTableWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "Item", row as Any, column as Any]) as! QTableWidgetItem }
    public func ConnectItemActivated(f: @escaping (_ item: QTableWidgetItem) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectItemActivated", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QTableWidgetItem) } as Any) }
    public func DisconnectItemActivated() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectItemActivated"]) }
    public func ItemActivated(item: QTableWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ItemActivated", item as Any]) }
    public func ItemAt(point: QPoint_ITF? = nil) -> QTableWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "ItemAt", point as Any]) as! QTableWidgetItem }
    public func ItemAt2(ax: Int, ay: Int) -> QTableWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "ItemAt2", ax as Any, ay as Any]) as! QTableWidgetItem }
    public func ConnectItemChanged(f: @escaping (_ item: QTableWidgetItem) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectItemChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QTableWidgetItem) } as Any) }
    public func DisconnectItemChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectItemChanged"]) }
    public func ItemChanged(item: QTableWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ItemChanged", item as Any]) }
    public func ConnectItemClicked(f: @escaping (_ item: QTableWidgetItem) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectItemClicked", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QTableWidgetItem) } as Any) }
    public func DisconnectItemClicked() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectItemClicked"]) }
    public func ItemClicked(item: QTableWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ItemClicked", item as Any]) }
    public func ConnectItemDoubleClicked(f: @escaping (_ item: QTableWidgetItem) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectItemDoubleClicked", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QTableWidgetItem) } as Any) }
    public func DisconnectItemDoubleClicked() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectItemDoubleClicked"]) }
    public func ItemDoubleClicked(item: QTableWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ItemDoubleClicked", item as Any]) }
    public func ConnectItemEntered(f: @escaping (_ item: QTableWidgetItem) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectItemEntered", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QTableWidgetItem) } as Any) }
    public func DisconnectItemEntered() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectItemEntered"]) }
    public func ItemEntered(item: QTableWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ItemEntered", item as Any]) }
    public func ItemFromIndex(index: QModelIndex_ITF? = nil) -> QTableWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "ItemFromIndex", index as Any]) as! QTableWidgetItem }
    public func ConnectItemPressed(f: @escaping (_ item: QTableWidgetItem) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectItemPressed", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QTableWidgetItem) } as Any) }
    public func DisconnectItemPressed() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectItemPressed"]) }
    public func ItemPressed(item: QTableWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ItemPressed", item as Any]) }
    public func ItemPrototype() -> QTableWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "ItemPrototype"]) as! QTableWidgetItem }
    public func ConnectItemSelectionChanged(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectItemSelectionChanged", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectItemSelectionChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectItemSelectionChanged"]) }
    public func ItemSelectionChanged() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ItemSelectionChanged"]) }
    public func Items(data: QMimeData_ITF? = nil) -> [QTableWidgetItem] { callLocalFunction(l: ["", Pointer(), ___className, "Items", data as Any]) as! [QTableWidgetItem] }
    public func ConnectMimeData(f: @escaping (_ items: [QTableWidgetItem]) -> QMimeData) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMimeData", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! [QTableWidgetItem]) } as Any) }
    public func DisconnectMimeData() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMimeData"]) }
    public func MimeData(items: [QTableWidgetItem]) -> QMimeData { callLocalFunction(l: ["", Pointer(), ___className, "MimeData", items as Any]) as! QMimeData }
    public func MimeDataDefault(items: [QTableWidgetItem]) -> QMimeData { callLocalFunction(l: ["", Pointer(), ___className, "MimeDataDefault", items as Any]) as! QMimeData }
    public func ConnectMimeTypes(f: @escaping () -> [String]) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMimeTypes", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectMimeTypes() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMimeTypes"]) }
    public func MimeTypes() -> [String] { callLocalFunction(l: ["", Pointer(), ___className, "MimeTypes"]) as! [String] }
    public func MimeTypesDefault() -> [String] { callLocalFunction(l: ["", Pointer(), ___className, "MimeTypesDefault"]) as! [String] }
    public func OpenPersistentEditor_QTableView(item: QTableWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "OpenPersistentEditor", item as Any]) }
    public func RemoveCellWidget(row: Int, column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveCellWidget", row as Any, column as Any]) }
    public func ConnectRemoveColumn(f: @escaping (_ column: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRemoveColumn", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectRemoveColumn() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRemoveColumn"]) }
    public func RemoveColumn(column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveColumn", column as Any]) }
    public func RemoveColumnDefault(column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveColumnDefault", column as Any]) }
    public func ConnectRemoveRow(f: @escaping (_ row: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRemoveRow", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectRemoveRow() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRemoveRow"]) }
    public func RemoveRow(row: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveRow", row as Any]) }
    public func RemoveRowDefault(row: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveRowDefault", row as Any]) }
    public func Row(item: QTableWidgetItem_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Row", item as Any]) as! Float) }
    public func RowCount() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "RowCount"]) as! Float) }
    public func ConnectScrollToItem(f: @escaping (_ item: QTableWidgetItem, _ hint: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectScrollToItem", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QTableWidgetItem, Int(inp[1] as! Float)) } as Any) }
    public func DisconnectScrollToItem() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectScrollToItem"]) }
    public func ScrollToItem(item: QTableWidgetItem_ITF? = nil, hint: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ScrollToItem", item as Any, hint as Any]) }
    public func ScrollToItemDefault(item: QTableWidgetItem_ITF? = nil, hint: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ScrollToItemDefault", item as Any, hint as Any]) }
    public func SelectedItems() -> [QTableWidgetItem] { callLocalFunction(l: ["", Pointer(), ___className, "SelectedItems"]) as! [QTableWidgetItem] }
    public func SelectedRanges() -> [QTableWidgetSelectionRange] { callLocalFunction(l: ["", Pointer(), ___className, "SelectedRanges"]) as! [QTableWidgetSelectionRange] }
    public func SetCellWidget(row: Int, column: Int, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCellWidget", row as Any, column as Any, widget as Any]) }
    public func SetColumnCount(columns: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetColumnCount", columns as Any]) }
    public func SetCurrentCell(row: Int, column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentCell", row as Any, column as Any]) }
    public func SetCurrentCell2(row: Int, column: Int, command: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentCell2", row as Any, column as Any, command as Any]) }
    public func SetCurrentItem(item: QTableWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentItem", item as Any]) }
    public func SetCurrentItem2(item: QTableWidgetItem_ITF? = nil, command: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentItem2", item as Any, command as Any]) }
    public func SetHorizontalHeaderItem(column: Int, item: QTableWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetHorizontalHeaderItem", column as Any, item as Any]) }
    public func SetHorizontalHeaderLabels(labels: [String]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetHorizontalHeaderLabels", labels as Any]) }
    public func SetItem(row: Int, column: Int, item: QTableWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetItem", row as Any, column as Any, item as Any]) }
    public func SetItemPrototype(item: QTableWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetItemPrototype", item as Any]) }
    public func SetRangeSelected(ran: QTableWidgetSelectionRange_ITF? = nil, sele: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRangeSelected", ran as Any, sele as Any]) }
    public func SetRowCount(rows: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRowCount", rows as Any]) }
    public func SetVerticalHeaderItem(row: Int, item: QTableWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetVerticalHeaderItem", row as Any, item as Any]) }
    public func SetVerticalHeaderLabels(labels: [String]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetVerticalHeaderLabels", labels as Any]) }
    public func SortItems(column: Int, order: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SortItems", column as Any, order as Any]) }
    public func ConnectSupportedDropActions(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSupportedDropActions", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectSupportedDropActions() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSupportedDropActions"]) }
    public func SupportedDropActions() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SupportedDropActions"]) as! Float) }
    public func SupportedDropActionsDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SupportedDropActionsDefault"]) as! Float) }
    public func TakeHorizontalHeaderItem(column: Int) -> QTableWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "TakeHorizontalHeaderItem", column as Any]) as! QTableWidgetItem }
    public func TakeItem(row: Int, column: Int) -> QTableWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "TakeItem", row as Any, column as Any]) as! QTableWidgetItem }
    public func TakeVerticalHeaderItem(row: Int) -> QTableWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "TakeVerticalHeaderItem", row as Any]) as! QTableWidgetItem }
    public func VerticalHeaderItem(row: Int) -> QTableWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "VerticalHeaderItem", row as Any]) as! QTableWidgetItem }
    public func VisualColumn(logicalColumn: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "VisualColumn", logicalColumn as Any]) as! Float) }
    public func VisualItemRect(item: QTableWidgetItem_ITF? = nil) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "VisualItemRect", item as Any]) as! QRect }
    public func VisualRow(logicalRow: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "VisualRow", logicalRow as Any]) as! Float) }
    public func ConnectDestroyQTableWidget(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQTableWidget", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQTableWidget() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQTableWidget"]) }
    public func DestroyQTableWidget() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQTableWidget"]) }
    public func DestroyQTableWidgetDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQTableWidgetDefault"]) }
}

public func NewQTableWidgetFromPointer(ptr: String) -> QTableWidget { let r = QTableWidget(); r.initFrom(p: ptr, n: "widgets.QTableWidget"); return r }
public func NewQTableWidget(parent: QWidget_ITF? = nil) -> QTableWidget { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQTableWidget", "", parent as Any]) as! QTableWidget }
public func NewQTableWidget2(rows: Int, columns: Int, parent: QWidget_ITF? = nil) -> QTableWidget { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQTableWidget2", "", rows as Any, columns as Any, parent as Any]) as! QTableWidget }
public protocol QTableWidgetItem_ITF {
    func QTableWidgetItem_PTR() -> QTableWidgetItem
}

public class QTableWidgetItem: Internal, QTableWidgetItem_ITF {
    public func QTableWidgetItem_PTR() -> QTableWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "QTableWidgetItem_PTR"]) as! QTableWidgetItem }
    public func Background() -> QBrush { callLocalFunction(l: ["", Pointer(), ___className, "Background"]) as! QBrush }
    public func CheckState() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CheckState"]) as! Float) }
    public func ConnectClone(f: @escaping () -> QTableWidgetItem) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectClone", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectClone() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectClone"]) }
    public func Clone() -> QTableWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "Clone"]) as! QTableWidgetItem }
    public func CloneDefault() -> QTableWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "CloneDefault"]) as! QTableWidgetItem }
    public func Column() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Column"]) as! Float) }
    public func ConnectData(f: @escaping (_ role: Int) -> QVariant) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectData", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectData() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectData"]) }
    public func Data(role: Int) -> QVariant { callLocalFunction(l: ["", Pointer(), ___className, "Data", role as Any]) as! QVariant }
    public func DataDefault(role: Int) -> QVariant { callLocalFunction(l: ["", Pointer(), ___className, "DataDefault", role as Any]) as! QVariant }
    public func Flags() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Flags"]) as! Float) }
    public func Font() -> QFont { callLocalFunction(l: ["", Pointer(), ___className, "Font"]) as! QFont }
    public func Foreground() -> QBrush { callLocalFunction(l: ["", Pointer(), ___className, "Foreground"]) as! QBrush }
    public func Icon() -> QIcon { callLocalFunction(l: ["", Pointer(), ___className, "Icon"]) as! QIcon }
    public func IsSelected() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsSelected"]) as! Bool }
    public func ConnectRead(f: @escaping (_ i: QDataStream) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRead", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QDataStream) } as Any) }
    public func DisconnectRead() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRead"]) }
    public func Read(i: QDataStream_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Read", i as Any]) }
    public func ReadDefault(i: QDataStream_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ReadDefault", i as Any]) }
    public func Row() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Row"]) as! Float) }
    public func SetBackground(brush: QBrush_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetBackground", brush as Any]) }
    public func SetCheckState(state: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCheckState", state as Any]) }
    public func ConnectSetData(f: @escaping (_ role: Int, _ value: QVariant) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetData", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! QVariant) } as Any) }
    public func DisconnectSetData() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetData"]) }
    public func SetData(role: Int, value: QVariant_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetData", role as Any, value as Any]) }
    public func SetDataDefault(role: Int, value: QVariant_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDataDefault", role as Any, value as Any]) }
    public func SetFlags(flags: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFlags", flags as Any]) }
    public func SetFont(font: QFont_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFont", font as Any]) }
    public func SetForeground(brush: QBrush_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetForeground", brush as Any]) }
    public func SetIcon(icon: QIcon_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIcon", icon as Any]) }
    public func SetSelected(sele: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSelected", sele as Any]) }
    public func SetSizeHint(size: QSize_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSizeHint", size as Any]) }
    public func SetStatusTip(statusTip: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStatusTip", statusTip as Any]) }
    public func SetText(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetText", text as Any]) }
    public func SetTextAlignment(alignment: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTextAlignment", alignment as Any]) }
    public func SetToolTip(toolTip: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetToolTip", toolTip as Any]) }
    public func SetWhatsThis(whatsThis: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWhatsThis", whatsThis as Any]) }
    public func SizeHint() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "SizeHint"]) as! QSize }
    public func StatusTip() -> String { callLocalFunction(l: ["", Pointer(), ___className, "StatusTip"]) as! String }
    public func TableWidget() -> QTableWidget { callLocalFunction(l: ["", Pointer(), ___className, "TableWidget"]) as! QTableWidget }
    public func Text() -> String { callLocalFunction(l: ["", Pointer(), ___className, "Text"]) as! String }
    public func TextAlignment() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TextAlignment"]) as! Float) }
    public func ToolTip() -> String { callLocalFunction(l: ["", Pointer(), ___className, "ToolTip"]) as! String }
    public func Type() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Type"]) as! Float) }
    public func WhatsThis() -> String { callLocalFunction(l: ["", Pointer(), ___className, "WhatsThis"]) as! String }
    public func ConnectWrite(f: @escaping (_ out: QDataStream) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectWrite", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QDataStream) } as Any) }
    public func DisconnectWrite() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectWrite"]) }
    public func Write(out: QDataStream_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Write", out as Any]) }
    public func WriteDefault(out: QDataStream_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "WriteDefault", out as Any]) }
    public func ConnectDestroyQTableWidgetItem(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQTableWidgetItem", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQTableWidgetItem() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQTableWidgetItem"]) }
    public func DestroyQTableWidgetItem() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQTableWidgetItem"]) }
    public func DestroyQTableWidgetItemDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQTableWidgetItemDefault"]) }
}

public func NewQTableWidgetItemFromPointer(ptr: String) -> QTableWidgetItem { let r = QTableWidgetItem(); r.initFrom(p: ptr, n: "widgets.QTableWidgetItem"); return r }
public func NewQTableWidgetItem(ty: Int) -> QTableWidgetItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQTableWidgetItem", "", ty as Any]) as! QTableWidgetItem }
public func NewQTableWidgetItem2(text: String, ty: Int) -> QTableWidgetItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQTableWidgetItem2", "", text as Any, ty as Any]) as! QTableWidgetItem }
public func NewQTableWidgetItem3(icon: QIcon_ITF? = nil, text: String, ty: Int) -> QTableWidgetItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQTableWidgetItem3", "", icon as Any, text as Any, ty as Any]) as! QTableWidgetItem }
public func NewQTableWidgetItem4(other: QTableWidgetItem_ITF? = nil) -> QTableWidgetItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQTableWidgetItem4", "", other as Any]) as! QTableWidgetItem }
public protocol QTableWidgetSelectionRange_ITF {
    func QTableWidgetSelectionRange_PTR() -> QTableWidgetSelectionRange
}

public class QTableWidgetSelectionRange: Internal, QTableWidgetSelectionRange_ITF {
    public func QTableWidgetSelectionRange_PTR() -> QTableWidgetSelectionRange { callLocalFunction(l: ["", Pointer(), ___className, "QTableWidgetSelectionRange_PTR"]) as! QTableWidgetSelectionRange }
    public func BottomRow() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "BottomRow"]) as! Float) }
    public func ColumnCount() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ColumnCount"]) as! Float) }
    public func LeftColumn() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "LeftColumn"]) as! Float) }
    public func RightColumn() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "RightColumn"]) as! Float) }
    public func RowCount() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "RowCount"]) as! Float) }
    public func TopRow() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TopRow"]) as! Float) }
    public func DestroyQTableWidgetSelectionRange() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQTableWidgetSelectionRange"]) }
}

public func NewQTableWidgetSelectionRangeFromPointer(ptr: String) -> QTableWidgetSelectionRange { let r = QTableWidgetSelectionRange(); r.initFrom(p: ptr, n: "widgets.QTableWidgetSelectionRange"); return r }
public func NewQTableWidgetSelectionRange() -> QTableWidgetSelectionRange { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQTableWidgetSelectionRange", ""]) as! QTableWidgetSelectionRange }
public func NewQTableWidgetSelectionRange2(top: Int, left: Int, bottom: Int, right: Int) -> QTableWidgetSelectionRange { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQTableWidgetSelectionRange2", "", top as Any, left as Any, bottom as Any, right as Any]) as! QTableWidgetSelectionRange }
public func NewQTableWidgetSelectionRange3(other: QTableWidgetSelectionRange_ITF? = nil) -> QTableWidgetSelectionRange { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQTableWidgetSelectionRange3", "", other as Any]) as! QTableWidgetSelectionRange }
public protocol QTapAndHoldGesture_ITF: QGesture_ITF {
    func QTapAndHoldGesture_PTR() -> QTapAndHoldGesture
}

public class QTapAndHoldGesture: QGesture, QTapAndHoldGesture_ITF {
    public func QTapAndHoldGesture_PTR() -> QTapAndHoldGesture { callLocalFunction(l: ["", Pointer(), ___className, "QTapAndHoldGesture_PTR"]) as! QTapAndHoldGesture }
    public func Position() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "Position"]) as! QPointF }
    public func SetPosition(pos: QPointF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPosition", pos as Any]) }
    public func SetTimeout(msecs: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTimeout", msecs as Any]) }
    public func Timeout() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Timeout"]) as! Float) }
    public func ConnectDestroyQTapAndHoldGesture(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQTapAndHoldGesture", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQTapAndHoldGesture() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQTapAndHoldGesture"]) }
    public func DestroyQTapAndHoldGesture() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQTapAndHoldGesture"]) }
    public func DestroyQTapAndHoldGestureDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQTapAndHoldGestureDefault"]) }
}

public func NewQTapAndHoldGestureFromPointer(ptr: String) -> QTapAndHoldGesture { let r = QTapAndHoldGesture(); r.initFrom(p: ptr, n: "widgets.QTapAndHoldGesture"); return r }
public func QTapAndHoldGesture_SetTimeout(msecs: Int) { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QTapAndHoldGesture_SetTimeout", "", msecs as Any]) }
public func QTapAndHoldGesture_Timeout() -> Int { Widgets.initModule(); return Int(callLocalFunction(l: ["", "", "widgets.QTapAndHoldGesture_Timeout", ""]) as! Float) }
public protocol QTapGesture_ITF: QGesture_ITF {
    func QTapGesture_PTR() -> QTapGesture
}

public class QTapGesture: QGesture, QTapGesture_ITF {
    public func QTapGesture_PTR() -> QTapGesture { callLocalFunction(l: ["", Pointer(), ___className, "QTapGesture_PTR"]) as! QTapGesture }
    public func Position() -> QPointF { callLocalFunction(l: ["", Pointer(), ___className, "Position"]) as! QPointF }
    public func SetPosition(pos: QPointF_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPosition", pos as Any]) }
    public func ConnectDestroyQTapGesture(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQTapGesture", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQTapGesture() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQTapGesture"]) }
    public func DestroyQTapGesture() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQTapGesture"]) }
    public func DestroyQTapGestureDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQTapGestureDefault"]) }
}

public func NewQTapGestureFromPointer(ptr: String) -> QTapGesture { let r = QTapGesture(); r.initFrom(p: ptr, n: "widgets.QTapGesture"); return r }
public protocol QTextBrowser_ITF: QTextEdit_ITF {
    func QTextBrowser_PTR() -> QTextBrowser
}

public class QTextBrowser: QTextEdit, QTextBrowser_ITF {
    public func QTextBrowser_PTR() -> QTextBrowser { callLocalFunction(l: ["", Pointer(), ___className, "QTextBrowser_PTR"]) as! QTextBrowser }
    public func ConnectAnchorClicked(f: @escaping (_ link: QUrl) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectAnchorClicked", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QUrl) } as Any) }
    public func DisconnectAnchorClicked() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectAnchorClicked"]) }
    public func AnchorClicked(link: QUrl_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AnchorClicked", link as Any]) }
    public func ConnectBackward(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectBackward", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectBackward() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectBackward"]) }
    public func Backward() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Backward"]) }
    public func BackwardDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "BackwardDefault"]) }
    public func ConnectBackwardAvailable(f: @escaping (_ available: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectBackwardAvailable", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectBackwardAvailable() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectBackwardAvailable"]) }
    public func BackwardAvailable(available: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "BackwardAvailable", available as Any]) }
    public func BackwardHistoryCount() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "BackwardHistoryCount"]) as! Float) }
    public func ClearHistory() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearHistory"]) }
    public func ConnectForward(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectForward", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectForward() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectForward"]) }
    public func Forward() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Forward"]) }
    public func ForwardDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ForwardDefault"]) }
    public func ConnectForwardAvailable(f: @escaping (_ available: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectForwardAvailable", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectForwardAvailable() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectForwardAvailable"]) }
    public func ForwardAvailable(available: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ForwardAvailable", available as Any]) }
    public func ForwardHistoryCount() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ForwardHistoryCount"]) as! Float) }
    public func ConnectHighlighted(f: @escaping (_ link: QUrl) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHighlighted", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QUrl) } as Any) }
    public func DisconnectHighlighted() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHighlighted"]) }
    public func Highlighted(link: QUrl_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Highlighted", link as Any]) }
    public func ConnectHighlighted2(f: @escaping (_ link: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHighlighted2", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectHighlighted2() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHighlighted2"]) }
    public func Highlighted2(link: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Highlighted2", link as Any]) }
    public func ConnectHistoryChanged(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHistoryChanged", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectHistoryChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHistoryChanged"]) }
    public func HistoryChanged() { _ = callLocalFunction(l: ["", Pointer(), ___className, "HistoryChanged"]) }
    public func HistoryTitle(i: Int) -> String { callLocalFunction(l: ["", Pointer(), ___className, "HistoryTitle", i as Any]) as! String }
    public func HistoryUrl(i: Int) -> QUrl { callLocalFunction(l: ["", Pointer(), ___className, "HistoryUrl", i as Any]) as! QUrl }
    public func ConnectHome(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHome", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectHome() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHome"]) }
    public func Home() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Home"]) }
    public func HomeDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "HomeDefault"]) }
    public func IsBackwardAvailable() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsBackwardAvailable"]) as! Bool }
    public func IsForwardAvailable() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsForwardAvailable"]) as! Bool }
    public func OpenExternalLinks() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "OpenExternalLinks"]) as! Bool }
    public func OpenLinks() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "OpenLinks"]) as! Bool }
    public func ConnectReload(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectReload", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectReload() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectReload"]) }
    public func Reload() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Reload"]) }
    public func ReloadDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ReloadDefault"]) }
    public func SearchPaths() -> [String] { callLocalFunction(l: ["", Pointer(), ___className, "SearchPaths"]) as! [String] }
    public func SetOpenExternalLinks(open: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOpenExternalLinks", open as Any]) }
    public func SetOpenLinks(open: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOpenLinks", open as Any]) }
    public func SetSearchPaths(paths: [String]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSearchPaths", paths as Any]) }
    public func ConnectSetSource(f: @escaping (_ name: QUrl) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetSource", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QUrl) } as Any) }
    public func DisconnectSetSource() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetSource"]) }
    public func SetSource(name: QUrl_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSource", name as Any]) }
    public func SetSourceDefault(name: QUrl_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSourceDefault", name as Any]) }
    public func Source() -> QUrl { callLocalFunction(l: ["", Pointer(), ___className, "Source"]) as! QUrl }
    public func ConnectSourceChanged(f: @escaping (_ src: QUrl) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSourceChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QUrl) } as Any) }
    public func DisconnectSourceChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSourceChanged"]) }
    public func SourceChanged(src: QUrl_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SourceChanged", src as Any]) }
    override public func IsReadOnly() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsReadOnly"]) as! Bool }
    override public func SetReadOnly(ro: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetReadOnly", ro as Any]) }
    override public func IsUndoRedoEnabled() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsUndoRedoEnabled"]) as! Bool }
    override public func SetUndoRedoEnabled(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetUndoRedoEnabled", enable as Any]) }
}

public func NewQTextBrowserFromPointer(ptr: String) -> QTextBrowser { let r = QTextBrowser(); r.initFrom(p: ptr, n: "widgets.QTextBrowser"); return r }
public func NewQTextBrowser(parent: QWidget_ITF? = nil) -> QTextBrowser { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQTextBrowser", "", parent as Any]) as! QTextBrowser }
public protocol QTextEdit_ITF: QAbstractScrollArea_ITF {
    func QTextEdit_PTR() -> QTextEdit
}

public class QTextEdit: QAbstractScrollArea, QTextEdit_ITF {
    public func QTextEdit_PTR() -> QTextEdit { callLocalFunction(l: ["", Pointer(), ___className, "QTextEdit_PTR"]) as! QTextEdit }
    public func AcceptRichText() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "AcceptRichText"]) as! Bool }
    public func Alignment() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Alignment"]) as! Float) }
    public func AnchorAt(pos: QPoint_ITF? = nil) -> String { callLocalFunction(l: ["", Pointer(), ___className, "AnchorAt", pos as Any]) as! String }
    public func ConnectAppend(f: @escaping (_ text: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectAppend", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectAppend() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectAppend"]) }
    public func Append(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Append", text as Any]) }
    public func AppendDefault(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AppendDefault", text as Any]) }
    public func AutoFormatting() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "AutoFormatting"]) as! Float) }
    public func ConnectCanInsertFromMimeData(f: @escaping (_ source: QMimeData) -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCanInsertFromMimeData", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QMimeData) } as Any) }
    public func DisconnectCanInsertFromMimeData() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCanInsertFromMimeData"]) }
    public func CanInsertFromMimeData(source: QMimeData_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "CanInsertFromMimeData", source as Any]) as! Bool }
    public func CanInsertFromMimeDataDefault(source: QMimeData_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "CanInsertFromMimeDataDefault", source as Any]) as! Bool }
    public func CanPaste() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "CanPaste"]) as! Bool }
    public func ConnectClear(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectClear", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectClear() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectClear"]) }
    public func Clear() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Clear"]) }
    public func ClearDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearDefault"]) }
    public func ConnectCopy(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCopy", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectCopy() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCopy"]) }
    public func Copy() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Copy"]) }
    public func CopyDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "CopyDefault"]) }
    public func ConnectCopyAvailable(f: @escaping (_ yes: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCopyAvailable", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectCopyAvailable() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCopyAvailable"]) }
    public func CopyAvailable(yes: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CopyAvailable", yes as Any]) }
    public func ConnectCreateMimeDataFromSelection(f: @escaping () -> QMimeData) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCreateMimeDataFromSelection", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectCreateMimeDataFromSelection() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCreateMimeDataFromSelection"]) }
    public func CreateMimeDataFromSelection() -> QMimeData { callLocalFunction(l: ["", Pointer(), ___className, "CreateMimeDataFromSelection"]) as! QMimeData }
    public func CreateMimeDataFromSelectionDefault() -> QMimeData { callLocalFunction(l: ["", Pointer(), ___className, "CreateMimeDataFromSelectionDefault"]) as! QMimeData }
    public func CreateStandardContextMenu() -> QMenu { callLocalFunction(l: ["", Pointer(), ___className, "CreateStandardContextMenu"]) as! QMenu }
    public func CreateStandardContextMenu2(position: QPoint_ITF? = nil) -> QMenu { callLocalFunction(l: ["", Pointer(), ___className, "CreateStandardContextMenu2", position as Any]) as! QMenu }
    public func CurrentCharFormat() -> QTextCharFormat { callLocalFunction(l: ["", Pointer(), ___className, "CurrentCharFormat"]) as! QTextCharFormat }
    public func ConnectCurrentCharFormatChanged(f: @escaping (_ ff: QTextCharFormat) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCurrentCharFormatChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QTextCharFormat) } as Any) }
    public func DisconnectCurrentCharFormatChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCurrentCharFormatChanged"]) }
    public func CurrentCharFormatChanged(ff: QTextCharFormat_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CurrentCharFormatChanged", ff as Any]) }
    public func CurrentFont() -> QFont { callLocalFunction(l: ["", Pointer(), ___className, "CurrentFont"]) as! QFont }
    public func CursorForPosition(pos: QPoint_ITF? = nil) -> QTextCursor { callLocalFunction(l: ["", Pointer(), ___className, "CursorForPosition", pos as Any]) as! QTextCursor }
    public func ConnectCursorPositionChanged(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCursorPositionChanged", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectCursorPositionChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCursorPositionChanged"]) }
    public func CursorPositionChanged() { _ = callLocalFunction(l: ["", Pointer(), ___className, "CursorPositionChanged"]) }
    public func CursorRect(cursor: QTextCursor_ITF? = nil) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "CursorRect", cursor as Any]) as! QRect }
    public func CursorRect2() -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "CursorRect2"]) as! QRect }
    public func CursorWidth() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CursorWidth"]) as! Float) }
    public func ConnectCut(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCut", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectCut() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCut"]) }
    public func Cut() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Cut"]) }
    public func CutDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "CutDefault"]) }
    public func Document() -> QTextDocument { callLocalFunction(l: ["", Pointer(), ___className, "Document"]) as! QTextDocument }
    public func DocumentTitle() -> String { callLocalFunction(l: ["", Pointer(), ___className, "DocumentTitle"]) as! String }
    public func EnsureCursorVisible() { _ = callLocalFunction(l: ["", Pointer(), ___className, "EnsureCursorVisible"]) }
    public func Find_QFrame(exp: String, options: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "Find", exp as Any, options as Any]) as! Bool }
    public func Find2(exp: QRegExp_ITF? = nil, options: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "Find2", exp as Any, options as Any]) as! Bool }
    public func Find3(exp: QRegularExpression_ITF? = nil, options: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "Find3", exp as Any, options as Any]) as! Bool }
    public func FontFamily() -> String { callLocalFunction(l: ["", Pointer(), ___className, "FontFamily"]) as! String }
    public func FontItalic() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "FontItalic"]) as! Bool }
    public func FontPointSize() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "FontPointSize"]) as! Float }
    public func FontUnderline() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "FontUnderline"]) as! Bool }
    public func FontWeight() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "FontWeight"]) as! Float) }
    public func ConnectInsertFromMimeData(f: @escaping (_ source: QMimeData) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectInsertFromMimeData", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QMimeData) } as Any) }
    public func DisconnectInsertFromMimeData() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectInsertFromMimeData"]) }
    public func InsertFromMimeData(source: QMimeData_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertFromMimeData", source as Any]) }
    public func InsertFromMimeDataDefault(source: QMimeData_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertFromMimeDataDefault", source as Any]) }
    public func ConnectInsertHtml(f: @escaping (_ text: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectInsertHtml", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectInsertHtml() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectInsertHtml"]) }
    public func InsertHtml(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertHtml", text as Any]) }
    public func InsertHtmlDefault(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertHtmlDefault", text as Any]) }
    public func ConnectInsertPlainText(f: @escaping (_ text: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectInsertPlainText", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectInsertPlainText() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectInsertPlainText"]) }
    public func InsertPlainText(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertPlainText", text as Any]) }
    public func InsertPlainTextDefault(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertPlainTextDefault", text as Any]) }
    public func IsReadOnly() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsReadOnly"]) as! Bool }
    public func IsUndoRedoEnabled() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsUndoRedoEnabled"]) as! Bool }
    public func LineWrapColumnOrWidth() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "LineWrapColumnOrWidth"]) as! Float) }
    public func LineWrapMode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "LineWrapMode"]) as! Float) }
    public func ConnectLoadResource(f: @escaping (_ ty: Int, _ name: QUrl) -> QVariant) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectLoadResource", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), inp[1] as! QUrl) } as Any) }
    public func DisconnectLoadResource() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectLoadResource"]) }
    public func LoadResource(ty: Int, name: QUrl_ITF? = nil) -> QVariant { callLocalFunction(l: ["", Pointer(), ___className, "LoadResource", ty as Any, name as Any]) as! QVariant }
    public func LoadResourceDefault(ty: Int, name: QUrl_ITF? = nil) -> QVariant { callLocalFunction(l: ["", Pointer(), ___className, "LoadResourceDefault", ty as Any, name as Any]) as! QVariant }
    public func MergeCurrentCharFormat(modifier: QTextCharFormat_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MergeCurrentCharFormat", modifier as Any]) }
    public func MoveCursor(operation: Int, mode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MoveCursor", operation as Any, mode as Any]) }
    public func OverwriteMode() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "OverwriteMode"]) as! Bool }
    public func ConnectPaste(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPaste", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectPaste() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPaste"]) }
    public func Paste() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Paste"]) }
    public func PasteDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "PasteDefault"]) }
    public func PlaceholderText() -> String { callLocalFunction(l: ["", Pointer(), ___className, "PlaceholderText"]) as! String }
    public func Print(printer: QPagedPaintDevice_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Print", printer as Any]) }
    public func ConnectRedo(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRedo", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectRedo() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRedo"]) }
    public func Redo() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Redo"]) }
    public func RedoDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "RedoDefault"]) }
    public func ConnectRedoAvailable(f: @escaping (_ available: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRedoAvailable", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectRedoAvailable() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRedoAvailable"]) }
    public func RedoAvailable(available: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RedoAvailable", available as Any]) }
    public func ConnectScrollToAnchor(f: @escaping (_ name: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectScrollToAnchor", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectScrollToAnchor() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectScrollToAnchor"]) }
    public func ScrollToAnchor(name: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ScrollToAnchor", name as Any]) }
    public func ScrollToAnchorDefault(name: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ScrollToAnchorDefault", name as Any]) }
    public func ConnectSelectAll(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSelectAll", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectSelectAll() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSelectAll"]) }
    public func SelectAll() { _ = callLocalFunction(l: ["", Pointer(), ___className, "SelectAll"]) }
    public func SelectAllDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "SelectAllDefault"]) }
    public func ConnectSelectionChanged(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSelectionChanged", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectSelectionChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSelectionChanged"]) }
    public func SelectionChanged() { _ = callLocalFunction(l: ["", Pointer(), ___className, "SelectionChanged"]) }
    public func SetAcceptRichText(accept: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAcceptRichText", accept as Any]) }
    public func ConnectSetAlignment(f: @escaping (_ a: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetAlignment", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSetAlignment() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetAlignment"]) }
    public func SetAlignment(a: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAlignment", a as Any]) }
    public func SetAlignmentDefault(a: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAlignmentDefault", a as Any]) }
    public func SetAutoFormatting(features: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAutoFormatting", features as Any]) }
    public func SetCurrentCharFormat(format: QTextCharFormat_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentCharFormat", format as Any]) }
    public func ConnectSetCurrentFont(f: @escaping (_ ff: QFont) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetCurrentFont", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QFont) } as Any) }
    public func DisconnectSetCurrentFont() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetCurrentFont"]) }
    public func SetCurrentFont(ff: QFont_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentFont", ff as Any]) }
    public func SetCurrentFontDefault(ff: QFont_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentFontDefault", ff as Any]) }
    public func SetCursorWidth(width: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCursorWidth", width as Any]) }
    public func SetDocument(document: QTextDocument_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDocument", document as Any]) }
    public func SetDocumentTitle(title: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDocumentTitle", title as Any]) }
    public func ConnectSetFontFamily(f: @escaping (_ fontFamily: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetFontFamily", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectSetFontFamily() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetFontFamily"]) }
    public func SetFontFamily(fontFamily: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFontFamily", fontFamily as Any]) }
    public func SetFontFamilyDefault(fontFamily: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFontFamilyDefault", fontFamily as Any]) }
    public func ConnectSetFontItalic(f: @escaping (_ italic: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetFontItalic", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectSetFontItalic() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetFontItalic"]) }
    public func SetFontItalic(italic: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFontItalic", italic as Any]) }
    public func SetFontItalicDefault(italic: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFontItalicDefault", italic as Any]) }
    public func ConnectSetFontPointSize(f: @escaping (_ s: Float) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetFontPointSize", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Float) } as Any) }
    public func DisconnectSetFontPointSize() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetFontPointSize"]) }
    public func SetFontPointSize(s: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFontPointSize", s as Any]) }
    public func SetFontPointSizeDefault(s: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFontPointSizeDefault", s as Any]) }
    public func ConnectSetFontUnderline(f: @escaping (_ underline: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetFontUnderline", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectSetFontUnderline() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetFontUnderline"]) }
    public func SetFontUnderline(underline: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFontUnderline", underline as Any]) }
    public func SetFontUnderlineDefault(underline: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFontUnderlineDefault", underline as Any]) }
    public func ConnectSetFontWeight(f: @escaping (_ weight: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetFontWeight", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSetFontWeight() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetFontWeight"]) }
    public func SetFontWeight(weight: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFontWeight", weight as Any]) }
    public func SetFontWeightDefault(weight: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFontWeightDefault", weight as Any]) }
    public func ConnectSetHtml(f: @escaping (_ text: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetHtml", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectSetHtml() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetHtml"]) }
    public func SetHtml(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetHtml", text as Any]) }
    public func SetHtmlDefault(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetHtmlDefault", text as Any]) }
    public func SetLineWrapColumnOrWidth(w: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetLineWrapColumnOrWidth", w as Any]) }
    public func SetLineWrapMode(mode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetLineWrapMode", mode as Any]) }
    public func SetOverwriteMode(overwrite: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOverwriteMode", overwrite as Any]) }
    public func SetPlaceholderText(placeholderText: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPlaceholderText", placeholderText as Any]) }
    public func ConnectSetPlainText(f: @escaping (_ text: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetPlainText", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectSetPlainText() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetPlainText"]) }
    public func SetPlainText(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPlainText", text as Any]) }
    public func SetPlainTextDefault(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPlainTextDefault", text as Any]) }
    public func SetReadOnly(ro: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetReadOnly", ro as Any]) }
    public func SetTabChangesFocus(b: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabChangesFocus", b as Any]) }
    public func SetTabStopDistance(distance: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabStopDistance", distance as Any]) }
    public func SetTabStopWidth(width: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabStopWidth", width as Any]) }
    public func ConnectSetText(f: @escaping (_ text: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetText", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectSetText() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetText"]) }
    public func SetText(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetText", text as Any]) }
    public func SetTextDefault(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTextDefault", text as Any]) }
    public func ConnectSetTextBackgroundColor(f: @escaping (_ c: QColor) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetTextBackgroundColor", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QColor) } as Any) }
    public func DisconnectSetTextBackgroundColor() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetTextBackgroundColor"]) }
    public func SetTextBackgroundColor(c: QColor_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTextBackgroundColor", c as Any]) }
    public func SetTextBackgroundColorDefault(c: QColor_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTextBackgroundColorDefault", c as Any]) }
    public func ConnectSetTextColor(f: @escaping (_ c: QColor) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetTextColor", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QColor) } as Any) }
    public func DisconnectSetTextColor() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetTextColor"]) }
    public func SetTextColor(c: QColor_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTextColor", c as Any]) }
    public func SetTextColorDefault(c: QColor_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTextColorDefault", c as Any]) }
    public func SetTextCursor(cursor: QTextCursor_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTextCursor", cursor as Any]) }
    public func SetTextInteractionFlags(flags: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTextInteractionFlags", flags as Any]) }
    public func SetUndoRedoEnabled(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetUndoRedoEnabled", enable as Any]) }
    public func SetWordWrapMode(policy: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWordWrapMode", policy as Any]) }
    public func TabChangesFocus() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "TabChangesFocus"]) as! Bool }
    public func TabStopDistance() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "TabStopDistance"]) as! Float }
    public func TabStopWidth() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TabStopWidth"]) as! Float) }
    public func TextBackgroundColor() -> QColor { callLocalFunction(l: ["", Pointer(), ___className, "TextBackgroundColor"]) as! QColor }
    public func ConnectTextChanged(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTextChanged", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectTextChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTextChanged"]) }
    public func TextChanged() { _ = callLocalFunction(l: ["", Pointer(), ___className, "TextChanged"]) }
    public func TextColor() -> QColor { callLocalFunction(l: ["", Pointer(), ___className, "TextColor"]) as! QColor }
    public func TextCursor() -> QTextCursor { callLocalFunction(l: ["", Pointer(), ___className, "TextCursor"]) as! QTextCursor }
    public func TextInteractionFlags() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TextInteractionFlags"]) as! Float) }
    public func ToHtml() -> String { callLocalFunction(l: ["", Pointer(), ___className, "ToHtml"]) as! String }
    public func ToPlainText() -> String { callLocalFunction(l: ["", Pointer(), ___className, "ToPlainText"]) as! String }
    public func ConnectUndo(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectUndo", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectUndo() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectUndo"]) }
    public func Undo() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Undo"]) }
    public func UndoDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UndoDefault"]) }
    public func ConnectUndoAvailable(f: @escaping (_ available: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectUndoAvailable", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectUndoAvailable() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectUndoAvailable"]) }
    public func UndoAvailable(available: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "UndoAvailable", available as Any]) }
    public func WordWrapMode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "WordWrapMode"]) as! Float) }
    public func ConnectZoomIn(f: @escaping (_ ran: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectZoomIn", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectZoomIn() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectZoomIn"]) }
    public func ZoomIn(ran: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ZoomIn", ran as Any]) }
    public func ZoomInDefault(ran: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ZoomInDefault", ran as Any]) }
    public func ConnectZoomOut(f: @escaping (_ ran: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectZoomOut", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectZoomOut() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectZoomOut"]) }
    public func ZoomOut(ran: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ZoomOut", ran as Any]) }
    public func ZoomOutDefault(ran: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ZoomOutDefault", ran as Any]) }
    public func ConnectDestroyQTextEdit(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQTextEdit", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQTextEdit() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQTextEdit"]) }
    public func DestroyQTextEdit() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQTextEdit"]) }
    public func DestroyQTextEditDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQTextEditDefault"]) }
}

public func NewQTextEditFromPointer(ptr: String) -> QTextEdit { let r = QTextEdit(); r.initFrom(p: ptr, n: "widgets.QTextEdit"); return r }
public func NewQTextEdit(parent: QWidget_ITF? = nil) -> QTextEdit { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQTextEdit", "", parent as Any]) as! QTextEdit }
public func NewQTextEdit2(text: String, parent: QWidget_ITF? = nil) -> QTextEdit { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQTextEdit2", "", text as Any, parent as Any]) as! QTextEdit }
public protocol QTileRules_ITF {
    func QTileRules_PTR() -> QTileRules
}

public class QTileRules: Internal, QTileRules_ITF {
    public func QTileRules_PTR() -> QTileRules { callLocalFunction(l: ["", Pointer(), ___className, "QTileRules_PTR"]) as! QTileRules }
    public func DestroyQTileRules() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQTileRules"]) }
}

public func NewQTileRulesFromPointer(ptr: String) -> QTileRules { let r = QTileRules(); r.initFrom(p: ptr, n: "widgets.QTileRules"); return r }
public func NewQTileRules(horizontalRule: Int, verticalRule: Int) -> QTileRules { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQTileRules", "", horizontalRule as Any, verticalRule as Any]) as! QTileRules }
public func NewQTileRules2(rule: Int) -> QTileRules { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQTileRules2", "", rule as Any]) as! QTileRules }
public protocol QTimeEdit_ITF: QDateTimeEdit_ITF {
    func QTimeEdit_PTR() -> QTimeEdit
}

public class QTimeEdit: QDateTimeEdit, QTimeEdit_ITF {
    public func QTimeEdit_PTR() -> QTimeEdit { callLocalFunction(l: ["", Pointer(), ___className, "QTimeEdit_PTR"]) as! QTimeEdit }
    public func ConnectDestroyQTimeEdit(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQTimeEdit", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQTimeEdit() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQTimeEdit"]) }
    public func DestroyQTimeEdit() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQTimeEdit"]) }
    public func DestroyQTimeEditDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQTimeEditDefault"]) }
}

public func NewQTimeEditFromPointer(ptr: String) -> QTimeEdit { let r = QTimeEdit(); r.initFrom(p: ptr, n: "widgets.QTimeEdit"); return r }
public func NewQTimeEdit(parent: QWidget_ITF? = nil) -> QTimeEdit { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQTimeEdit", "", parent as Any]) as! QTimeEdit }
public func NewQTimeEdit2(ti: QTime_ITF? = nil, parent: QWidget_ITF? = nil) -> QTimeEdit { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQTimeEdit2", "", ti as Any, parent as Any]) as! QTimeEdit }
public protocol QToolBar_ITF: QWidget_ITF {
    func QToolBar_PTR() -> QToolBar
}

public class QToolBar: QWidget, QToolBar_ITF {
    public func QToolBar_PTR() -> QToolBar { callLocalFunction(l: ["", Pointer(), ___className, "QToolBar_PTR"]) as! QToolBar }
    public func ActionAt(p: QPoint_ITF? = nil) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "ActionAt", p as Any]) as! QAction }
    public func ActionAt2(x: Int, y: Int) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "ActionAt2", x as Any, y as Any]) as! QAction }
    public func ConnectActionTriggered(f: @escaping (_ action: QAction) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectActionTriggered", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QAction) } as Any) }
    public func DisconnectActionTriggered() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectActionTriggered"]) }
    public func ActionTriggered(action: QAction_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ActionTriggered", action as Any]) }
    public func AddAction_QToolBar(text: String) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "AddAction", text as Any]) as! QAction }
    public func AddAction2(icon: QIcon_ITF? = nil, text: String) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "AddAction2", icon as Any, text as Any]) as! QAction }
    public func AddAction3(text: String, receiver: QObject_ITF? = nil, member: String) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "AddAction3", text as Any, receiver as Any, member as Any]) as! QAction }
    public func AddAction4(icon: QIcon_ITF? = nil, text: String, receiver: QObject_ITF? = nil, member: String) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "AddAction4", icon as Any, text as Any, receiver as Any, member as Any]) as! QAction }
    public func AddSeparator() -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "AddSeparator"]) as! QAction }
    public func AddWidget(widget: QWidget_ITF? = nil) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "AddWidget", widget as Any]) as! QAction }
    public func AllowedAreas() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "AllowedAreas"]) as! Float) }
    public func ConnectAllowedAreasChanged(f: @escaping (_ allowedAreas: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectAllowedAreasChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectAllowedAreasChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectAllowedAreasChanged"]) }
    public func AllowedAreasChanged(allowedAreas: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AllowedAreasChanged", allowedAreas as Any]) }
    public func Clear() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Clear"]) }
    public func IconSize() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "IconSize"]) as! QSize }
    public func ConnectIconSizeChanged(f: @escaping (_ iconSize: QSize) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectIconSizeChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QSize) } as Any) }
    public func DisconnectIconSizeChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectIconSizeChanged"]) }
    public func IconSizeChanged(iconSize: QSize_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "IconSizeChanged", iconSize as Any]) }
    public func InsertSeparator(before: QAction_ITF? = nil) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "InsertSeparator", before as Any]) as! QAction }
    public func InsertWidget(before: QAction_ITF? = nil, widget: QWidget_ITF? = nil) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "InsertWidget", before as Any, widget as Any]) as! QAction }
    public func IsAreaAllowed(area: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsAreaAllowed", area as Any]) as! Bool }
    public func IsFloatable() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsFloatable"]) as! Bool }
    public func IsFloating() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsFloating"]) as! Bool }
    public func IsMovable() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsMovable"]) as! Bool }
    public func ConnectMovableChanged(f: @escaping (_ movable: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMovableChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectMovableChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMovableChanged"]) }
    public func MovableChanged(movable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MovableChanged", movable as Any]) }
    public func Orientation() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Orientation"]) as! Float) }
    public func ConnectOrientationChanged(f: @escaping (_ orientation: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectOrientationChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectOrientationChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectOrientationChanged"]) }
    public func OrientationChanged(orientation: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "OrientationChanged", orientation as Any]) }
    public func SetAllowedAreas(areas: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAllowedAreas", areas as Any]) }
    public func SetFloatable(floatable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFloatable", floatable as Any]) }
    public func ConnectSetIconSize(f: @escaping (_ iconSize: QSize) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetIconSize", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QSize) } as Any) }
    public func DisconnectSetIconSize() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetIconSize"]) }
    public func SetIconSize(iconSize: QSize_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIconSize", iconSize as Any]) }
    public func SetIconSizeDefault(iconSize: QSize_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIconSizeDefault", iconSize as Any]) }
    public func SetMovable(movable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMovable", movable as Any]) }
    public func SetOrientation(orientation: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOrientation", orientation as Any]) }
    public func ConnectSetToolButtonStyle(f: @escaping (_ toolButtonStyle: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetToolButtonStyle", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSetToolButtonStyle() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetToolButtonStyle"]) }
    public func SetToolButtonStyle(toolButtonStyle: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetToolButtonStyle", toolButtonStyle as Any]) }
    public func SetToolButtonStyleDefault(toolButtonStyle: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetToolButtonStyleDefault", toolButtonStyle as Any]) }
    public func ToggleViewAction() -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "ToggleViewAction"]) as! QAction }
    public func ToolButtonStyle() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ToolButtonStyle"]) as! Float) }
    public func ConnectToolButtonStyleChanged(f: @escaping (_ toolButtonStyle: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectToolButtonStyleChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectToolButtonStyleChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectToolButtonStyleChanged"]) }
    public func ToolButtonStyleChanged(toolButtonStyle: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ToolButtonStyleChanged", toolButtonStyle as Any]) }
    public func ConnectTopLevelChanged(f: @escaping (_ topLevel: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTopLevelChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectTopLevelChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTopLevelChanged"]) }
    public func TopLevelChanged(topLevel: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TopLevelChanged", topLevel as Any]) }
    public func ConnectVisibilityChanged(f: @escaping (_ visible: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectVisibilityChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectVisibilityChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectVisibilityChanged"]) }
    public func VisibilityChanged(visible: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "VisibilityChanged", visible as Any]) }
    public func WidgetForAction(action: QAction_ITF? = nil) -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "WidgetForAction", action as Any]) as! QWidget }
    public func ConnectDestroyQToolBar(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQToolBar", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQToolBar() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQToolBar"]) }
    public func DestroyQToolBar() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQToolBar"]) }
    public func DestroyQToolBarDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQToolBarDefault"]) }
}

public func NewQToolBarFromPointer(ptr: String) -> QToolBar { let r = QToolBar(); r.initFrom(p: ptr, n: "widgets.QToolBar"); return r }
public func NewQToolBar(title: String, parent: QWidget_ITF? = nil) -> QToolBar { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQToolBar", "", title as Any, parent as Any]) as! QToolBar }
public func NewQToolBar2(parent: QWidget_ITF? = nil) -> QToolBar { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQToolBar2", "", parent as Any]) as! QToolBar }
public protocol QToolBox_ITF: QFrame_ITF {
    func QToolBox_PTR() -> QToolBox
}

public class QToolBox: QFrame, QToolBox_ITF {
    public func QToolBox_PTR() -> QToolBox { callLocalFunction(l: ["", Pointer(), ___className, "QToolBox_PTR"]) as! QToolBox }
    public func AddItem(widget: QWidget_ITF? = nil, iconSet: QIcon_ITF? = nil, text: String) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "AddItem", widget as Any, iconSet as Any, text as Any]) as! Float) }
    public func AddItem2(w: QWidget_ITF? = nil, text: String) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "AddItem2", w as Any, text as Any]) as! Float) }
    public func Count() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Count"]) as! Float) }
    public func ConnectCurrentChanged(f: @escaping (_ index: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCurrentChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectCurrentChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCurrentChanged"]) }
    public func CurrentChanged(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CurrentChanged", index as Any]) }
    public func CurrentIndex() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CurrentIndex"]) as! Float) }
    public func CurrentWidget() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "CurrentWidget"]) as! QWidget }
    public func IndexOf(widget: QWidget_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "IndexOf", widget as Any]) as! Float) }
    public func InsertItem(index: Int, widget: QWidget_ITF? = nil, icon: QIcon_ITF? = nil, text: String) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "InsertItem", index as Any, widget as Any, icon as Any, text as Any]) as! Float) }
    public func InsertItem2(index: Int, widget: QWidget_ITF? = nil, text: String) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "InsertItem2", index as Any, widget as Any, text as Any]) as! Float) }
    public func IsItemEnabled(index: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsItemEnabled", index as Any]) as! Bool }
    public func ItemIcon(index: Int) -> QIcon { callLocalFunction(l: ["", Pointer(), ___className, "ItemIcon", index as Any]) as! QIcon }
    public func ConnectItemInserted(f: @escaping (_ index: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectItemInserted", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectItemInserted() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectItemInserted"]) }
    public func ItemInserted(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ItemInserted", index as Any]) }
    public func ItemInsertedDefault(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ItemInsertedDefault", index as Any]) }
    public func ConnectItemRemoved(f: @escaping (_ index: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectItemRemoved", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectItemRemoved() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectItemRemoved"]) }
    public func ItemRemoved(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ItemRemoved", index as Any]) }
    public func ItemRemovedDefault(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ItemRemovedDefault", index as Any]) }
    public func ItemText(index: Int) -> String { callLocalFunction(l: ["", Pointer(), ___className, "ItemText", index as Any]) as! String }
    public func ItemToolTip(index: Int) -> String { callLocalFunction(l: ["", Pointer(), ___className, "ItemToolTip", index as Any]) as! String }
    public func RemoveItem(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveItem", index as Any]) }
    public func ConnectSetCurrentIndex(f: @escaping (_ index: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetCurrentIndex", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSetCurrentIndex() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetCurrentIndex"]) }
    public func SetCurrentIndex(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentIndex", index as Any]) }
    public func SetCurrentIndexDefault(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentIndexDefault", index as Any]) }
    public func ConnectSetCurrentWidget(f: @escaping (_ widget: QWidget) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetCurrentWidget", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QWidget) } as Any) }
    public func DisconnectSetCurrentWidget() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetCurrentWidget"]) }
    public func SetCurrentWidget(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentWidget", widget as Any]) }
    public func SetCurrentWidgetDefault(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentWidgetDefault", widget as Any]) }
    public func SetItemEnabled(index: Int, enabled: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetItemEnabled", index as Any, enabled as Any]) }
    public func SetItemIcon(index: Int, icon: QIcon_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetItemIcon", index as Any, icon as Any]) }
    public func SetItemText(index: Int, text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetItemText", index as Any, text as Any]) }
    public func SetItemToolTip(index: Int, toolTip: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetItemToolTip", index as Any, toolTip as Any]) }
    public func Widget(index: Int) -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "Widget", index as Any]) as! QWidget }
    public func ConnectDestroyQToolBox(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQToolBox", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQToolBox() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQToolBox"]) }
    public func DestroyQToolBox() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQToolBox"]) }
    public func DestroyQToolBoxDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQToolBoxDefault"]) }
}

public func NewQToolBoxFromPointer(ptr: String) -> QToolBox { let r = QToolBox(); r.initFrom(p: ptr, n: "widgets.QToolBox"); return r }
public func NewQToolBox(parent: QWidget_ITF? = nil, ff: Int) -> QToolBox { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQToolBox", "", parent as Any, ff as Any]) as! QToolBox }
public protocol QToolButton_ITF: QAbstractButton_ITF {
    func QToolButton_PTR() -> QToolButton
}

public class QToolButton: QAbstractButton, QToolButton_ITF {
    public func QToolButton_PTR() -> QToolButton { callLocalFunction(l: ["", Pointer(), ___className, "QToolButton_PTR"]) as! QToolButton }
    public func ArrowType() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ArrowType"]) as! Float) }
    public func AutoRaise() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "AutoRaise"]) as! Bool }
    public func DefaultAction() -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "DefaultAction"]) as! QAction }
    public func InitStyleOption(option: QStyleOptionToolButton_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InitStyleOption", option as Any]) }
    public func Menu() -> QMenu { callLocalFunction(l: ["", Pointer(), ___className, "Menu"]) as! QMenu }
    override public func ConnectPaintEvent(f: @escaping (_ event: QPaintEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPaintEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPaintEvent) } as Any) }
    override public func DisconnectPaintEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPaintEvent"]) }
    override public func PaintEvent(event: QPaintEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "PaintEvent", event as Any]) }
    override public func PaintEventDefault(event: QPaintEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "PaintEventDefault", event as Any]) }
    public func PopupMode() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "PopupMode"]) as! Float) }
    public func SetArrowType(ty: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetArrowType", ty as Any]) }
    public func SetAutoRaise(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAutoRaise", enable as Any]) }
    public func ConnectSetDefaultAction(f: @escaping (_ action: QAction) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetDefaultAction", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QAction) } as Any) }
    public func DisconnectSetDefaultAction() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetDefaultAction"]) }
    public func SetDefaultAction(action: QAction_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDefaultAction", action as Any]) }
    public func SetDefaultActionDefault(action: QAction_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDefaultActionDefault", action as Any]) }
    public func SetMenu(menu: QMenu_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMenu", menu as Any]) }
    public func SetPopupMode(mode: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPopupMode", mode as Any]) }
    public func ConnectSetToolButtonStyle(f: @escaping (_ style: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetToolButtonStyle", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSetToolButtonStyle() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetToolButtonStyle"]) }
    public func SetToolButtonStyle(style: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetToolButtonStyle", style as Any]) }
    public func SetToolButtonStyleDefault(style: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetToolButtonStyleDefault", style as Any]) }
    public func ConnectShowMenu(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectShowMenu", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectShowMenu() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectShowMenu"]) }
    public func ShowMenu() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowMenu"]) }
    public func ShowMenuDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowMenuDefault"]) }
    public func ToolButtonStyle() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ToolButtonStyle"]) as! Float) }
    public func ConnectTriggered(f: @escaping (_ action: QAction) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTriggered", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QAction) } as Any) }
    public func DisconnectTriggered() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTriggered"]) }
    public func Triggered(action: QAction_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Triggered", action as Any]) }
    public func ConnectDestroyQToolButton(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQToolButton", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQToolButton() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQToolButton"]) }
    public func DestroyQToolButton() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQToolButton"]) }
    public func DestroyQToolButtonDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQToolButtonDefault"]) }
}

public func NewQToolButtonFromPointer(ptr: String) -> QToolButton { let r = QToolButton(); r.initFrom(p: ptr, n: "widgets.QToolButton"); return r }
public func NewQToolButton(parent: QWidget_ITF? = nil) -> QToolButton { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQToolButton", "", parent as Any]) as! QToolButton }
public protocol QToolTip_ITF {
    func QToolTip_PTR() -> QToolTip
}

public class QToolTip: Internal, QToolTip_ITF {
    public func QToolTip_PTR() -> QToolTip { callLocalFunction(l: ["", Pointer(), ___className, "QToolTip_PTR"]) as! QToolTip }
    public func DestroyQToolTip() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQToolTip"]) }
    public func Font() -> QFont { callLocalFunction(l: ["", Pointer(), ___className, "Font"]) as! QFont }
    public func HideText() { _ = callLocalFunction(l: ["", Pointer(), ___className, "HideText"]) }
    public func IsVisible() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsVisible"]) as! Bool }
    public func Palette() -> QPalette { callLocalFunction(l: ["", Pointer(), ___className, "Palette"]) as! QPalette }
    public func SetFont(font: QFont_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFont", font as Any]) }
    public func SetPalette(palette: QPalette_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPalette", palette as Any]) }
    public func ShowText(pos: QPoint_ITF? = nil, text: String, w: QWidget_ITF? = nil, rect: QRect_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowText", pos as Any, text as Any, w as Any, rect as Any]) }
    public func ShowText2(pos: QPoint_ITF? = nil, text: String, w: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowText2", pos as Any, text as Any, w as Any]) }
    public func ShowText3(pos: QPoint_ITF? = nil, text: String, w: QWidget_ITF? = nil, rect: QRect_ITF? = nil, msecDisplayTime: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowText3", pos as Any, text as Any, w as Any, rect as Any, msecDisplayTime as Any]) }
    public func Text() -> String { callLocalFunction(l: ["", Pointer(), ___className, "Text"]) as! String }
}

public func NewQToolTipFromPointer(ptr: String) -> QToolTip { let r = QToolTip(); r.initFrom(p: ptr, n: "widgets.QToolTip"); return r }
public func QToolTip_Font() -> QFont { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QToolTip_Font", ""]) as! QFont }
public func QToolTip_HideText() { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QToolTip_HideText", ""]) }
public func QToolTip_IsVisible() -> Bool { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QToolTip_IsVisible", ""]) as! Bool }
public func QToolTip_Palette() -> QPalette { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QToolTip_Palette", ""]) as! QPalette }
public func QToolTip_SetFont(font: QFont_ITF? = nil) { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QToolTip_SetFont", "", font as Any]) }
public func QToolTip_SetPalette(palette: QPalette_ITF? = nil) { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QToolTip_SetPalette", "", palette as Any]) }
public func QToolTip_ShowText(pos: QPoint_ITF? = nil, text: String, w: QWidget_ITF? = nil, rect: QRect_ITF? = nil) { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QToolTip_ShowText", "", pos as Any, text as Any, w as Any, rect as Any]) }
public func QToolTip_ShowText2(pos: QPoint_ITF? = nil, text: String, w: QWidget_ITF? = nil) { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QToolTip_ShowText2", "", pos as Any, text as Any, w as Any]) }
public func QToolTip_ShowText3(pos: QPoint_ITF? = nil, text: String, w: QWidget_ITF? = nil, rect: QRect_ITF? = nil, msecDisplayTime: Int) { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QToolTip_ShowText3", "", pos as Any, text as Any, w as Any, rect as Any, msecDisplayTime as Any]) }
public func QToolTip_Text() -> String { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QToolTip_Text", ""]) as! String }
public protocol QTreeView_ITF: QAbstractItemView_ITF {
    func QTreeView_PTR() -> QTreeView
}

public class QTreeView: QAbstractItemView, QTreeView_ITF {
    public func QTreeView_PTR() -> QTreeView { callLocalFunction(l: ["", Pointer(), ___className, "QTreeView_PTR"]) as! QTreeView }
    public func AllColumnsShowFocus() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "AllColumnsShowFocus"]) as! Bool }
    public func AutoExpandDelay() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "AutoExpandDelay"]) as! Float) }
    public func ConnectCollapse(f: @escaping (_ index: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCollapse", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    public func DisconnectCollapse() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCollapse"]) }
    public func Collapse(index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Collapse", index as Any]) }
    public func CollapseDefault(index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CollapseDefault", index as Any]) }
    public func ConnectCollapseAll(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCollapseAll", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectCollapseAll() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCollapseAll"]) }
    public func CollapseAll() { _ = callLocalFunction(l: ["", Pointer(), ___className, "CollapseAll"]) }
    public func CollapseAllDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "CollapseAllDefault"]) }
    public func ConnectCollapsed(f: @escaping (_ index: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCollapsed", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    public func DisconnectCollapsed() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCollapsed"]) }
    public func Collapsed(index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Collapsed", index as Any]) }
    public func ColumnAt(x: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ColumnAt", x as Any]) as! Float) }
    public func ConnectColumnCountChanged(f: @escaping (_ oldCount: Int, _ newCount: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectColumnCountChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float)) } as Any) }
    public func DisconnectColumnCountChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectColumnCountChanged"]) }
    public func ColumnCountChanged(oldCount: Int, newCount: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ColumnCountChanged", oldCount as Any, newCount as Any]) }
    public func ColumnCountChangedDefault(oldCount: Int, newCount: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ColumnCountChangedDefault", oldCount as Any, newCount as Any]) }
    public func ConnectColumnMoved(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectColumnMoved", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectColumnMoved() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectColumnMoved"]) }
    public func ColumnMoved() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ColumnMoved"]) }
    public func ColumnMovedDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ColumnMovedDefault"]) }
    public func ConnectColumnResized(f: @escaping (_ column: Int, _ oldSize: Int, _ newSize: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectColumnResized", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float), Int(inp[2] as! Float)) } as Any) }
    public func DisconnectColumnResized() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectColumnResized"]) }
    public func ColumnResized(column: Int, oldSize: Int, newSize: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ColumnResized", column as Any, oldSize as Any, newSize as Any]) }
    public func ColumnResizedDefault(column: Int, oldSize: Int, newSize: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ColumnResizedDefault", column as Any, oldSize as Any, newSize as Any]) }
    public func ColumnViewportPosition(column: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ColumnViewportPosition", column as Any]) as! Float) }
    public func ColumnWidth(column: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ColumnWidth", column as Any]) as! Float) }
    override public func ConnectCurrentChanged(f: @escaping (_ current: QModelIndex, _ previous: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCurrentChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex, inp[1] as! QModelIndex) } as Any) }
    override public func DisconnectCurrentChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCurrentChanged"]) }
    override public func CurrentChanged(current: QModelIndex_ITF? = nil, previous: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CurrentChanged", current as Any, previous as Any]) }
    override public func CurrentChangedDefault(current: QModelIndex_ITF? = nil, previous: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CurrentChangedDefault", current as Any, previous as Any]) }
    override public func ConnectDataChanged(f: @escaping (_ topLeft: QModelIndex, _ bottomRight: QModelIndex, _ roles: [Int]) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDataChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex, inp[1] as! QModelIndex, inp[2] as! [Int]) } as Any) }
    override public func DisconnectDataChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDataChanged"]) }
    override public func DataChanged(topLeft: QModelIndex_ITF? = nil, bottomRight: QModelIndex_ITF? = nil, roles: [Int]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DataChanged", topLeft as Any, bottomRight as Any, roles as Any]) }
    override public func DataChangedDefault(topLeft: QModelIndex_ITF? = nil, bottomRight: QModelIndex_ITF? = nil, roles: [Int]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DataChangedDefault", topLeft as Any, bottomRight as Any, roles as Any]) }
    public func ConnectDrawBranches(f: @escaping (_ painter: QPainter, _ rect: QRect, _ index: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDrawBranches", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainter, inp[1] as! QRect, inp[2] as! QModelIndex) } as Any) }
    public func DisconnectDrawBranches() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDrawBranches"]) }
    public func DrawBranches(painter: QPainter_ITF? = nil, rect: QRect_ITF? = nil, index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawBranches", painter as Any, rect as Any, index as Any]) }
    public func DrawBranchesDefault(painter: QPainter_ITF? = nil, rect: QRect_ITF? = nil, index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawBranchesDefault", painter as Any, rect as Any, index as Any]) }
    public func ConnectDrawRow(f: @escaping (_ painter: QPainter, _ option: QStyleOptionViewItem, _ index: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDrawRow", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainter, inp[1] as! QStyleOptionViewItem, inp[2] as! QModelIndex) } as Any) }
    public func DisconnectDrawRow() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDrawRow"]) }
    public func DrawRow(painter: QPainter_ITF? = nil, option: QStyleOptionViewItem_ITF? = nil, index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawRow", painter as Any, option as Any, index as Any]) }
    public func DrawRowDefault(painter: QPainter_ITF? = nil, option: QStyleOptionViewItem_ITF? = nil, index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawRowDefault", painter as Any, option as Any, index as Any]) }
    public func DrawTree(painter: QPainter_ITF? = nil, region: QRegion_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DrawTree", painter as Any, region as Any]) }
    public func ConnectExpand(f: @escaping (_ index: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectExpand", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    public func DisconnectExpand() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectExpand"]) }
    public func Expand(index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Expand", index as Any]) }
    public func ExpandDefault(index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ExpandDefault", index as Any]) }
    public func ConnectExpandAll(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectExpandAll", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectExpandAll() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectExpandAll"]) }
    public func ExpandAll() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ExpandAll"]) }
    public func ExpandAllDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ExpandAllDefault"]) }
    public func ConnectExpandRecursively(f: @escaping (_ index: QModelIndex, _ depth: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectExpandRecursively", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex, Int(inp[1] as! Float)) } as Any) }
    public func DisconnectExpandRecursively() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectExpandRecursively"]) }
    public func ExpandRecursively(index: QModelIndex_ITF? = nil, depth: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ExpandRecursively", index as Any, depth as Any]) }
    public func ExpandRecursivelyDefault(index: QModelIndex_ITF? = nil, depth: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ExpandRecursivelyDefault", index as Any, depth as Any]) }
    public func ConnectExpandToDepth(f: @escaping (_ depth: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectExpandToDepth", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectExpandToDepth() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectExpandToDepth"]) }
    public func ExpandToDepth(depth: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ExpandToDepth", depth as Any]) }
    public func ExpandToDepthDefault(depth: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ExpandToDepthDefault", depth as Any]) }
    public func ConnectExpanded(f: @escaping (_ index: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectExpanded", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    public func DisconnectExpanded() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectExpanded"]) }
    public func Expanded(index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Expanded", index as Any]) }
    public func ExpandsOnDoubleClick() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "ExpandsOnDoubleClick"]) as! Bool }
    public func Header() -> QHeaderView { callLocalFunction(l: ["", Pointer(), ___className, "Header"]) as! QHeaderView }
    public func ConnectHideColumn(f: @escaping (_ column: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHideColumn", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectHideColumn() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHideColumn"]) }
    public func HideColumn(column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "HideColumn", column as Any]) }
    public func HideColumnDefault(column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "HideColumnDefault", column as Any]) }
    override public func ConnectHorizontalOffset(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHorizontalOffset", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectHorizontalOffset() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHorizontalOffset"]) }
    override public func HorizontalOffset() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "HorizontalOffset"]) as! Float) }
    public func HorizontalOffsetDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "HorizontalOffsetDefault"]) as! Float) }
    public func Indentation() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Indentation"]) as! Float) }
    public func IndexAbove(index: QModelIndex_ITF? = nil) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "IndexAbove", index as Any]) as! QModelIndex }
    override public func ConnectIndexAt(f: @escaping (_ point: QPoint) -> QModelIndex) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectIndexAt", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPoint) } as Any) }
    override public func DisconnectIndexAt() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectIndexAt"]) }
    override public func IndexAt(point: QPoint_ITF? = nil) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "IndexAt", point as Any]) as! QModelIndex }
    public func IndexAtDefault(point: QPoint_ITF? = nil) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "IndexAtDefault", point as Any]) as! QModelIndex }
    public func IndexBelow(index: QModelIndex_ITF? = nil) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "IndexBelow", index as Any]) as! QModelIndex }
    public func IndexRowSizeHint(index: QModelIndex_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "IndexRowSizeHint", index as Any]) as! Float) }
    public func IsAnimated() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsAnimated"]) as! Bool }
    public func IsColumnHidden(column: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsColumnHidden", column as Any]) as! Bool }
    public func IsExpanded(index: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsExpanded", index as Any]) as! Bool }
    public func IsFirstColumnSpanned(row: Int, parent: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsFirstColumnSpanned", row as Any, parent as Any]) as! Bool }
    public func IsHeaderHidden() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsHeaderHidden"]) as! Bool }
    override public func ConnectIsIndexHidden(f: @escaping (_ index: QModelIndex) -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectIsIndexHidden", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    override public func DisconnectIsIndexHidden() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectIsIndexHidden"]) }
    override public func IsIndexHidden(index: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsIndexHidden", index as Any]) as! Bool }
    public func IsIndexHiddenDefault(index: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsIndexHiddenDefault", index as Any]) as! Bool }
    public func IsRowHidden(row: Int, parent: QModelIndex_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsRowHidden", row as Any, parent as Any]) as! Bool }
    public func IsSortingEnabled() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsSortingEnabled"]) as! Bool }
    public func ItemsExpandable() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "ItemsExpandable"]) as! Bool }
    override public func ConnectMoveCursor(f: @escaping (_ cursorAction: Int, _ modifiers: Int) -> QModelIndex) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMoveCursor", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float)) } as Any) }
    override public func DisconnectMoveCursor() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMoveCursor"]) }
    override public func MoveCursor(cursorAction: Int, modifiers: Int) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "MoveCursor", cursorAction as Any, modifiers as Any]) as! QModelIndex }
    public func MoveCursorDefault(cursorAction: Int, modifiers: Int) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "MoveCursorDefault", cursorAction as Any, modifiers as Any]) as! QModelIndex }
    override public func ConnectReset(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectReset", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectReset() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectReset"]) }
    override public func Reset() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Reset"]) }
    override public func ResetDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResetDefault"]) }
    public func ResetIndentation() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResetIndentation"]) }
    public func ConnectResizeColumnToContents(f: @escaping (_ column: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectResizeColumnToContents", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectResizeColumnToContents() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectResizeColumnToContents"]) }
    public func ResizeColumnToContents(column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResizeColumnToContents", column as Any]) }
    public func ResizeColumnToContentsDefault(column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResizeColumnToContentsDefault", column as Any]) }
    public func RootIsDecorated() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "RootIsDecorated"]) as! Bool }
    public func RowHeight(index: QModelIndex_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "RowHeight", index as Any]) as! Float) }
    override public func ConnectRowsAboutToBeRemoved(f: @escaping (_ parent: QModelIndex, _ start: Int, _ end: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRowsAboutToBeRemoved", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex, Int(inp[1] as! Float), Int(inp[2] as! Float)) } as Any) }
    override public func DisconnectRowsAboutToBeRemoved() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRowsAboutToBeRemoved"]) }
    override public func RowsAboutToBeRemoved(parent: QModelIndex_ITF? = nil, start: Int, end: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RowsAboutToBeRemoved", parent as Any, start as Any, end as Any]) }
    override public func RowsAboutToBeRemovedDefault(parent: QModelIndex_ITF? = nil, start: Int, end: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RowsAboutToBeRemovedDefault", parent as Any, start as Any, end as Any]) }
    override public func ConnectRowsInserted(f: @escaping (_ parent: QModelIndex, _ start: Int, _ end: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRowsInserted", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex, Int(inp[1] as! Float), Int(inp[2] as! Float)) } as Any) }
    override public func DisconnectRowsInserted() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRowsInserted"]) }
    override public func RowsInserted(parent: QModelIndex_ITF? = nil, start: Int, end: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RowsInserted", parent as Any, start as Any, end as Any]) }
    override public func RowsInsertedDefault(parent: QModelIndex_ITF? = nil, start: Int, end: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RowsInsertedDefault", parent as Any, start as Any, end as Any]) }
    public func ConnectRowsRemoved(f: @escaping (_ parent: QModelIndex, _ start: Int, _ end: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRowsRemoved", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex, Int(inp[1] as! Float), Int(inp[2] as! Float)) } as Any) }
    public func DisconnectRowsRemoved() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRowsRemoved"]) }
    public func RowsRemoved(parent: QModelIndex_ITF? = nil, start: Int, end: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RowsRemoved", parent as Any, start as Any, end as Any]) }
    public func RowsRemovedDefault(parent: QModelIndex_ITF? = nil, start: Int, end: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RowsRemovedDefault", parent as Any, start as Any, end as Any]) }
    override public func ConnectScrollTo(f: @escaping (_ index: QModelIndex, _ hint: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectScrollTo", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex, Int(inp[1] as! Float)) } as Any) }
    override public func DisconnectScrollTo() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectScrollTo"]) }
    override public func ScrollTo(index: QModelIndex_ITF? = nil, hint: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ScrollTo", index as Any, hint as Any]) }
    public func ScrollToDefault(index: QModelIndex_ITF? = nil, hint: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ScrollToDefault", index as Any, hint as Any]) }
    override public func ConnectSelectAll(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSelectAll", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectSelectAll() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSelectAll"]) }
    override public func SelectAll() { _ = callLocalFunction(l: ["", Pointer(), ___className, "SelectAll"]) }
    override public func SelectAllDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "SelectAllDefault"]) }
    override public func ConnectSelectionChanged(f: @escaping (_ selected: QItemSelection, _ deselected: QItemSelection) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSelectionChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QItemSelection, inp[1] as! QItemSelection) } as Any) }
    override public func DisconnectSelectionChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSelectionChanged"]) }
    override public func SelectionChanged(selected: QItemSelection_ITF? = nil, deselected: QItemSelection_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SelectionChanged", selected as Any, deselected as Any]) }
    override public func SelectionChangedDefault(selected: QItemSelection_ITF? = nil, deselected: QItemSelection_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SelectionChangedDefault", selected as Any, deselected as Any]) }
    public func SetAllColumnsShowFocus(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAllColumnsShowFocus", enable as Any]) }
    public func SetAnimated(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAnimated", enable as Any]) }
    public func SetAutoExpandDelay(delay: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAutoExpandDelay", delay as Any]) }
    public func SetColumnHidden(column: Int, hide: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetColumnHidden", column as Any, hide as Any]) }
    public func SetColumnWidth(column: Int, width: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetColumnWidth", column as Any, width as Any]) }
    public func SetExpanded(index: QModelIndex_ITF? = nil, expanded: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetExpanded", index as Any, expanded as Any]) }
    public func SetExpandsOnDoubleClick(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetExpandsOnDoubleClick", enable as Any]) }
    public func SetFirstColumnSpanned(row: Int, parent: QModelIndex_ITF? = nil, span: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFirstColumnSpanned", row as Any, parent as Any, span as Any]) }
    public func SetHeader(header: QHeaderView_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetHeader", header as Any]) }
    public func SetHeaderHidden(hide: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetHeaderHidden", hide as Any]) }
    public func SetIndentation(i: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIndentation", i as Any]) }
    public func SetItemsExpandable(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetItemsExpandable", enable as Any]) }
    override public func ConnectSetRootIndex(f: @escaping (_ index: QModelIndex) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetRootIndex", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    override public func DisconnectSetRootIndex() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetRootIndex"]) }
    override public func SetRootIndex(index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRootIndex", index as Any]) }
    override public func SetRootIndexDefault(index: QModelIndex_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRootIndexDefault", index as Any]) }
    public func SetRootIsDecorated(show: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRootIsDecorated", show as Any]) }
    public func SetRowHidden(row: Int, parent: QModelIndex_ITF? = nil, hide: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetRowHidden", row as Any, parent as Any, hide as Any]) }
    override public func ConnectSetSelection(f: @escaping (_ rect: QRect, _ command: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetSelection", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QRect, Int(inp[1] as! Float)) } as Any) }
    override public func DisconnectSetSelection() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetSelection"]) }
    override public func SetSelection(rect: QRect_ITF? = nil, flags: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSelection", rect as Any, flags as Any]) }
    public func SetSelectionDefault(rect: QRect_ITF? = nil, command: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSelectionDefault", rect as Any, command as Any]) }
    public func SetSortingEnabled(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSortingEnabled", enable as Any]) }
    public func SetTreePosition(index: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTreePosition", index as Any]) }
    public func SetUniformRowHeights(uniform: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetUniformRowHeights", uniform as Any]) }
    public func SetWordWrap(on: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWordWrap", on as Any]) }
    public func ConnectShowColumn(f: @escaping (_ column: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectShowColumn", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectShowColumn() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectShowColumn"]) }
    public func ShowColumn(column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowColumn", column as Any]) }
    public func ShowColumnDefault(column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowColumnDefault", column as Any]) }
    public func ConnectSortByColumn(f: @escaping (_ column: Int, _ order: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSortByColumn", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float)) } as Any) }
    public func DisconnectSortByColumn() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSortByColumn"]) }
    public func SortByColumn(column: Int, order: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SortByColumn", column as Any, order as Any]) }
    public func SortByColumnDefault(column: Int, order: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SortByColumnDefault", column as Any, order as Any]) }
    public func TreePosition() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TreePosition"]) as! Float) }
    public func UniformRowHeights() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "UniformRowHeights"]) as! Bool }
    override public func ConnectUpdateGeometries(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectUpdateGeometries", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectUpdateGeometries() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectUpdateGeometries"]) }
    override public func UpdateGeometries() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UpdateGeometries"]) }
    override public func UpdateGeometriesDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UpdateGeometriesDefault"]) }
    override public func ConnectVerticalOffset(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectVerticalOffset", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectVerticalOffset() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectVerticalOffset"]) }
    override public func VerticalOffset() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "VerticalOffset"]) as! Float) }
    public func VerticalOffsetDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "VerticalOffsetDefault"]) as! Float) }
    override public func ConnectVisualRect(f: @escaping (_ index: QModelIndex) -> QRect) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectVisualRect", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QModelIndex) } as Any) }
    override public func DisconnectVisualRect() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectVisualRect"]) }
    override public func VisualRect(index: QModelIndex_ITF? = nil) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "VisualRect", index as Any]) as! QRect }
    public func VisualRectDefault(index: QModelIndex_ITF? = nil) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "VisualRectDefault", index as Any]) as! QRect }
    override public func ConnectVisualRegionForSelection(f: @escaping (_ selection: QItemSelection) -> QRegion) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectVisualRegionForSelection", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QItemSelection) } as Any) }
    override public func DisconnectVisualRegionForSelection() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectVisualRegionForSelection"]) }
    override public func VisualRegionForSelection(selection: QItemSelection_ITF? = nil) -> QRegion { callLocalFunction(l: ["", Pointer(), ___className, "VisualRegionForSelection", selection as Any]) as! QRegion }
    public func VisualRegionForSelectionDefault(selection: QItemSelection_ITF? = nil) -> QRegion { callLocalFunction(l: ["", Pointer(), ___className, "VisualRegionForSelectionDefault", selection as Any]) as! QRegion }
    public func WordWrap() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "WordWrap"]) as! Bool }
    public func ConnectDestroyQTreeView(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQTreeView", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQTreeView() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQTreeView"]) }
    public func DestroyQTreeView() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQTreeView"]) }
    public func DestroyQTreeViewDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQTreeViewDefault"]) }
}

public func NewQTreeViewFromPointer(ptr: String) -> QTreeView { let r = QTreeView(); r.initFrom(p: ptr, n: "widgets.QTreeView"); return r }
public func NewQTreeView(parent: QWidget_ITF? = nil) -> QTreeView { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQTreeView", "", parent as Any]) as! QTreeView }
public protocol QTreeWidget_ITF: QTreeView_ITF {
    func QTreeWidget_PTR() -> QTreeWidget
}

public class QTreeWidget: QTreeView, QTreeWidget_ITF {
    public func QTreeWidget_PTR() -> QTreeWidget { callLocalFunction(l: ["", Pointer(), ___className, "QTreeWidget_PTR"]) as! QTreeWidget }
    public func AddTopLevelItem(item: QTreeWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddTopLevelItem", item as Any]) }
    public func AddTopLevelItems(items: [QTreeWidgetItem]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddTopLevelItems", items as Any]) }
    public func ConnectClear(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectClear", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectClear() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectClear"]) }
    public func Clear() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Clear"]) }
    public func ClearDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearDefault"]) }
    public func ClosePersistentEditor_QTreeView(item: QTreeWidgetItem_ITF? = nil, column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClosePersistentEditor", item as Any, column as Any]) }
    public func ConnectCollapseItem(f: @escaping (_ item: QTreeWidgetItem) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCollapseItem", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QTreeWidgetItem) } as Any) }
    public func DisconnectCollapseItem() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCollapseItem"]) }
    public func CollapseItem(item: QTreeWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CollapseItem", item as Any]) }
    public func CollapseItemDefault(item: QTreeWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CollapseItemDefault", item as Any]) }
    public func ColumnCount() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ColumnCount"]) as! Float) }
    public func CurrentColumn() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CurrentColumn"]) as! Float) }
    public func CurrentItem() -> QTreeWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "CurrentItem"]) as! QTreeWidgetItem }
    public func ConnectCurrentItemChanged(f: @escaping (_ current: QTreeWidgetItem, _ previous: QTreeWidgetItem) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCurrentItemChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QTreeWidgetItem, inp[1] as! QTreeWidgetItem) } as Any) }
    public func DisconnectCurrentItemChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCurrentItemChanged"]) }
    public func CurrentItemChanged(current: QTreeWidgetItem_ITF? = nil, previous: QTreeWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CurrentItemChanged", current as Any, previous as Any]) }
    public func ConnectDropMimeData(f: @escaping (_ parent: QTreeWidgetItem, _ index: Int, _ data: QMimeData, _ action: Int) -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDropMimeData", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QTreeWidgetItem, Int(inp[1] as! Float), inp[2] as! QMimeData, Int(inp[3] as! Float)) } as Any) }
    public func DisconnectDropMimeData() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDropMimeData"]) }
    public func DropMimeData(parent: QTreeWidgetItem_ITF? = nil, index: Int, data: QMimeData_ITF? = nil, action: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "DropMimeData", parent as Any, index as Any, data as Any, action as Any]) as! Bool }
    public func DropMimeDataDefault(parent: QTreeWidgetItem_ITF? = nil, index: Int, data: QMimeData_ITF? = nil, action: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "DropMimeDataDefault", parent as Any, index as Any, data as Any, action as Any]) as! Bool }
    public func EditItem(item: QTreeWidgetItem_ITF? = nil, column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "EditItem", item as Any, column as Any]) }
    public func ConnectExpandItem(f: @escaping (_ item: QTreeWidgetItem) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectExpandItem", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QTreeWidgetItem) } as Any) }
    public func DisconnectExpandItem() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectExpandItem"]) }
    public func ExpandItem(item: QTreeWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ExpandItem", item as Any]) }
    public func ExpandItemDefault(item: QTreeWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ExpandItemDefault", item as Any]) }
    public func FindItems(text: String, flags: Int, column: Int) -> [QTreeWidgetItem] { callLocalFunction(l: ["", Pointer(), ___className, "FindItems", text as Any, flags as Any, column as Any]) as! [QTreeWidgetItem] }
    public func HeaderItem() -> QTreeWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "HeaderItem"]) as! QTreeWidgetItem }
    public func IndexFromItem(item: QTreeWidgetItem_ITF? = nil, column: Int) -> QModelIndex { callLocalFunction(l: ["", Pointer(), ___className, "IndexFromItem", item as Any, column as Any]) as! QModelIndex }
    public func IndexOfTopLevelItem(item: QTreeWidgetItem_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "IndexOfTopLevelItem", item as Any]) as! Float) }
    public func InsertTopLevelItem(index: Int, item: QTreeWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertTopLevelItem", index as Any, item as Any]) }
    public func InsertTopLevelItems(index: Int, items: [QTreeWidgetItem]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertTopLevelItems", index as Any, items as Any]) }
    public func InvisibleRootItem() -> QTreeWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "InvisibleRootItem"]) as! QTreeWidgetItem }
    public func IsPersistentEditorOpen_QTreeView(item: QTreeWidgetItem_ITF? = nil, column: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsPersistentEditorOpen", item as Any, column as Any]) as! Bool }
    public func ItemAbove(item: QTreeWidgetItem_ITF? = nil) -> QTreeWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "ItemAbove", item as Any]) as! QTreeWidgetItem }
    public func ConnectItemActivated(f: @escaping (_ item: QTreeWidgetItem, _ column: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectItemActivated", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QTreeWidgetItem, Int(inp[1] as! Float)) } as Any) }
    public func DisconnectItemActivated() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectItemActivated"]) }
    public func ItemActivated(item: QTreeWidgetItem_ITF? = nil, column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ItemActivated", item as Any, column as Any]) }
    public func ItemAt(p: QPoint_ITF? = nil) -> QTreeWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "ItemAt", p as Any]) as! QTreeWidgetItem }
    public func ItemAt2(x: Int, y: Int) -> QTreeWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "ItemAt2", x as Any, y as Any]) as! QTreeWidgetItem }
    public func ItemBelow(item: QTreeWidgetItem_ITF? = nil) -> QTreeWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "ItemBelow", item as Any]) as! QTreeWidgetItem }
    public func ConnectItemChanged(f: @escaping (_ item: QTreeWidgetItem, _ column: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectItemChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QTreeWidgetItem, Int(inp[1] as! Float)) } as Any) }
    public func DisconnectItemChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectItemChanged"]) }
    public func ItemChanged(item: QTreeWidgetItem_ITF? = nil, column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ItemChanged", item as Any, column as Any]) }
    public func ConnectItemClicked(f: @escaping (_ item: QTreeWidgetItem, _ column: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectItemClicked", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QTreeWidgetItem, Int(inp[1] as! Float)) } as Any) }
    public func DisconnectItemClicked() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectItemClicked"]) }
    public func ItemClicked(item: QTreeWidgetItem_ITF? = nil, column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ItemClicked", item as Any, column as Any]) }
    public func ConnectItemCollapsed(f: @escaping (_ item: QTreeWidgetItem) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectItemCollapsed", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QTreeWidgetItem) } as Any) }
    public func DisconnectItemCollapsed() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectItemCollapsed"]) }
    public func ItemCollapsed(item: QTreeWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ItemCollapsed", item as Any]) }
    public func ConnectItemDoubleClicked(f: @escaping (_ item: QTreeWidgetItem, _ column: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectItemDoubleClicked", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QTreeWidgetItem, Int(inp[1] as! Float)) } as Any) }
    public func DisconnectItemDoubleClicked() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectItemDoubleClicked"]) }
    public func ItemDoubleClicked(item: QTreeWidgetItem_ITF? = nil, column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ItemDoubleClicked", item as Any, column as Any]) }
    public func ConnectItemEntered(f: @escaping (_ item: QTreeWidgetItem, _ column: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectItemEntered", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QTreeWidgetItem, Int(inp[1] as! Float)) } as Any) }
    public func DisconnectItemEntered() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectItemEntered"]) }
    public func ItemEntered(item: QTreeWidgetItem_ITF? = nil, column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ItemEntered", item as Any, column as Any]) }
    public func ConnectItemExpanded(f: @escaping (_ item: QTreeWidgetItem) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectItemExpanded", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QTreeWidgetItem) } as Any) }
    public func DisconnectItemExpanded() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectItemExpanded"]) }
    public func ItemExpanded(item: QTreeWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ItemExpanded", item as Any]) }
    public func ItemFromIndex(index: QModelIndex_ITF? = nil) -> QTreeWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "ItemFromIndex", index as Any]) as! QTreeWidgetItem }
    public func ConnectItemPressed(f: @escaping (_ item: QTreeWidgetItem, _ column: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectItemPressed", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QTreeWidgetItem, Int(inp[1] as! Float)) } as Any) }
    public func DisconnectItemPressed() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectItemPressed"]) }
    public func ItemPressed(item: QTreeWidgetItem_ITF? = nil, column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ItemPressed", item as Any, column as Any]) }
    public func ConnectItemSelectionChanged(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectItemSelectionChanged", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectItemSelectionChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectItemSelectionChanged"]) }
    public func ItemSelectionChanged() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ItemSelectionChanged"]) }
    public func ItemWidget(item: QTreeWidgetItem_ITF? = nil, column: Int) -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "ItemWidget", item as Any, column as Any]) as! QWidget }
    public func ConnectMimeData(f: @escaping (_ items: [QTreeWidgetItem]) -> QMimeData) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMimeData", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! [QTreeWidgetItem]) } as Any) }
    public func DisconnectMimeData() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMimeData"]) }
    public func MimeData(items: [QTreeWidgetItem]) -> QMimeData { callLocalFunction(l: ["", Pointer(), ___className, "MimeData", items as Any]) as! QMimeData }
    public func MimeDataDefault(items: [QTreeWidgetItem]) -> QMimeData { callLocalFunction(l: ["", Pointer(), ___className, "MimeDataDefault", items as Any]) as! QMimeData }
    public func ConnectMimeTypes(f: @escaping () -> [String]) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMimeTypes", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectMimeTypes() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMimeTypes"]) }
    public func MimeTypes() -> [String] { callLocalFunction(l: ["", Pointer(), ___className, "MimeTypes"]) as! [String] }
    public func MimeTypesDefault() -> [String] { callLocalFunction(l: ["", Pointer(), ___className, "MimeTypesDefault"]) as! [String] }
    public func OpenPersistentEditor_QTreeView(item: QTreeWidgetItem_ITF? = nil, column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "OpenPersistentEditor", item as Any, column as Any]) }
    public func RemoveItemWidget(item: QTreeWidgetItem_ITF? = nil, column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveItemWidget", item as Any, column as Any]) }
    public func ConnectScrollToItem(f: @escaping (_ item: QTreeWidgetItem, _ hint: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectScrollToItem", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QTreeWidgetItem, Int(inp[1] as! Float)) } as Any) }
    public func DisconnectScrollToItem() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectScrollToItem"]) }
    public func ScrollToItem(item: QTreeWidgetItem_ITF? = nil, hint: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ScrollToItem", item as Any, hint as Any]) }
    public func ScrollToItemDefault(item: QTreeWidgetItem_ITF? = nil, hint: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ScrollToItemDefault", item as Any, hint as Any]) }
    public func SelectedItems() -> [QTreeWidgetItem] { callLocalFunction(l: ["", Pointer(), ___className, "SelectedItems"]) as! [QTreeWidgetItem] }
    public func SetColumnCount(columns: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetColumnCount", columns as Any]) }
    public func SetCurrentItem(item: QTreeWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentItem", item as Any]) }
    public func SetCurrentItem2(item: QTreeWidgetItem_ITF? = nil, column: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentItem2", item as Any, column as Any]) }
    public func SetCurrentItem3(item: QTreeWidgetItem_ITF? = nil, column: Int, command: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCurrentItem3", item as Any, column as Any, command as Any]) }
    public func SetHeaderItem(item: QTreeWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetHeaderItem", item as Any]) }
    public func SetHeaderLabel(label: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetHeaderLabel", label as Any]) }
    public func SetHeaderLabels(labels: [String]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetHeaderLabels", labels as Any]) }
    public func SetItemWidget(item: QTreeWidgetItem_ITF? = nil, column: Int, widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetItemWidget", item as Any, column as Any, widget as Any]) }
    public func SortColumn() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SortColumn"]) as! Float) }
    public func SortItems(column: Int, order: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SortItems", column as Any, order as Any]) }
    public func ConnectSupportedDropActions(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSupportedDropActions", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectSupportedDropActions() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSupportedDropActions"]) }
    public func SupportedDropActions() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SupportedDropActions"]) as! Float) }
    public func SupportedDropActionsDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SupportedDropActionsDefault"]) as! Float) }
    public func TakeTopLevelItem(index: Int) -> QTreeWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "TakeTopLevelItem", index as Any]) as! QTreeWidgetItem }
    public func TopLevelItem(index: Int) -> QTreeWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "TopLevelItem", index as Any]) as! QTreeWidgetItem }
    public func TopLevelItemCount() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TopLevelItemCount"]) as! Float) }
    public func VisualItemRect(item: QTreeWidgetItem_ITF? = nil) -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "VisualItemRect", item as Any]) as! QRect }
    public func ConnectDestroyQTreeWidget(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQTreeWidget", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQTreeWidget() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQTreeWidget"]) }
    public func DestroyQTreeWidget() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQTreeWidget"]) }
    public func DestroyQTreeWidgetDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQTreeWidgetDefault"]) }
}

public func NewQTreeWidgetFromPointer(ptr: String) -> QTreeWidget { let r = QTreeWidget(); r.initFrom(p: ptr, n: "widgets.QTreeWidget"); return r }
public func NewQTreeWidget(parent: QWidget_ITF? = nil) -> QTreeWidget { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQTreeWidget", "", parent as Any]) as! QTreeWidget }
public protocol QTreeWidgetItem_ITF {
    func QTreeWidgetItem_PTR() -> QTreeWidgetItem
}

public class QTreeWidgetItem: Internal, QTreeWidgetItem_ITF {
    public func QTreeWidgetItem_PTR() -> QTreeWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "QTreeWidgetItem_PTR"]) as! QTreeWidgetItem }
    public func AddChild(child: QTreeWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddChild", child as Any]) }
    public func AddChildren(children: [QTreeWidgetItem]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddChildren", children as Any]) }
    public func Background(column: Int) -> QBrush { callLocalFunction(l: ["", Pointer(), ___className, "Background", column as Any]) as! QBrush }
    public func CheckState(column: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CheckState", column as Any]) as! Float) }
    public func Child(index: Int) -> QTreeWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "Child", index as Any]) as! QTreeWidgetItem }
    public func ChildCount() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ChildCount"]) as! Float) }
    public func ChildIndicatorPolicy() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ChildIndicatorPolicy"]) as! Float) }
    public func ConnectClone(f: @escaping () -> QTreeWidgetItem) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectClone", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectClone() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectClone"]) }
    public func Clone() -> QTreeWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "Clone"]) as! QTreeWidgetItem }
    public func CloneDefault() -> QTreeWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "CloneDefault"]) as! QTreeWidgetItem }
    public func ColumnCount() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ColumnCount"]) as! Float) }
    public func ConnectData(f: @escaping (_ column: Int, _ role: Int) -> QVariant) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectData", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float)) } as Any) }
    public func DisconnectData() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectData"]) }
    public func Data(column: Int, role: Int) -> QVariant { callLocalFunction(l: ["", Pointer(), ___className, "Data", column as Any, role as Any]) as! QVariant }
    public func DataDefault(column: Int, role: Int) -> QVariant { callLocalFunction(l: ["", Pointer(), ___className, "DataDefault", column as Any, role as Any]) as! QVariant }
    public func EmitDataChanged() { _ = callLocalFunction(l: ["", Pointer(), ___className, "EmitDataChanged"]) }
    public func Flags() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Flags"]) as! Float) }
    public func Font(column: Int) -> QFont { callLocalFunction(l: ["", Pointer(), ___className, "Font", column as Any]) as! QFont }
    public func Foreground(column: Int) -> QBrush { callLocalFunction(l: ["", Pointer(), ___className, "Foreground", column as Any]) as! QBrush }
    public func Icon(column: Int) -> QIcon { callLocalFunction(l: ["", Pointer(), ___className, "Icon", column as Any]) as! QIcon }
    public func IndexOfChild(child: QTreeWidgetItem_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "IndexOfChild", child as Any]) as! Float) }
    public func InsertChild(index: Int, child: QTreeWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertChild", index as Any, child as Any]) }
    public func InsertChildren(index: Int, children: [QTreeWidgetItem]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertChildren", index as Any, children as Any]) }
    public func IsDisabled() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsDisabled"]) as! Bool }
    public func IsExpanded() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsExpanded"]) as! Bool }
    public func IsFirstColumnSpanned() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsFirstColumnSpanned"]) as! Bool }
    public func IsHidden() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsHidden"]) as! Bool }
    public func IsSelected() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsSelected"]) as! Bool }
    public func Parent() -> QTreeWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "Parent"]) as! QTreeWidgetItem }
    public func ConnectRead(f: @escaping (_ i: QDataStream) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRead", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QDataStream) } as Any) }
    public func DisconnectRead() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRead"]) }
    public func Read(i: QDataStream_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Read", i as Any]) }
    public func ReadDefault(i: QDataStream_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ReadDefault", i as Any]) }
    public func RemoveChild(child: QTreeWidgetItem_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveChild", child as Any]) }
    public func SetBackground(column: Int, brush: QBrush_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetBackground", column as Any, brush as Any]) }
    public func SetCheckState(column: Int, state: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCheckState", column as Any, state as Any]) }
    public func SetChildIndicatorPolicy(policy: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetChildIndicatorPolicy", policy as Any]) }
    public func ConnectSetData(f: @escaping (_ column: Int, _ role: Int, _ value: QVariant) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetData", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float), Int(inp[1] as! Float), inp[2] as! QVariant) } as Any) }
    public func DisconnectSetData() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetData"]) }
    public func SetData(column: Int, role: Int, value: QVariant_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetData", column as Any, role as Any, value as Any]) }
    public func SetDataDefault(column: Int, role: Int, value: QVariant_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDataDefault", column as Any, role as Any, value as Any]) }
    public func SetDisabled(disabled: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDisabled", disabled as Any]) }
    public func SetExpanded(expand: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetExpanded", expand as Any]) }
    public func SetFirstColumnSpanned(span: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFirstColumnSpanned", span as Any]) }
    public func SetFlags(flags: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFlags", flags as Any]) }
    public func SetFont(column: Int, font: QFont_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFont", column as Any, font as Any]) }
    public func SetForeground(column: Int, brush: QBrush_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetForeground", column as Any, brush as Any]) }
    public func SetHidden(hide: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetHidden", hide as Any]) }
    public func SetIcon(column: Int, icon: QIcon_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIcon", column as Any, icon as Any]) }
    public func SetSelected(sele: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSelected", sele as Any]) }
    public func SetSizeHint(column: Int, size: QSize_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSizeHint", column as Any, size as Any]) }
    public func SetStatusTip(column: Int, statusTip: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStatusTip", column as Any, statusTip as Any]) }
    public func SetText(column: Int, text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetText", column as Any, text as Any]) }
    public func SetTextAlignment(column: Int, alignment: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTextAlignment", column as Any, alignment as Any]) }
    public func SetToolTip(column: Int, toolTip: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetToolTip", column as Any, toolTip as Any]) }
    public func SetWhatsThis(column: Int, whatsThis: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWhatsThis", column as Any, whatsThis as Any]) }
    public func SizeHint(column: Int) -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "SizeHint", column as Any]) as! QSize }
    public func SortChildren(column: Int, order: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SortChildren", column as Any, order as Any]) }
    public func StatusTip(column: Int) -> String { callLocalFunction(l: ["", Pointer(), ___className, "StatusTip", column as Any]) as! String }
    public func TakeChild(index: Int) -> QTreeWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "TakeChild", index as Any]) as! QTreeWidgetItem }
    public func TakeChildren() -> [QTreeWidgetItem] { callLocalFunction(l: ["", Pointer(), ___className, "TakeChildren"]) as! [QTreeWidgetItem] }
    public func Text(column: Int) -> String { callLocalFunction(l: ["", Pointer(), ___className, "Text", column as Any]) as! String }
    public func TextAlignment(column: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TextAlignment", column as Any]) as! Float) }
    public func ToolTip(column: Int) -> String { callLocalFunction(l: ["", Pointer(), ___className, "ToolTip", column as Any]) as! String }
    public func TreeWidget() -> QTreeWidget { callLocalFunction(l: ["", Pointer(), ___className, "TreeWidget"]) as! QTreeWidget }
    public func Type() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Type"]) as! Float) }
    public func WhatsThis(column: Int) -> String { callLocalFunction(l: ["", Pointer(), ___className, "WhatsThis", column as Any]) as! String }
    public func ConnectWrite(f: @escaping (_ out: QDataStream) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectWrite", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QDataStream) } as Any) }
    public func DisconnectWrite() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectWrite"]) }
    public func Write(out: QDataStream_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Write", out as Any]) }
    public func WriteDefault(out: QDataStream_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "WriteDefault", out as Any]) }
    public func ConnectDestroyQTreeWidgetItem(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQTreeWidgetItem", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQTreeWidgetItem() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQTreeWidgetItem"]) }
    public func DestroyQTreeWidgetItem() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQTreeWidgetItem"]) }
    public func DestroyQTreeWidgetItemDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQTreeWidgetItemDefault"]) }
}

public func NewQTreeWidgetItemFromPointer(ptr: String) -> QTreeWidgetItem { let r = QTreeWidgetItem(); r.initFrom(p: ptr, n: "widgets.QTreeWidgetItem"); return r }
public func NewQTreeWidgetItem(ty: Int) -> QTreeWidgetItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQTreeWidgetItem", "", ty as Any]) as! QTreeWidgetItem }
public func NewQTreeWidgetItem2(stri: [String], ty: Int) -> QTreeWidgetItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQTreeWidgetItem2", "", stri as Any, ty as Any]) as! QTreeWidgetItem }
public func NewQTreeWidgetItem3(parent: QTreeWidget_ITF? = nil, ty: Int) -> QTreeWidgetItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQTreeWidgetItem3", "", parent as Any, ty as Any]) as! QTreeWidgetItem }
public func NewQTreeWidgetItem4(parent: QTreeWidget_ITF? = nil, stri: [String], ty: Int) -> QTreeWidgetItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQTreeWidgetItem4", "", parent as Any, stri as Any, ty as Any]) as! QTreeWidgetItem }
public func NewQTreeWidgetItem5(parent: QTreeWidget_ITF? = nil, preceding: QTreeWidgetItem_ITF? = nil, ty: Int) -> QTreeWidgetItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQTreeWidgetItem5", "", parent as Any, preceding as Any, ty as Any]) as! QTreeWidgetItem }
public func NewQTreeWidgetItem6(parent: QTreeWidgetItem_ITF? = nil, ty: Int) -> QTreeWidgetItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQTreeWidgetItem6", "", parent as Any, ty as Any]) as! QTreeWidgetItem }
public func NewQTreeWidgetItem7(parent: QTreeWidgetItem_ITF? = nil, stri: [String], ty: Int) -> QTreeWidgetItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQTreeWidgetItem7", "", parent as Any, stri as Any, ty as Any]) as! QTreeWidgetItem }
public func NewQTreeWidgetItem8(parent: QTreeWidgetItem_ITF? = nil, preceding: QTreeWidgetItem_ITF? = nil, ty: Int) -> QTreeWidgetItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQTreeWidgetItem8", "", parent as Any, preceding as Any, ty as Any]) as! QTreeWidgetItem }
public func NewQTreeWidgetItem9(other: QTreeWidgetItem_ITF? = nil) -> QTreeWidgetItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQTreeWidgetItem9", "", other as Any]) as! QTreeWidgetItem }
public protocol QTreeWidgetItemIterator_ITF {
    func QTreeWidgetItemIterator_PTR() -> QTreeWidgetItemIterator
}

public class QTreeWidgetItemIterator: Internal, QTreeWidgetItemIterator_ITF {
    public func QTreeWidgetItemIterator_PTR() -> QTreeWidgetItemIterator { callLocalFunction(l: ["", Pointer(), ___className, "QTreeWidgetItemIterator_PTR"]) as! QTreeWidgetItemIterator }
}

public protocol QUndoCommand_ITF {
    func QUndoCommand_PTR() -> QUndoCommand
}

public class QUndoCommand: Internal, QUndoCommand_ITF {
    public func QUndoCommand_PTR() -> QUndoCommand { callLocalFunction(l: ["", Pointer(), ___className, "QUndoCommand_PTR"]) as! QUndoCommand }
    public func ActionText() -> String { callLocalFunction(l: ["", Pointer(), ___className, "ActionText"]) as! String }
    public func Child(index: Int) -> QUndoCommand { callLocalFunction(l: ["", Pointer(), ___className, "Child", index as Any]) as! QUndoCommand }
    public func ChildCount() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ChildCount"]) as! Float) }
    public func ConnectId(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectId", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectId() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectId"]) }
    public func Id() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Id"]) as! Float) }
    public func IdDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "IdDefault"]) as! Float) }
    public func IsObsolete() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsObsolete"]) as! Bool }
    public func ConnectMergeWith(f: @escaping (_ command: QUndoCommand) -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMergeWith", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QUndoCommand) } as Any) }
    public func DisconnectMergeWith() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMergeWith"]) }
    public func MergeWith(command: QUndoCommand_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "MergeWith", command as Any]) as! Bool }
    public func MergeWithDefault(command: QUndoCommand_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "MergeWithDefault", command as Any]) as! Bool }
    public func ConnectRedo(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRedo", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectRedo() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRedo"]) }
    public func Redo() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Redo"]) }
    public func RedoDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "RedoDefault"]) }
    public func SetObsolete(obsolete: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetObsolete", obsolete as Any]) }
    public func SetText(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetText", text as Any]) }
    public func Text() -> String { callLocalFunction(l: ["", Pointer(), ___className, "Text"]) as! String }
    public func ConnectUndo(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectUndo", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectUndo() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectUndo"]) }
    public func Undo() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Undo"]) }
    public func UndoDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UndoDefault"]) }
    public func ConnectDestroyQUndoCommand(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQUndoCommand", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQUndoCommand() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQUndoCommand"]) }
    public func DestroyQUndoCommand() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQUndoCommand"]) }
    public func DestroyQUndoCommandDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQUndoCommandDefault"]) }
}

public func NewQUndoCommandFromPointer(ptr: String) -> QUndoCommand { let r = QUndoCommand(); r.initFrom(p: ptr, n: "widgets.QUndoCommand"); return r }
public func NewQUndoCommand(parent: QUndoCommand_ITF? = nil) -> QUndoCommand { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQUndoCommand", "", parent as Any]) as! QUndoCommand }
public func NewQUndoCommand2(text: String, parent: QUndoCommand_ITF? = nil) -> QUndoCommand { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQUndoCommand2", "", text as Any, parent as Any]) as! QUndoCommand }
public protocol QUndoGroup_ITF: QObject_ITF {
    func QUndoGroup_PTR() -> QUndoGroup
}

public class QUndoGroup: QObject, QUndoGroup_ITF {
    public func QUndoGroup_PTR() -> QUndoGroup { callLocalFunction(l: ["", Pointer(), ___className, "QUndoGroup_PTR"]) as! QUndoGroup }
    public func ActiveStack() -> QUndoStack { callLocalFunction(l: ["", Pointer(), ___className, "ActiveStack"]) as! QUndoStack }
    public func ConnectActiveStackChanged(f: @escaping (_ stack: QUndoStack) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectActiveStackChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QUndoStack) } as Any) }
    public func DisconnectActiveStackChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectActiveStackChanged"]) }
    public func ActiveStackChanged(stack: QUndoStack_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ActiveStackChanged", stack as Any]) }
    public func AddStack(stack: QUndoStack_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddStack", stack as Any]) }
    public func CanRedo() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "CanRedo"]) as! Bool }
    public func ConnectCanRedoChanged(f: @escaping (_ canRedo: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCanRedoChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectCanRedoChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCanRedoChanged"]) }
    public func CanRedoChanged(canRedo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CanRedoChanged", canRedo as Any]) }
    public func CanUndo() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "CanUndo"]) as! Bool }
    public func ConnectCanUndoChanged(f: @escaping (_ canUndo: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCanUndoChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectCanUndoChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCanUndoChanged"]) }
    public func CanUndoChanged(canUndo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CanUndoChanged", canUndo as Any]) }
    public func ConnectCleanChanged(f: @escaping (_ clean: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCleanChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectCleanChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCleanChanged"]) }
    public func CleanChanged(clean: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CleanChanged", clean as Any]) }
    public func CreateRedoAction(parent: QObject_ITF? = nil, prefix: String) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "CreateRedoAction", parent as Any, prefix as Any]) as! QAction }
    public func CreateUndoAction(parent: QObject_ITF? = nil, prefix: String) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "CreateUndoAction", parent as Any, prefix as Any]) as! QAction }
    public func ConnectIndexChanged(f: @escaping (_ idx: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectIndexChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectIndexChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectIndexChanged"]) }
    public func IndexChanged(idx: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "IndexChanged", idx as Any]) }
    public func IsClean() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsClean"]) as! Bool }
    public func ConnectRedo(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRedo", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectRedo() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRedo"]) }
    public func Redo() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Redo"]) }
    public func RedoDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "RedoDefault"]) }
    public func RedoText() -> String { callLocalFunction(l: ["", Pointer(), ___className, "RedoText"]) as! String }
    public func ConnectRedoTextChanged(f: @escaping (_ redoText: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRedoTextChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectRedoTextChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRedoTextChanged"]) }
    public func RedoTextChanged(redoText: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RedoTextChanged", redoText as Any]) }
    public func RemoveStack(stack: QUndoStack_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveStack", stack as Any]) }
    public func ConnectSetActiveStack(f: @escaping (_ stack: QUndoStack) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetActiveStack", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QUndoStack) } as Any) }
    public func DisconnectSetActiveStack() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetActiveStack"]) }
    public func SetActiveStack(stack: QUndoStack_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetActiveStack", stack as Any]) }
    public func SetActiveStackDefault(stack: QUndoStack_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetActiveStackDefault", stack as Any]) }
    public func Stacks() -> [QUndoStack] { callLocalFunction(l: ["", Pointer(), ___className, "Stacks"]) as! [QUndoStack] }
    public func ConnectUndo(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectUndo", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectUndo() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectUndo"]) }
    public func Undo() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Undo"]) }
    public func UndoDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UndoDefault"]) }
    public func UndoText() -> String { callLocalFunction(l: ["", Pointer(), ___className, "UndoText"]) as! String }
    public func ConnectUndoTextChanged(f: @escaping (_ undoText: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectUndoTextChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectUndoTextChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectUndoTextChanged"]) }
    public func UndoTextChanged(undoText: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "UndoTextChanged", undoText as Any]) }
    public func ConnectDestroyQUndoGroup(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQUndoGroup", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQUndoGroup() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQUndoGroup"]) }
    public func DestroyQUndoGroup() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQUndoGroup"]) }
    public func DestroyQUndoGroupDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQUndoGroupDefault"]) }
    override public func ChildEventDefault(event: QChildEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ChildEventDefault", event as Any]) }
    override public func ConnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ConnectNotifyDefault", sign as Any]) }
    override public func CustomEventDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CustomEventDefault", event as Any]) }
    override public func DeleteLaterDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DeleteLaterDefault"]) }
    override public func DisconnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DisconnectNotifyDefault", sign as Any]) }
    override public func EventDefault(e: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventDefault", e as Any]) as! Bool }
    override public func EventFilterDefault(watched: QObject_ITF? = nil, event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventFilterDefault", watched as Any, event as Any]) as! Bool }
    override public func MetaObjectDefault() -> QMetaObject { callLocalFunction(l: ["", Pointer(), ___className, "MetaObjectDefault"]) as! QMetaObject }
    override public func TimerEventDefault(event: QTimerEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TimerEventDefault", event as Any]) }
}

public func NewQUndoGroupFromPointer(ptr: String) -> QUndoGroup { let r = QUndoGroup(); r.initFrom(p: ptr, n: "widgets.QUndoGroup"); return r }
public func NewQUndoGroup(parent: QObject_ITF? = nil) -> QUndoGroup { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQUndoGroup", "", parent as Any]) as! QUndoGroup }
public protocol QUndoStack_ITF: QObject_ITF {
    func QUndoStack_PTR() -> QUndoStack
}

public class QUndoStack: QObject, QUndoStack_ITF {
    public func QUndoStack_PTR() -> QUndoStack { callLocalFunction(l: ["", Pointer(), ___className, "QUndoStack_PTR"]) as! QUndoStack }
    public func BeginMacro(text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "BeginMacro", text as Any]) }
    public func CanRedo() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "CanRedo"]) as! Bool }
    public func ConnectCanRedoChanged(f: @escaping (_ canRedo: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCanRedoChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectCanRedoChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCanRedoChanged"]) }
    public func CanRedoChanged(canRedo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CanRedoChanged", canRedo as Any]) }
    public func CanUndo() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "CanUndo"]) as! Bool }
    public func ConnectCanUndoChanged(f: @escaping (_ canUndo: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCanUndoChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectCanUndoChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCanUndoChanged"]) }
    public func CanUndoChanged(canUndo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CanUndoChanged", canUndo as Any]) }
    public func ConnectCleanChanged(f: @escaping (_ clean: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCleanChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectCleanChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCleanChanged"]) }
    public func CleanChanged(clean: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CleanChanged", clean as Any]) }
    public func CleanIndex() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CleanIndex"]) as! Float) }
    public func Clear() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Clear"]) }
    public func Command(index: Int) -> QUndoCommand { callLocalFunction(l: ["", Pointer(), ___className, "Command", index as Any]) as! QUndoCommand }
    public func Count() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Count"]) as! Float) }
    public func CreateRedoAction(parent: QObject_ITF? = nil, prefix: String) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "CreateRedoAction", parent as Any, prefix as Any]) as! QAction }
    public func CreateUndoAction(parent: QObject_ITF? = nil, prefix: String) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "CreateUndoAction", parent as Any, prefix as Any]) as! QAction }
    public func EndMacro() { _ = callLocalFunction(l: ["", Pointer(), ___className, "EndMacro"]) }
    public func Index() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Index"]) as! Float) }
    public func ConnectIndexChanged(f: @escaping (_ idx: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectIndexChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectIndexChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectIndexChanged"]) }
    public func IndexChanged(idx: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "IndexChanged", idx as Any]) }
    public func IsActive() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsActive"]) as! Bool }
    public func IsClean() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsClean"]) as! Bool }
    public func Push(cmd: QUndoCommand_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Push", cmd as Any]) }
    public func ConnectRedo(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRedo", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectRedo() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRedo"]) }
    public func Redo() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Redo"]) }
    public func RedoDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "RedoDefault"]) }
    public func RedoText() -> String { callLocalFunction(l: ["", Pointer(), ___className, "RedoText"]) as! String }
    public func ConnectRedoTextChanged(f: @escaping (_ redoText: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRedoTextChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectRedoTextChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRedoTextChanged"]) }
    public func RedoTextChanged(redoText: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RedoTextChanged", redoText as Any]) }
    public func ConnectResetClean(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectResetClean", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectResetClean() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectResetClean"]) }
    public func ResetClean() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResetClean"]) }
    public func ResetCleanDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResetCleanDefault"]) }
    public func ConnectSetActive(f: @escaping (_ active: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetActive", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectSetActive() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetActive"]) }
    public func SetActive(active: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetActive", active as Any]) }
    public func SetActiveDefault(active: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetActiveDefault", active as Any]) }
    public func ConnectSetClean(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetClean", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectSetClean() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetClean"]) }
    public func SetClean() { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetClean"]) }
    public func SetCleanDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCleanDefault"]) }
    public func ConnectSetIndex(f: @escaping (_ idx: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetIndex", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectSetIndex() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetIndex"]) }
    public func SetIndex(idx: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIndex", idx as Any]) }
    public func SetIndexDefault(idx: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetIndexDefault", idx as Any]) }
    public func SetUndoLimit(limit: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetUndoLimit", limit as Any]) }
    public func Text(idx: Int) -> String { callLocalFunction(l: ["", Pointer(), ___className, "Text", idx as Any]) as! String }
    public func ConnectUndo(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectUndo", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectUndo() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectUndo"]) }
    public func Undo() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Undo"]) }
    public func UndoDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UndoDefault"]) }
    public func UndoLimit() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "UndoLimit"]) as! Float) }
    public func UndoText() -> String { callLocalFunction(l: ["", Pointer(), ___className, "UndoText"]) as! String }
    public func ConnectUndoTextChanged(f: @escaping (_ undoText: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectUndoTextChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectUndoTextChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectUndoTextChanged"]) }
    public func UndoTextChanged(undoText: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "UndoTextChanged", undoText as Any]) }
    public func ConnectDestroyQUndoStack(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQUndoStack", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQUndoStack() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQUndoStack"]) }
    public func DestroyQUndoStack() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQUndoStack"]) }
    public func DestroyQUndoStackDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQUndoStackDefault"]) }
    override public func ChildEventDefault(event: QChildEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ChildEventDefault", event as Any]) }
    override public func ConnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ConnectNotifyDefault", sign as Any]) }
    override public func CustomEventDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CustomEventDefault", event as Any]) }
    override public func DeleteLaterDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DeleteLaterDefault"]) }
    override public func DisconnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DisconnectNotifyDefault", sign as Any]) }
    override public func EventDefault(e: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventDefault", e as Any]) as! Bool }
    override public func EventFilterDefault(watched: QObject_ITF? = nil, event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventFilterDefault", watched as Any, event as Any]) as! Bool }
    override public func MetaObjectDefault() -> QMetaObject { callLocalFunction(l: ["", Pointer(), ___className, "MetaObjectDefault"]) as! QMetaObject }
    override public func TimerEventDefault(event: QTimerEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TimerEventDefault", event as Any]) }
}

public func NewQUndoStackFromPointer(ptr: String) -> QUndoStack { let r = QUndoStack(); r.initFrom(p: ptr, n: "widgets.QUndoStack"); return r }
public func NewQUndoStack(parent: QObject_ITF? = nil) -> QUndoStack { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQUndoStack", "", parent as Any]) as! QUndoStack }
public protocol QUndoView_ITF: QListView_ITF {
    func QUndoView_PTR() -> QUndoView
}

public class QUndoView: QListView, QUndoView_ITF {
    public func QUndoView_PTR() -> QUndoView { callLocalFunction(l: ["", Pointer(), ___className, "QUndoView_PTR"]) as! QUndoView }
    public func CleanIcon() -> QIcon { callLocalFunction(l: ["", Pointer(), ___className, "CleanIcon"]) as! QIcon }
    public func EmptyLabel() -> String { callLocalFunction(l: ["", Pointer(), ___className, "EmptyLabel"]) as! String }
    public func Group() -> QUndoGroup { callLocalFunction(l: ["", Pointer(), ___className, "Group"]) as! QUndoGroup }
    public func SetCleanIcon(icon: QIcon_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCleanIcon", icon as Any]) }
    public func SetEmptyLabel(label: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetEmptyLabel", label as Any]) }
    public func ConnectSetGroup(f: @escaping (_ group: QUndoGroup) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetGroup", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QUndoGroup) } as Any) }
    public func DisconnectSetGroup() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetGroup"]) }
    public func SetGroup(group: QUndoGroup_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetGroup", group as Any]) }
    public func SetGroupDefault(group: QUndoGroup_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetGroupDefault", group as Any]) }
    public func ConnectSetStack(f: @escaping (_ stack: QUndoStack) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetStack", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QUndoStack) } as Any) }
    public func DisconnectSetStack() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetStack"]) }
    public func SetStack(stack: QUndoStack_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStack", stack as Any]) }
    public func SetStackDefault(stack: QUndoStack_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStackDefault", stack as Any]) }
    public func Stack() -> QUndoStack { callLocalFunction(l: ["", Pointer(), ___className, "Stack"]) as! QUndoStack }
    public func ConnectDestroyQUndoView(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQUndoView", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQUndoView() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQUndoView"]) }
    public func DestroyQUndoView() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQUndoView"]) }
    public func DestroyQUndoViewDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQUndoViewDefault"]) }
}

public func NewQUndoViewFromPointer(ptr: String) -> QUndoView { let r = QUndoView(); r.initFrom(p: ptr, n: "widgets.QUndoView"); return r }
public func NewQUndoView(parent: QWidget_ITF? = nil) -> QUndoView { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQUndoView", "", parent as Any]) as! QUndoView }
public func NewQUndoView2(stack: QUndoStack_ITF? = nil, parent: QWidget_ITF? = nil) -> QUndoView { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQUndoView2", "", stack as Any, parent as Any]) as! QUndoView }
public func NewQUndoView3(group: QUndoGroup_ITF? = nil, parent: QWidget_ITF? = nil) -> QUndoView { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQUndoView3", "", group as Any, parent as Any]) as! QUndoView }
public protocol QVBoxLayout_ITF: QBoxLayout_ITF {
    func QVBoxLayout_PTR() -> QVBoxLayout
}

public class QVBoxLayout: QBoxLayout, QVBoxLayout_ITF {
    public func QVBoxLayout_PTR() -> QVBoxLayout { callLocalFunction(l: ["", Pointer(), ___className, "QVBoxLayout_PTR"]) as! QVBoxLayout }
    public func ConnectDestroyQVBoxLayout(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQVBoxLayout", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQVBoxLayout() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQVBoxLayout"]) }
    public func DestroyQVBoxLayout() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQVBoxLayout"]) }
    public func DestroyQVBoxLayoutDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQVBoxLayoutDefault"]) }
}

public func NewQVBoxLayoutFromPointer(ptr: String) -> QVBoxLayout { let r = QVBoxLayout(); r.initFrom(p: ptr, n: "widgets.QVBoxLayout"); return r }
public func NewQVBoxLayout() -> QVBoxLayout { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQVBoxLayout", ""]) as! QVBoxLayout }
public func NewQVBoxLayout2(parent: QWidget_ITF? = nil) -> QVBoxLayout { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQVBoxLayout2", "", parent as Any]) as! QVBoxLayout }
public protocol QWhatsThis_ITF {
    func QWhatsThis_PTR() -> QWhatsThis
}

public class QWhatsThis: Internal, QWhatsThis_ITF {
    public func QWhatsThis_PTR() -> QWhatsThis { callLocalFunction(l: ["", Pointer(), ___className, "QWhatsThis_PTR"]) as! QWhatsThis }
    public func DestroyQWhatsThis() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQWhatsThis"]) }
    public func CreateAction(parent: QObject_ITF? = nil) -> QAction { callLocalFunction(l: ["", Pointer(), ___className, "CreateAction", parent as Any]) as! QAction }
    public func EnterWhatsThisMode() { _ = callLocalFunction(l: ["", Pointer(), ___className, "EnterWhatsThisMode"]) }
    public func HideText() { _ = callLocalFunction(l: ["", Pointer(), ___className, "HideText"]) }
    public func InWhatsThisMode() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "InWhatsThisMode"]) as! Bool }
    public func LeaveWhatsThisMode() { _ = callLocalFunction(l: ["", Pointer(), ___className, "LeaveWhatsThisMode"]) }
    public func ShowText(pos: QPoint_ITF? = nil, text: String, w: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowText", pos as Any, text as Any, w as Any]) }
}

public func NewQWhatsThisFromPointer(ptr: String) -> QWhatsThis { let r = QWhatsThis(); r.initFrom(p: ptr, n: "widgets.QWhatsThis"); return r }
public func QWhatsThis_CreateAction(parent: QObject_ITF? = nil) -> QAction { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QWhatsThis_CreateAction", "", parent as Any]) as! QAction }
public func QWhatsThis_EnterWhatsThisMode() { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QWhatsThis_EnterWhatsThisMode", ""]) }
public func QWhatsThis_HideText() { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QWhatsThis_HideText", ""]) }
public func QWhatsThis_InWhatsThisMode() -> Bool { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QWhatsThis_InWhatsThisMode", ""]) as! Bool }
public func QWhatsThis_LeaveWhatsThisMode() { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QWhatsThis_LeaveWhatsThisMode", ""]) }
public func QWhatsThis_ShowText(pos: QPoint_ITF? = nil, text: String, w: QWidget_ITF? = nil) { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QWhatsThis_ShowText", "", pos as Any, text as Any, w as Any]) }
public protocol QWidget_ITF: QPaintDevice_ITF {
    func QWidget_PTR() -> QWidget
    func QObject_PTR() -> QObject
}

public class QWidget: QPaintDevice, QWidget_ITF {
    public func QObject_PTR() -> QObject { callLocalFunction(l: ["", Pointer(), ___className, "QObject_PTR"]) as! QObject }
    public func QWidget_PTR() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "QWidget_PTR"]) as! QWidget }
    public func AcceptDrops() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "AcceptDrops"]) as! Bool }
    public func AccessibleDescription() -> String { callLocalFunction(l: ["", Pointer(), ___className, "AccessibleDescription"]) as! String }
    public func AccessibleName() -> String { callLocalFunction(l: ["", Pointer(), ___className, "AccessibleName"]) as! String }
    public func ConnectActionEvent(f: @escaping (_ event: QActionEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectActionEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QActionEvent) } as Any) }
    public func DisconnectActionEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectActionEvent"]) }
    public func ActionEvent(event: QActionEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ActionEvent", event as Any]) }
    public func ActionEventDefault(event: QActionEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ActionEventDefault", event as Any]) }
    public func Actions() -> [QAction] { callLocalFunction(l: ["", Pointer(), ___className, "Actions"]) as! [QAction] }
    public func ActivateWindow() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ActivateWindow"]) }
    public func AddAction(action: QAction_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddAction", action as Any]) }
    public func AddActions(actions: [QAction]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "AddActions", actions as Any]) }
    public func AdjustSize() { _ = callLocalFunction(l: ["", Pointer(), ___className, "AdjustSize"]) }
    public func AutoFillBackground() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "AutoFillBackground"]) as! Bool }
    public func BackgroundRole() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "BackgroundRole"]) as! Float) }
    public func BackingStore() -> QBackingStore { callLocalFunction(l: ["", Pointer(), ___className, "BackingStore"]) as! QBackingStore }
    public func BaseSize() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "BaseSize"]) as! QSize }
    public func ConnectChangeEvent(f: @escaping (_ event: QEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectChangeEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QEvent) } as Any) }
    public func DisconnectChangeEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectChangeEvent"]) }
    public func ChangeEvent(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ChangeEvent", event as Any]) }
    public func ChangeEventDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ChangeEventDefault", event as Any]) }
    public func ChildAt(x: Int, y: Int) -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "ChildAt", x as Any, y as Any]) as! QWidget }
    public func ChildAt2(p: QPoint_ITF? = nil) -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "ChildAt2", p as Any]) as! QWidget }
    public func ChildrenRect() -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "ChildrenRect"]) as! QRect }
    public func ChildrenRegion() -> QRegion { callLocalFunction(l: ["", Pointer(), ___className, "ChildrenRegion"]) as! QRegion }
    public func ClearFocus() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearFocus"]) }
    public func ClearMask() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ClearMask"]) }
    public func ConnectClose(f: @escaping () -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectClose", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectClose() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectClose"]) }
    public func Close() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "Close"]) as! Bool }
    public func CloseDefault() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "CloseDefault"]) as! Bool }
    public func ConnectCloseEvent(f: @escaping (_ event: QCloseEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCloseEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QCloseEvent) } as Any) }
    public func DisconnectCloseEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCloseEvent"]) }
    public func CloseEvent(event: QCloseEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CloseEvent", event as Any]) }
    public func CloseEventDefault(event: QCloseEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CloseEventDefault", event as Any]) }
    public func ContentsMargins() -> QMargins { callLocalFunction(l: ["", Pointer(), ___className, "ContentsMargins"]) as! QMargins }
    public func ContentsRect() -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "ContentsRect"]) as! QRect }
    public func ConnectContextMenuEvent(f: @escaping (_ event: QContextMenuEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectContextMenuEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QContextMenuEvent) } as Any) }
    public func DisconnectContextMenuEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectContextMenuEvent"]) }
    public func ContextMenuEvent(event: QContextMenuEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ContextMenuEvent", event as Any]) }
    public func ContextMenuEventDefault(event: QContextMenuEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ContextMenuEventDefault", event as Any]) }
    public func ContextMenuPolicy() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ContextMenuPolicy"]) as! Float) }
    public func Create(window: Int, initializeWindow: Bool, destroyOldWindow: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Create", window as Any, initializeWindow as Any, destroyOldWindow as Any]) }
    public func CreateWindowContainer(window: QWindow_ITF? = nil, parent: QWidget_ITF? = nil, flags: Int) -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "CreateWindowContainer", window as Any, parent as Any, flags as Any]) as! QWidget }
    public func Cursor() -> QCursor { callLocalFunction(l: ["", Pointer(), ___className, "Cursor"]) as! QCursor }
    public func ConnectCustomContextMenuRequested(f: @escaping (_ pos: QPoint) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCustomContextMenuRequested", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPoint) } as Any) }
    public func DisconnectCustomContextMenuRequested() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCustomContextMenuRequested"]) }
    public func CustomContextMenuRequested(pos: QPoint_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CustomContextMenuRequested", pos as Any]) }
    public func Destroy(destroyWindow: Bool, destroySubWindows: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Destroy", destroyWindow as Any, destroySubWindows as Any]) }
    public func ConnectDragEnterEvent(f: @escaping (_ event: QDragEnterEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDragEnterEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QDragEnterEvent) } as Any) }
    public func DisconnectDragEnterEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDragEnterEvent"]) }
    public func DragEnterEvent(event: QDragEnterEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DragEnterEvent", event as Any]) }
    public func DragEnterEventDefault(event: QDragEnterEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DragEnterEventDefault", event as Any]) }
    public func ConnectDragLeaveEvent(f: @escaping (_ event: QDragLeaveEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDragLeaveEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QDragLeaveEvent) } as Any) }
    public func DisconnectDragLeaveEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDragLeaveEvent"]) }
    public func DragLeaveEvent(event: QDragLeaveEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DragLeaveEvent", event as Any]) }
    public func DragLeaveEventDefault(event: QDragLeaveEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DragLeaveEventDefault", event as Any]) }
    public func ConnectDragMoveEvent(f: @escaping (_ event: QDragMoveEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDragMoveEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QDragMoveEvent) } as Any) }
    public func DisconnectDragMoveEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDragMoveEvent"]) }
    public func DragMoveEvent(event: QDragMoveEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DragMoveEvent", event as Any]) }
    public func DragMoveEventDefault(event: QDragMoveEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DragMoveEventDefault", event as Any]) }
    public func ConnectDropEvent(f: @escaping (_ event: QDropEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDropEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QDropEvent) } as Any) }
    public func DisconnectDropEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDropEvent"]) }
    public func DropEvent(event: QDropEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DropEvent", event as Any]) }
    public func DropEventDefault(event: QDropEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DropEventDefault", event as Any]) }
    public func EffectiveWinId() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "EffectiveWinId"]) as! Float) }
    public func EnsurePolished() { _ = callLocalFunction(l: ["", Pointer(), ___className, "EnsurePolished"]) }
    public func ConnectEnterEvent(f: @escaping (_ event: QEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectEnterEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QEvent) } as Any) }
    public func DisconnectEnterEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectEnterEvent"]) }
    public func EnterEvent(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "EnterEvent", event as Any]) }
    public func EnterEventDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "EnterEventDefault", event as Any]) }
    public func ConnectEvent(f: @escaping (_ event: QEvent) -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QEvent) } as Any) }
    public func DisconnectEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectEvent"]) }
    public func Event(event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "Event", event as Any]) as! Bool }
    public func EventDefault(event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventDefault", event as Any]) as! Bool }
    public func Find(id: Int) -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "Find", id as Any]) as! QWidget }
    public func ConnectFocusInEvent(f: @escaping (_ event: QFocusEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectFocusInEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QFocusEvent) } as Any) }
    public func DisconnectFocusInEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectFocusInEvent"]) }
    public func FocusInEvent(event: QFocusEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "FocusInEvent", event as Any]) }
    public func FocusInEventDefault(event: QFocusEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "FocusInEventDefault", event as Any]) }
    public func FocusNextChild() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "FocusNextChild"]) as! Bool }
    public func ConnectFocusNextPrevChild(f: @escaping (_ next: Bool) -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectFocusNextPrevChild", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectFocusNextPrevChild() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectFocusNextPrevChild"]) }
    public func FocusNextPrevChild(next: Bool) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "FocusNextPrevChild", next as Any]) as! Bool }
    public func FocusNextPrevChildDefault(next: Bool) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "FocusNextPrevChildDefault", next as Any]) as! Bool }
    public func ConnectFocusOutEvent(f: @escaping (_ event: QFocusEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectFocusOutEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QFocusEvent) } as Any) }
    public func DisconnectFocusOutEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectFocusOutEvent"]) }
    public func FocusOutEvent(event: QFocusEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "FocusOutEvent", event as Any]) }
    public func FocusOutEventDefault(event: QFocusEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "FocusOutEventDefault", event as Any]) }
    public func FocusPolicy() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "FocusPolicy"]) as! Float) }
    public func FocusPreviousChild() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "FocusPreviousChild"]) as! Bool }
    public func FocusProxy() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "FocusProxy"]) as! QWidget }
    public func FocusWidget() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "FocusWidget"]) as! QWidget }
    public func Font() -> QFont { callLocalFunction(l: ["", Pointer(), ___className, "Font"]) as! QFont }
    public func FontInfo() -> QFontInfo { callLocalFunction(l: ["", Pointer(), ___className, "FontInfo"]) as! QFontInfo }
    public func FontMetrics() -> QFontMetrics { callLocalFunction(l: ["", Pointer(), ___className, "FontMetrics"]) as! QFontMetrics }
    public func ForegroundRole() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ForegroundRole"]) as! Float) }
    public func FrameGeometry() -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "FrameGeometry"]) as! QRect }
    public func FrameSize() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "FrameSize"]) as! QSize }
    public func Geometry() -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "Geometry"]) as! QRect }
    public func GetContentsMargins(left: Int, top: Int, right: Int, bottom: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "GetContentsMargins", left as Any, top as Any, right as Any, bottom as Any]) }
    public func Grab(rectangle: QRect_ITF? = nil) -> QPixmap { callLocalFunction(l: ["", Pointer(), ___className, "Grab", rectangle as Any]) as! QPixmap }
    public func GrabGesture(gesture: Int, flags: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "GrabGesture", gesture as Any, flags as Any]) }
    public func GrabKeyboard() { _ = callLocalFunction(l: ["", Pointer(), ___className, "GrabKeyboard"]) }
    public func GrabMouse() { _ = callLocalFunction(l: ["", Pointer(), ___className, "GrabMouse"]) }
    public func GrabMouse2(cursor: QCursor_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "GrabMouse2", cursor as Any]) }
    public func GrabShortcut(key: QKeySequence_ITF? = nil, context: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "GrabShortcut", key as Any, context as Any]) as! Float) }
    public func GraphicsEffect() -> QGraphicsEffect { callLocalFunction(l: ["", Pointer(), ___className, "GraphicsEffect"]) as! QGraphicsEffect }
    public func GraphicsProxyWidget() -> QGraphicsProxyWidget { callLocalFunction(l: ["", Pointer(), ___className, "GraphicsProxyWidget"]) as! QGraphicsProxyWidget }
    public func HasEditFocus() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "HasEditFocus"]) as! Bool }
    public func HasFocus() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "HasFocus"]) as! Bool }
    public func ConnectHasHeightForWidth(f: @escaping () -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHasHeightForWidth", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectHasHeightForWidth() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHasHeightForWidth"]) }
    public func HasHeightForWidth() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "HasHeightForWidth"]) as! Bool }
    public func HasHeightForWidthDefault() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "HasHeightForWidthDefault"]) as! Bool }
    public func HasMouseTracking() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "HasMouseTracking"]) as! Bool }
    public func HasTabletTracking() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "HasTabletTracking"]) as! Bool }
    override public func Height() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Height"]) as! Float) }
    public func ConnectHeightForWidth(f: @escaping (_ w: Int) -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHeightForWidth", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectHeightForWidth() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHeightForWidth"]) }
    public func HeightForWidth(w: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "HeightForWidth", w as Any]) as! Float) }
    public func HeightForWidthDefault(w: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "HeightForWidthDefault", w as Any]) as! Float) }
    public func ConnectHide(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHide", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectHide() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHide"]) }
    public func Hide() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Hide"]) }
    public func HideDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "HideDefault"]) }
    public func ConnectHideEvent(f: @escaping (_ event: QHideEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHideEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QHideEvent) } as Any) }
    public func DisconnectHideEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHideEvent"]) }
    public func HideEvent(event: QHideEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "HideEvent", event as Any]) }
    public func HideEventDefault(event: QHideEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "HideEventDefault", event as Any]) }
    public func ConnectInitPainter(f: @escaping (_ painter: QPainter) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectInitPainter", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPainter) } as Any) }
    public func DisconnectInitPainter() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectInitPainter"]) }
    public func InitPainter(painter: QPainter_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InitPainter", painter as Any]) }
    public func InitPainterDefault(painter: QPainter_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InitPainterDefault", painter as Any]) }
    public func ConnectInputMethodEvent(f: @escaping (_ event: QInputMethodEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectInputMethodEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QInputMethodEvent) } as Any) }
    public func DisconnectInputMethodEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectInputMethodEvent"]) }
    public func InputMethodEvent(event: QInputMethodEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InputMethodEvent", event as Any]) }
    public func InputMethodEventDefault(event: QInputMethodEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InputMethodEventDefault", event as Any]) }
    public func InputMethodHints() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "InputMethodHints"]) as! Float) }
    public func ConnectInputMethodQuery(f: @escaping (_ query: Int) -> QVariant) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectInputMethodQuery", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectInputMethodQuery() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectInputMethodQuery"]) }
    public func InputMethodQuery(query: Int) -> QVariant { callLocalFunction(l: ["", Pointer(), ___className, "InputMethodQuery", query as Any]) as! QVariant }
    public func InputMethodQueryDefault(query: Int) -> QVariant { callLocalFunction(l: ["", Pointer(), ___className, "InputMethodQueryDefault", query as Any]) as! QVariant }
    public func InsertAction(before: QAction_ITF? = nil, action: QAction_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertAction", before as Any, action as Any]) }
    public func InsertActions(before: QAction_ITF? = nil, actions: [QAction]) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InsertActions", before as Any, actions as Any]) }
    public func IsActiveWindow() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsActiveWindow"]) as! Bool }
    public func IsAncestorOf(child: QWidget_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsAncestorOf", child as Any]) as! Bool }
    public func IsEnabled() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsEnabled"]) as! Bool }
    public func IsEnabledTo(ancestor: QWidget_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsEnabledTo", ancestor as Any]) as! Bool }
    public func IsFullScreen() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsFullScreen"]) as! Bool }
    public func IsHidden() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsHidden"]) as! Bool }
    public func IsMaximized() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsMaximized"]) as! Bool }
    public func IsMinimized() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsMinimized"]) as! Bool }
    public func IsModal() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsModal"]) as! Bool }
    public func IsVisible() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsVisible"]) as! Bool }
    public func IsVisibleTo(ancestor: QWidget_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsVisibleTo", ancestor as Any]) as! Bool }
    public func IsWindow() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsWindow"]) as! Bool }
    public func IsWindowModified() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsWindowModified"]) as! Bool }
    public func ConnectKeyPressEvent(f: @escaping (_ event: QKeyEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectKeyPressEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QKeyEvent) } as Any) }
    public func DisconnectKeyPressEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectKeyPressEvent"]) }
    public func KeyPressEvent(event: QKeyEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "KeyPressEvent", event as Any]) }
    public func KeyPressEventDefault(event: QKeyEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "KeyPressEventDefault", event as Any]) }
    public func ConnectKeyReleaseEvent(f: @escaping (_ event: QKeyEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectKeyReleaseEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QKeyEvent) } as Any) }
    public func DisconnectKeyReleaseEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectKeyReleaseEvent"]) }
    public func KeyReleaseEvent(event: QKeyEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "KeyReleaseEvent", event as Any]) }
    public func KeyReleaseEventDefault(event: QKeyEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "KeyReleaseEventDefault", event as Any]) }
    public func KeyboardGrabber() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "KeyboardGrabber"]) as! QWidget }
    public func Layout() -> QLayout { callLocalFunction(l: ["", Pointer(), ___className, "Layout"]) as! QLayout }
    public func LayoutDirection() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "LayoutDirection"]) as! Float) }
    public func ConnectLeaveEvent(f: @escaping (_ event: QEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectLeaveEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QEvent) } as Any) }
    public func DisconnectLeaveEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectLeaveEvent"]) }
    public func LeaveEvent(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "LeaveEvent", event as Any]) }
    public func LeaveEventDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "LeaveEventDefault", event as Any]) }
    public func Locale() -> QLocale { callLocalFunction(l: ["", Pointer(), ___className, "Locale"]) as! QLocale }
    public func ConnectLower(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectLower", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectLower() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectLower"]) }
    public func Lower() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Lower"]) }
    public func LowerDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "LowerDefault"]) }
    public func MapFrom(parent: QWidget_ITF? = nil, pos: QPoint_ITF? = nil) -> QPoint { callLocalFunction(l: ["", Pointer(), ___className, "MapFrom", parent as Any, pos as Any]) as! QPoint }
    public func MapFromGlobal(pos: QPoint_ITF? = nil) -> QPoint { callLocalFunction(l: ["", Pointer(), ___className, "MapFromGlobal", pos as Any]) as! QPoint }
    public func MapFromParent(pos: QPoint_ITF? = nil) -> QPoint { callLocalFunction(l: ["", Pointer(), ___className, "MapFromParent", pos as Any]) as! QPoint }
    public func MapTo(parent: QWidget_ITF? = nil, pos: QPoint_ITF? = nil) -> QPoint { callLocalFunction(l: ["", Pointer(), ___className, "MapTo", parent as Any, pos as Any]) as! QPoint }
    public func MapToGlobal(pos: QPoint_ITF? = nil) -> QPoint { callLocalFunction(l: ["", Pointer(), ___className, "MapToGlobal", pos as Any]) as! QPoint }
    public func MapToParent(pos: QPoint_ITF? = nil) -> QPoint { callLocalFunction(l: ["", Pointer(), ___className, "MapToParent", pos as Any]) as! QPoint }
    public func Mask() -> QRegion { callLocalFunction(l: ["", Pointer(), ___className, "Mask"]) as! QRegion }
    public func MaximumHeight() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "MaximumHeight"]) as! Float) }
    public func MaximumSize() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "MaximumSize"]) as! QSize }
    public func MaximumWidth() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "MaximumWidth"]) as! Float) }
    override public func ConnectMetric(f: @escaping (_ m: Int) -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMetric", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    override public func DisconnectMetric() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMetric"]) }
    override public func Metric(metric: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Metric", metric as Any]) as! Float) }
    public func MetricDefault(m: Int) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "MetricDefault", m as Any]) as! Float) }
    public func MinimumHeight() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "MinimumHeight"]) as! Float) }
    public func MinimumSize() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "MinimumSize"]) as! QSize }
    public func ConnectMinimumSizeHint(f: @escaping () -> QSize) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMinimumSizeHint", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectMinimumSizeHint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMinimumSizeHint"]) }
    public func MinimumSizeHint() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "MinimumSizeHint"]) as! QSize }
    public func MinimumSizeHintDefault() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "MinimumSizeHintDefault"]) as! QSize }
    public func MinimumWidth() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "MinimumWidth"]) as! Float) }
    public func ConnectMouseDoubleClickEvent(f: @escaping (_ event: QMouseEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMouseDoubleClickEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QMouseEvent) } as Any) }
    public func DisconnectMouseDoubleClickEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMouseDoubleClickEvent"]) }
    public func MouseDoubleClickEvent(event: QMouseEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MouseDoubleClickEvent", event as Any]) }
    public func MouseDoubleClickEventDefault(event: QMouseEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MouseDoubleClickEventDefault", event as Any]) }
    public func MouseGrabber() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "MouseGrabber"]) as! QWidget }
    public func ConnectMouseMoveEvent(f: @escaping (_ event: QMouseEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMouseMoveEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QMouseEvent) } as Any) }
    public func DisconnectMouseMoveEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMouseMoveEvent"]) }
    public func MouseMoveEvent(event: QMouseEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MouseMoveEvent", event as Any]) }
    public func MouseMoveEventDefault(event: QMouseEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MouseMoveEventDefault", event as Any]) }
    public func ConnectMousePressEvent(f: @escaping (_ event: QMouseEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMousePressEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QMouseEvent) } as Any) }
    public func DisconnectMousePressEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMousePressEvent"]) }
    public func MousePressEvent(event: QMouseEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MousePressEvent", event as Any]) }
    public func MousePressEventDefault(event: QMouseEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MousePressEventDefault", event as Any]) }
    public func ConnectMouseReleaseEvent(f: @escaping (_ event: QMouseEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMouseReleaseEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QMouseEvent) } as Any) }
    public func DisconnectMouseReleaseEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMouseReleaseEvent"]) }
    public func MouseReleaseEvent(event: QMouseEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MouseReleaseEvent", event as Any]) }
    public func MouseReleaseEventDefault(event: QMouseEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MouseReleaseEventDefault", event as Any]) }
    public func Move(vqp: QPoint_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Move", vqp as Any]) }
    public func Move2(x: Int, y: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Move2", x as Any, y as Any]) }
    public func ConnectMoveEvent(f: @escaping (_ event: QMoveEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMoveEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QMoveEvent) } as Any) }
    public func DisconnectMoveEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMoveEvent"]) }
    public func MoveEvent(event: QMoveEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MoveEvent", event as Any]) }
    public func MoveEventDefault(event: QMoveEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "MoveEventDefault", event as Any]) }
    public func ConnectNativeEvent(f: @escaping (_ eventType: QByteArray, _ message: Int, _ result: Int) -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectNativeEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QByteArray, Int(inp[1] as! Float), Int(inp[2] as! Float)) } as Any) }
    public func DisconnectNativeEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectNativeEvent"]) }
    public func NativeEvent(eventType: QByteArray_ITF? = nil, message: Int, result: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "NativeEvent", eventType as Any, message as Any, result as Any]) as! Bool }
    public func NativeEventDefault(eventType: QByteArray_ITF? = nil, message: Int, result: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "NativeEventDefault", eventType as Any, message as Any, result as Any]) as! Bool }
    public func NativeParentWidget() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "NativeParentWidget"]) as! QWidget }
    public func NextInFocusChain() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "NextInFocusChain"]) as! QWidget }
    public func NormalGeometry() -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "NormalGeometry"]) as! QRect }
    public func OverrideWindowFlags(flags: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "OverrideWindowFlags", flags as Any]) }
    override public func ConnectPaintEngine(f: @escaping () -> QPaintEngine) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPaintEngine", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectPaintEngine() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPaintEngine"]) }
    override public func PaintEngine() -> QPaintEngine { callLocalFunction(l: ["", Pointer(), ___className, "PaintEngine"]) as! QPaintEngine }
    public func PaintEngineDefault() -> QPaintEngine { callLocalFunction(l: ["", Pointer(), ___className, "PaintEngineDefault"]) as! QPaintEngine }
    public func ConnectPaintEvent(f: @escaping (_ event: QPaintEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPaintEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QPaintEvent) } as Any) }
    public func DisconnectPaintEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPaintEvent"]) }
    public func PaintEvent(event: QPaintEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "PaintEvent", event as Any]) }
    public func PaintEventDefault(event: QPaintEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "PaintEventDefault", event as Any]) }
    public func Palette() -> QPalette { callLocalFunction(l: ["", Pointer(), ___className, "Palette"]) as! QPalette }
    public func ParentWidget() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "ParentWidget"]) as! QWidget }
    public func Pos() -> QPoint { callLocalFunction(l: ["", Pointer(), ___className, "Pos"]) as! QPoint }
    public func PreviousInFocusChain() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "PreviousInFocusChain"]) as! QWidget }
    public func ConnectRaise(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRaise", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectRaise() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRaise"]) }
    public func Raise() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Raise"]) }
    public func RaiseDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "RaiseDefault"]) }
    public func Rect() -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "Rect"]) as! QRect }
    public func ReleaseKeyboard() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ReleaseKeyboard"]) }
    public func ReleaseMouse() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ReleaseMouse"]) }
    public func ReleaseShortcut(id: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ReleaseShortcut", id as Any]) }
    public func RemoveAction(action: QAction_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemoveAction", action as Any]) }
    public func Render(target: QPaintDevice_ITF? = nil, targetOffset: QPoint_ITF? = nil, sourceRegion: QRegion_ITF? = nil, renderFlags: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Render", target as Any, targetOffset as Any, sourceRegion as Any, renderFlags as Any]) }
    public func Render2(painter: QPainter_ITF? = nil, targetOffset: QPoint_ITF? = nil, sourceRegion: QRegion_ITF? = nil, renderFlags: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Render2", painter as Any, targetOffset as Any, sourceRegion as Any, renderFlags as Any]) }
    public func ConnectRepaint(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRepaint", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectRepaint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRepaint"]) }
    public func Repaint() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Repaint"]) }
    public func RepaintDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "RepaintDefault"]) }
    public func Repaint2(x: Int, y: Int, w: Int, h: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Repaint2", x as Any, y as Any, w as Any, h as Any]) }
    public func Repaint3(rect: QRect_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Repaint3", rect as Any]) }
    public func Repaint4(rgn: QRegion_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Repaint4", rgn as Any]) }
    public func Resize(vqs: QSize_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Resize", vqs as Any]) }
    public func Resize2(w: Int, h: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Resize2", w as Any, h as Any]) }
    public func ConnectResizeEvent(f: @escaping (_ event: QResizeEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectResizeEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QResizeEvent) } as Any) }
    public func DisconnectResizeEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectResizeEvent"]) }
    public func ResizeEvent(event: QResizeEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResizeEvent", event as Any]) }
    public func ResizeEventDefault(event: QResizeEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ResizeEventDefault", event as Any]) }
    public func RestoreGeometry(geometry: QByteArray_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "RestoreGeometry", geometry as Any]) as! Bool }
    public func SaveGeometry() -> QByteArray { callLocalFunction(l: ["", Pointer(), ___className, "SaveGeometry"]) as! QByteArray }
    public func Scroll(dx: Int, dy: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Scroll", dx as Any, dy as Any]) }
    public func Scroll2(dx: Int, dy: Int, r: QRect_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Scroll2", dx as Any, dy as Any, r as Any]) }
    public func SetAcceptDrops(on: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAcceptDrops", on as Any]) }
    public func SetAccessibleDescription(description: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAccessibleDescription", description as Any]) }
    public func SetAccessibleName(name: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAccessibleName", name as Any]) }
    public func SetAttribute(attribute: Int, on: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAttribute", attribute as Any, on as Any]) }
    public func SetAutoFillBackground(enabled: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetAutoFillBackground", enabled as Any]) }
    public func SetBackgroundRole(role: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetBackgroundRole", role as Any]) }
    public func SetBaseSize(vqs: QSize_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetBaseSize", vqs as Any]) }
    public func SetBaseSize2(basew: Int, baseh: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetBaseSize2", basew as Any, baseh as Any]) }
    public func SetContentsMargins(left: Int, top: Int, right: Int, bottom: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetContentsMargins", left as Any, top as Any, right as Any, bottom as Any]) }
    public func SetContentsMargins2(margins: QMargins_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetContentsMargins2", margins as Any]) }
    public func SetContextMenuPolicy(policy: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetContextMenuPolicy", policy as Any]) }
    public func SetCursor(vqc: QCursor_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCursor", vqc as Any]) }
    public func ConnectSetDisabled(f: @escaping (_ disable: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetDisabled", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectSetDisabled() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetDisabled"]) }
    public func SetDisabled(disable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDisabled", disable as Any]) }
    public func SetDisabledDefault(disable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDisabledDefault", disable as Any]) }
    public func SetEditFocus(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetEditFocus", enable as Any]) }
    public func ConnectSetEnabled(f: @escaping (_ vbo: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetEnabled", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectSetEnabled() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetEnabled"]) }
    public func SetEnabled(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetEnabled", vbo as Any]) }
    public func SetEnabledDefault(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetEnabledDefault", vbo as Any]) }
    public func SetFixedHeight(h: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFixedHeight", h as Any]) }
    public func SetFixedSize(s: QSize_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFixedSize", s as Any]) }
    public func SetFixedSize2(w: Int, h: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFixedSize2", w as Any, h as Any]) }
    public func SetFixedWidth(w: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFixedWidth", w as Any]) }
    public func SetFocus(reason: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFocus", reason as Any]) }
    public func ConnectSetFocus2(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetFocus2", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectSetFocus2() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetFocus2"]) }
    public func SetFocus2() { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFocus2"]) }
    public func SetFocus2Default() { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFocus2Default"]) }
    public func SetFocusPolicy(policy: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFocusPolicy", policy as Any]) }
    public func SetFocusProxy(w: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFocusProxy", w as Any]) }
    public func SetFont(vqf: QFont_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFont", vqf as Any]) }
    public func SetForegroundRole(role: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetForegroundRole", role as Any]) }
    public func SetGeometry(vqr: QRect_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetGeometry", vqr as Any]) }
    public func SetGeometry2(x: Int, y: Int, w: Int, h: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetGeometry2", x as Any, y as Any, w as Any, h as Any]) }
    public func SetGraphicsEffect(effect: QGraphicsEffect_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetGraphicsEffect", effect as Any]) }
    public func ConnectSetHidden(f: @escaping (_ hidden: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetHidden", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectSetHidden() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetHidden"]) }
    public func SetHidden(hidden: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetHidden", hidden as Any]) }
    public func SetHiddenDefault(hidden: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetHiddenDefault", hidden as Any]) }
    public func SetInputMethodHints(hints: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetInputMethodHints", hints as Any]) }
    public func SetLayout(layout: QLayout_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetLayout", layout as Any]) }
    public func SetLayoutDirection(direction: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetLayoutDirection", direction as Any]) }
    public func SetLocale(locale: QLocale_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetLocale", locale as Any]) }
    public func SetMask(bitmap: QBitmap_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMask", bitmap as Any]) }
    public func SetMask2(region: QRegion_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMask2", region as Any]) }
    public func SetMaximumHeight(maxh: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMaximumHeight", maxh as Any]) }
    public func SetMaximumSize(vqs: QSize_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMaximumSize", vqs as Any]) }
    public func SetMaximumSize2(maxw: Int, maxh: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMaximumSize2", maxw as Any, maxh as Any]) }
    public func SetMaximumWidth(maxw: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMaximumWidth", maxw as Any]) }
    public func SetMinimumHeight(minh: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMinimumHeight", minh as Any]) }
    public func SetMinimumSize(vqs: QSize_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMinimumSize", vqs as Any]) }
    public func SetMinimumSize2(minw: Int, minh: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMinimumSize2", minw as Any, minh as Any]) }
    public func SetMinimumWidth(minw: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMinimumWidth", minw as Any]) }
    public func SetMouseTracking(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetMouseTracking", enable as Any]) }
    public func SetPalette(vqp: QPalette_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPalette", vqp as Any]) }
    public func SetParent_QWidget(parent: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetParent", parent as Any]) }
    public func SetParent2(parent: QWidget_ITF? = nil, ff: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetParent2", parent as Any, ff as Any]) }
    public func SetShortcutAutoRepeat(id: Int, enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetShortcutAutoRepeat", id as Any, enable as Any]) }
    public func SetShortcutEnabled(id: Int, enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetShortcutEnabled", id as Any, enable as Any]) }
    public func SetSizeIncrement(vqs: QSize_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSizeIncrement", vqs as Any]) }
    public func SetSizeIncrement2(w: Int, h: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSizeIncrement2", w as Any, h as Any]) }
    public func SetSizePolicy(vqs: QSizePolicy_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSizePolicy", vqs as Any]) }
    public func SetSizePolicy2(horizontal: Int, vertical: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSizePolicy2", horizontal as Any, vertical as Any]) }
    public func SetStatusTip(vqs: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStatusTip", vqs as Any]) }
    public func SetStyle(style: QStyle_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStyle", style as Any]) }
    public func ConnectSetStyleSheet(f: @escaping (_ styleSheet: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetStyleSheet", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectSetStyleSheet() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetStyleSheet"]) }
    public func SetStyleSheet(styleSheet: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStyleSheet", styleSheet as Any]) }
    public func SetStyleSheetDefault(styleSheet: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStyleSheetDefault", styleSheet as Any]) }
    public func SetTabOrder(first: QWidget_ITF? = nil, second: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabOrder", first as Any, second as Any]) }
    public func SetTabletTracking(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTabletTracking", enable as Any]) }
    public func SetToolTip(vqs: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetToolTip", vqs as Any]) }
    public func SetToolTipDuration(msec: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetToolTipDuration", msec as Any]) }
    public func SetUpdatesEnabled(enable: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetUpdatesEnabled", enable as Any]) }
    public func ConnectSetVisible(f: @escaping (_ visible: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetVisible", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectSetVisible() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetVisible"]) }
    public func SetVisible(visible: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetVisible", visible as Any]) }
    public func SetVisibleDefault(visible: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetVisibleDefault", visible as Any]) }
    public func SetWhatsThis(vqs: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWhatsThis", vqs as Any]) }
    public func SetWindowFilePath(filePath: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWindowFilePath", filePath as Any]) }
    public func SetWindowFlag(flag: Int, on: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWindowFlag", flag as Any, on as Any]) }
    public func SetWindowFlags(ty: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWindowFlags", ty as Any]) }
    public func SetWindowIcon(icon: QIcon_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWindowIcon", icon as Any]) }
    public func SetWindowIconText(vqs: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWindowIconText", vqs as Any]) }
    public func SetWindowModality(windowModality: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWindowModality", windowModality as Any]) }
    public func ConnectSetWindowModified(f: @escaping (_ vbo: Bool) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetWindowModified", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! Bool) } as Any) }
    public func DisconnectSetWindowModified() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetWindowModified"]) }
    public func SetWindowModified(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWindowModified", vbo as Any]) }
    public func SetWindowModifiedDefault(vbo: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWindowModifiedDefault", vbo as Any]) }
    public func SetWindowOpacity(level: Float) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWindowOpacity", level as Any]) }
    public func SetWindowRole(role: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWindowRole", role as Any]) }
    public func SetWindowState(windowState: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWindowState", windowState as Any]) }
    public func ConnectSetWindowTitle(f: @escaping (_ vqs: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetWindowTitle", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectSetWindowTitle() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetWindowTitle"]) }
    public func SetWindowTitle(vqs: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWindowTitle", vqs as Any]) }
    public func SetWindowTitleDefault(vqs: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWindowTitleDefault", vqs as Any]) }
    public func SetupUi(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetupUi", widget as Any]) }
    public func ConnectShow(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectShow", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectShow() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectShow"]) }
    public func Show() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Show"]) }
    public func ShowDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowDefault"]) }
    public func ConnectShowEvent(f: @escaping (_ event: QShowEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectShowEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QShowEvent) } as Any) }
    public func DisconnectShowEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectShowEvent"]) }
    public func ShowEvent(event: QShowEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowEvent", event as Any]) }
    public func ShowEventDefault(event: QShowEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowEventDefault", event as Any]) }
    public func ConnectShowFullScreen(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectShowFullScreen", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectShowFullScreen() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectShowFullScreen"]) }
    public func ShowFullScreen() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowFullScreen"]) }
    public func ShowFullScreenDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowFullScreenDefault"]) }
    public func ConnectShowMaximized(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectShowMaximized", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectShowMaximized() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectShowMaximized"]) }
    public func ShowMaximized() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowMaximized"]) }
    public func ShowMaximizedDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowMaximizedDefault"]) }
    public func ConnectShowMinimized(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectShowMinimized", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectShowMinimized() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectShowMinimized"]) }
    public func ShowMinimized() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowMinimized"]) }
    public func ShowMinimizedDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowMinimizedDefault"]) }
    public func ConnectShowNormal(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectShowNormal", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectShowNormal() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectShowNormal"]) }
    public func ShowNormal() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowNormal"]) }
    public func ShowNormalDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "ShowNormalDefault"]) }
    public func Size() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "Size"]) as! QSize }
    public func ConnectSizeHint(f: @escaping () -> QSize) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSizeHint", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectSizeHint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSizeHint"]) }
    public func SizeHint() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "SizeHint"]) as! QSize }
    public func SizeHintDefault() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "SizeHintDefault"]) as! QSize }
    public func SizeIncrement() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "SizeIncrement"]) as! QSize }
    public func SizePolicy() -> QSizePolicy { callLocalFunction(l: ["", Pointer(), ___className, "SizePolicy"]) as! QSizePolicy }
    public func StackUnder(w: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "StackUnder", w as Any]) }
    public func StatusTip() -> String { callLocalFunction(l: ["", Pointer(), ___className, "StatusTip"]) as! String }
    public func Style() -> QStyle { callLocalFunction(l: ["", Pointer(), ___className, "Style"]) as! QStyle }
    public func StyleSheet() -> String { callLocalFunction(l: ["", Pointer(), ___className, "StyleSheet"]) as! String }
    public func ConnectTabletEvent(f: @escaping (_ event: QTabletEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectTabletEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QTabletEvent) } as Any) }
    public func DisconnectTabletEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectTabletEvent"]) }
    public func TabletEvent(event: QTabletEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TabletEvent", event as Any]) }
    public func TabletEventDefault(event: QTabletEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TabletEventDefault", event as Any]) }
    public func TestAttribute(attribute: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "TestAttribute", attribute as Any]) as! Bool }
    public func ToolTip() -> String { callLocalFunction(l: ["", Pointer(), ___className, "ToolTip"]) as! String }
    public func ToolTipDuration() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ToolTipDuration"]) as! Float) }
    public func UnderMouse() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "UnderMouse"]) as! Bool }
    public func UngrabGesture(gesture: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "UngrabGesture", gesture as Any]) }
    public func UnsetCursor() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UnsetCursor"]) }
    public func UnsetLayoutDirection() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UnsetLayoutDirection"]) }
    public func UnsetLocale() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UnsetLocale"]) }
    public func ConnectUpdate(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectUpdate", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectUpdate() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectUpdate"]) }
    public func Update() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Update"]) }
    public func UpdateDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UpdateDefault"]) }
    public func Update2(x: Int, y: Int, w: Int, h: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Update2", x as Any, y as Any, w as Any, h as Any]) }
    public func Update3(rect: QRect_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Update3", rect as Any]) }
    public func Update4(rgn: QRegion_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Update4", rgn as Any]) }
    public func UpdateGeometry() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UpdateGeometry"]) }
    public func ConnectUpdateMicroFocus(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectUpdateMicroFocus", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectUpdateMicroFocus() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectUpdateMicroFocus"]) }
    public func UpdateMicroFocus() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UpdateMicroFocus"]) }
    public func UpdateMicroFocusDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "UpdateMicroFocusDefault"]) }
    public func UpdatesEnabled() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "UpdatesEnabled"]) as! Bool }
    public func VisibleRegion() -> QRegion { callLocalFunction(l: ["", Pointer(), ___className, "VisibleRegion"]) as! QRegion }
    public func WhatsThis() -> String { callLocalFunction(l: ["", Pointer(), ___className, "WhatsThis"]) as! String }
    public func ConnectWheelEvent(f: @escaping (_ event: QWheelEvent) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectWheelEvent", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QWheelEvent) } as Any) }
    public func DisconnectWheelEvent() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectWheelEvent"]) }
    public func WheelEvent(event: QWheelEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "WheelEvent", event as Any]) }
    public func WheelEventDefault(event: QWheelEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "WheelEventDefault", event as Any]) }
    override public func Width() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Width"]) as! Float) }
    public func WinId() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "WinId"]) as! Float) }
    public func Window() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "Window"]) as! QWidget }
    public func WindowFilePath() -> String { callLocalFunction(l: ["", Pointer(), ___className, "WindowFilePath"]) as! String }
    public func WindowFlags() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "WindowFlags"]) as! Float) }
    public func WindowHandle() -> QWindow { callLocalFunction(l: ["", Pointer(), ___className, "WindowHandle"]) as! QWindow }
    public func WindowIcon() -> QIcon { callLocalFunction(l: ["", Pointer(), ___className, "WindowIcon"]) as! QIcon }
    public func ConnectWindowIconChanged(f: @escaping (_ icon: QIcon) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectWindowIconChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QIcon) } as Any) }
    public func DisconnectWindowIconChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectWindowIconChanged"]) }
    public func WindowIconChanged(icon: QIcon_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "WindowIconChanged", icon as Any]) }
    public func WindowIconText() -> String { callLocalFunction(l: ["", Pointer(), ___className, "WindowIconText"]) as! String }
    public func WindowModality() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "WindowModality"]) as! Float) }
    public func WindowOpacity() -> Float { callLocalFunction(l: ["", Pointer(), ___className, "WindowOpacity"]) as! Float }
    public func WindowRole() -> String { callLocalFunction(l: ["", Pointer(), ___className, "WindowRole"]) as! String }
    public func WindowState() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "WindowState"]) as! Float) }
    public func WindowTitle() -> String { callLocalFunction(l: ["", Pointer(), ___className, "WindowTitle"]) as! String }
    public func ConnectWindowTitleChanged(f: @escaping (_ title: String) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectWindowTitleChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! String) } as Any) }
    public func DisconnectWindowTitleChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectWindowTitleChanged"]) }
    public func WindowTitleChanged(title: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "WindowTitleChanged", title as Any]) }
    public func WindowType() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "WindowType"]) as! Float) }
    public func X() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "X"]) as! Float) }
    public func Y() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Y"]) as! Float) }
    public func ConnectDestroyQWidget(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQWidget", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQWidget() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQWidget"]) }
    public func DestroyQWidget() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQWidget"]) }
    public func DestroyQWidgetDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQWidgetDefault"]) }
    public func ChildEvent(event: QChildEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ChildEvent", event as Any]) }
    public func ChildEventDefault(event: QChildEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ChildEventDefault", event as Any]) }
    public func ConnectNotify(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ConnectNotify", sign as Any]) }
    public func ConnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ConnectNotifyDefault", sign as Any]) }
    public func CustomEvent(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CustomEvent", event as Any]) }
    public func CustomEventDefault(event: QEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CustomEventDefault", event as Any]) }
    public func DeleteLater() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DeleteLater"]) }
    public func DeleteLaterDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DeleteLaterDefault"]) }
    public func DisconnectNotify(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DisconnectNotify", sign as Any]) }
    public func DisconnectNotifyDefault(sign: QMetaMethod_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DisconnectNotifyDefault", sign as Any]) }
    public func EventFilter(watched: QObject_ITF? = nil, event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventFilter", watched as Any, event as Any]) as! Bool }
    public func EventFilterDefault(watched: QObject_ITF? = nil, event: QEvent_ITF? = nil) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "EventFilterDefault", watched as Any, event as Any]) as! Bool }
    public func MetaObject() -> QMetaObject { callLocalFunction(l: ["", Pointer(), ___className, "MetaObject"]) as! QMetaObject }
    public func MetaObjectDefault() -> QMetaObject { callLocalFunction(l: ["", Pointer(), ___className, "MetaObjectDefault"]) as! QMetaObject }
    public func TimerEvent(event: QTimerEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TimerEvent", event as Any]) }
    public func TimerEventDefault(event: QTimerEvent_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "TimerEventDefault", event as Any]) }
}

public func NewQWidgetFromPointer(ptr: String) -> QWidget { let r = QWidget(); r.initFrom(p: ptr, n: "widgets.QWidget"); return r }
public func NewQWidget(parent: QWidget_ITF? = nil, ff: Int) -> QWidget { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQWidget", "", parent as Any, ff as Any]) as! QWidget }
public func QWidget_CreateWindowContainer(window: QWindow_ITF? = nil, parent: QWidget_ITF? = nil, flags: Int) -> QWidget { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QWidget_CreateWindowContainer", "", window as Any, parent as Any, flags as Any]) as! QWidget }
public func QWidget_Find(id: Int) -> QWidget { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QWidget_Find", "", id as Any]) as! QWidget }
public func QWidget_KeyboardGrabber() -> QWidget { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QWidget_KeyboardGrabber", ""]) as! QWidget }
public func QWidget_MouseGrabber() -> QWidget { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.QWidget_MouseGrabber", ""]) as! QWidget }
public func QWidget_SetTabOrder(first: QWidget_ITF? = nil, second: QWidget_ITF? = nil) { Widgets.initModule(); _ = callLocalFunction(l: ["", "", "widgets.QWidget_SetTabOrder", "", first as Any, second as Any]) }
public protocol QWidgetAction_ITF: QAction_ITF {
    func QWidgetAction_PTR() -> QWidgetAction
}

public class QWidgetAction: QAction, QWidgetAction_ITF {
    public func QWidgetAction_PTR() -> QWidgetAction { callLocalFunction(l: ["", Pointer(), ___className, "QWidgetAction_PTR"]) as! QWidgetAction }
    public func ConnectCreateWidget(f: @escaping (_ parent: QWidget) -> QWidget) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCreateWidget", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QWidget) } as Any) }
    public func DisconnectCreateWidget() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCreateWidget"]) }
    public func CreateWidget(parent: QWidget_ITF? = nil) -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "CreateWidget", parent as Any]) as! QWidget }
    public func CreateWidgetDefault(parent: QWidget_ITF? = nil) -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "CreateWidgetDefault", parent as Any]) as! QWidget }
    public func CreatedWidgets() -> [QWidget] { callLocalFunction(l: ["", Pointer(), ___className, "CreatedWidgets"]) as! [QWidget] }
    public func DefaultWidget() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "DefaultWidget"]) as! QWidget }
    public func ConnectDeleteWidget(f: @escaping (_ widget: QWidget) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDeleteWidget", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QWidget) } as Any) }
    public func DisconnectDeleteWidget() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDeleteWidget"]) }
    public func DeleteWidget(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DeleteWidget", widget as Any]) }
    public func DeleteWidgetDefault(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DeleteWidgetDefault", widget as Any]) }
    public func ReleaseWidget(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "ReleaseWidget", widget as Any]) }
    public func RequestWidget(parent: QWidget_ITF? = nil) -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "RequestWidget", parent as Any]) as! QWidget }
    public func SetDefaultWidget(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDefaultWidget", widget as Any]) }
    public func ConnectDestroyQWidgetAction(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQWidgetAction", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQWidgetAction() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQWidgetAction"]) }
    public func DestroyQWidgetAction() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQWidgetAction"]) }
    public func DestroyQWidgetActionDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQWidgetActionDefault"]) }
}

public func NewQWidgetActionFromPointer(ptr: String) -> QWidgetAction { let r = QWidgetAction(); r.initFrom(p: ptr, n: "widgets.QWidgetAction"); return r }
public func NewQWidgetAction(parent: QObject_ITF? = nil) -> QWidgetAction { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQWidgetAction", "", parent as Any]) as! QWidgetAction }
public protocol QWidgetItem_ITF: QLayoutItem_ITF {
    func QWidgetItem_PTR() -> QWidgetItem
}

public class QWidgetItem: QLayoutItem, QWidgetItem_ITF {
    public func QWidgetItem_PTR() -> QWidgetItem { callLocalFunction(l: ["", Pointer(), ___className, "QWidgetItem_PTR"]) as! QWidgetItem }
    override public func ConnectExpandingDirections(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectExpandingDirections", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectExpandingDirections() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectExpandingDirections"]) }
    override public func ExpandingDirections() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ExpandingDirections"]) as! Float) }
    public func ExpandingDirectionsDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "ExpandingDirectionsDefault"]) as! Float) }
    override public func ConnectGeometry(f: @escaping () -> QRect) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectGeometry", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectGeometry() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectGeometry"]) }
    override public func Geometry() -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "Geometry"]) as! QRect }
    public func GeometryDefault() -> QRect { callLocalFunction(l: ["", Pointer(), ___className, "GeometryDefault"]) as! QRect }
    override public func ConnectIsEmpty(f: @escaping () -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectIsEmpty", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectIsEmpty() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectIsEmpty"]) }
    override public func IsEmpty() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsEmpty"]) as! Bool }
    public func IsEmptyDefault() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsEmptyDefault"]) as! Bool }
    override public func ConnectMaximumSize(f: @escaping () -> QSize) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMaximumSize", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectMaximumSize() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMaximumSize"]) }
    override public func MaximumSize() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "MaximumSize"]) as! QSize }
    public func MaximumSizeDefault() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "MaximumSizeDefault"]) as! QSize }
    override public func ConnectMinimumSize(f: @escaping () -> QSize) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectMinimumSize", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectMinimumSize() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectMinimumSize"]) }
    override public func MinimumSize() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "MinimumSize"]) as! QSize }
    public func MinimumSizeDefault() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "MinimumSizeDefault"]) as! QSize }
    override public func ConnectSetGeometry(f: @escaping (_ rect: QRect) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSetGeometry", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(inp[0] as! QRect) } as Any) }
    override public func DisconnectSetGeometry() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSetGeometry"]) }
    override public func SetGeometry(r: QRect_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetGeometry", r as Any]) }
    public func SetGeometryDefault(rect: QRect_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetGeometryDefault", rect as Any]) }
    override public func ConnectSizeHint(f: @escaping () -> QSize) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectSizeHint", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    override public func DisconnectSizeHint() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectSizeHint"]) }
    override public func SizeHint() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "SizeHint"]) as! QSize }
    public func SizeHintDefault() -> QSize { callLocalFunction(l: ["", Pointer(), ___className, "SizeHintDefault"]) as! QSize }
    public func ConnectDestroyQWidgetItem(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQWidgetItem", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQWidgetItem() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQWidgetItem"]) }
    public func DestroyQWidgetItem() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQWidgetItem"]) }
    public func DestroyQWidgetItemDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQWidgetItemDefault"]) }
}

public func NewQWidgetItemFromPointer(ptr: String) -> QWidgetItem { let r = QWidgetItem(); r.initFrom(p: ptr, n: "widgets.QWidgetItem"); return r }
public func NewQWidgetItem2(widget: QWidget_ITF? = nil) -> QWidgetItem { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQWidgetItem2", "", widget as Any]) as! QWidgetItem }
public protocol QWizard_ITF: QDialog_ITF {
    func QWizard_PTR() -> QWizard
}

public class QWizard: QDialog, QWizard_ITF {
    public func QWizard_PTR() -> QWizard { callLocalFunction(l: ["", Pointer(), ___className, "QWizard_PTR"]) as! QWizard }
    public func AddPage(page: QWizardPage_ITF? = nil) -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "AddPage", page as Any]) as! Float) }
    public func ConnectBack(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectBack", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectBack() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectBack"]) }
    public func Back() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Back"]) }
    public func BackDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "BackDefault"]) }
    public func Button(which: Int) -> QAbstractButton { callLocalFunction(l: ["", Pointer(), ___className, "Button", which as Any]) as! QAbstractButton }
    public func ButtonText(which: Int) -> String { callLocalFunction(l: ["", Pointer(), ___className, "ButtonText", which as Any]) as! String }
    public func ConnectCleanupPage(f: @escaping (_ id: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCleanupPage", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectCleanupPage() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCleanupPage"]) }
    public func CleanupPage(id: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CleanupPage", id as Any]) }
    public func CleanupPageDefault(id: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CleanupPageDefault", id as Any]) }
    public func CurrentId() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "CurrentId"]) as! Float) }
    public func ConnectCurrentIdChanged(f: @escaping (_ id: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCurrentIdChanged", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectCurrentIdChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCurrentIdChanged"]) }
    public func CurrentIdChanged(id: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CurrentIdChanged", id as Any]) }
    public func CurrentPage() -> QWizardPage { callLocalFunction(l: ["", Pointer(), ___className, "CurrentPage"]) as! QWizardPage }
    public func ConnectCustomButtonClicked(f: @escaping (_ which: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCustomButtonClicked", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectCustomButtonClicked() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCustomButtonClicked"]) }
    public func CustomButtonClicked(which: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "CustomButtonClicked", which as Any]) }
    override public func ConnectDone(f: @escaping (_ result: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDone", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    override public func DisconnectDone() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDone"]) }
    override public func Done(r: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "Done", r as Any]) }
    override public func DoneDefault(r: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "DoneDefault", r as Any]) }
    public func Field(name: String) -> QVariant { callLocalFunction(l: ["", Pointer(), ___className, "Field", name as Any]) as! QVariant }
    public func HasVisitedPage(id: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "HasVisitedPage", id as Any]) as! Bool }
    public func ConnectHelpRequested(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectHelpRequested", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectHelpRequested() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectHelpRequested"]) }
    public func HelpRequested() { _ = callLocalFunction(l: ["", Pointer(), ___className, "HelpRequested"]) }
    public func ConnectInitializePage(f: @escaping (_ id: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectInitializePage", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectInitializePage() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectInitializePage"]) }
    public func InitializePage(id: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InitializePage", id as Any]) }
    public func InitializePageDefault(id: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "InitializePageDefault", id as Any]) }
    public func ConnectNext(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectNext", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectNext() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectNext"]) }
    public func Next() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Next"]) }
    public func NextDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "NextDefault"]) }
    public func ConnectNextId(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectNextId", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectNextId() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectNextId"]) }
    public func NextId() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "NextId"]) as! Float) }
    public func NextIdDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "NextIdDefault"]) as! Float) }
    public func Options() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "Options"]) as! Float) }
    public func Page(id: Int) -> QWizardPage { callLocalFunction(l: ["", Pointer(), ___className, "Page", id as Any]) as! QWizardPage }
    public func ConnectPageAdded(f: @escaping (_ id: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPageAdded", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectPageAdded() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPageAdded"]) }
    public func PageAdded(id: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "PageAdded", id as Any]) }
    public func PageIds() -> [Int] { callLocalFunction(l: ["", Pointer(), ___className, "PageIds"]) as! [Int] }
    public func ConnectPageRemoved(f: @escaping (_ id: Int) -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectPageRemoved", "___REMOTE_CALLBACK___"], f: { (inp: [Any]) -> Any in f(Int(inp[0] as! Float)) } as Any) }
    public func DisconnectPageRemoved() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectPageRemoved"]) }
    public func PageRemoved(id: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "PageRemoved", id as Any]) }
    public func Pixmap(which: Int) -> QPixmap { callLocalFunction(l: ["", Pointer(), ___className, "Pixmap", which as Any]) as! QPixmap }
    public func RemovePage(id: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RemovePage", id as Any]) }
    public func ConnectRestart(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectRestart", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectRestart() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectRestart"]) }
    public func Restart() { _ = callLocalFunction(l: ["", Pointer(), ___className, "Restart"]) }
    public func RestartDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "RestartDefault"]) }
    public func SetButton(which: Int, button: QAbstractButton_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetButton", which as Any, button as Any]) }
    public func SetButtonText(which: Int, text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetButtonText", which as Any, text as Any]) }
    public func SetDefaultProperty(className: String, property: String, changedSignal: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetDefaultProperty", className as Any, property as Any, changedSignal as Any]) }
    public func SetField(name: String, value: QVariant_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetField", name as Any, value as Any]) }
    public func SetOption(option: Int, on: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOption", option as Any, on as Any]) }
    public func SetOptions(options: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetOptions", options as Any]) }
    public func SetPage(id: Int, page: QWizardPage_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPage", id as Any, page as Any]) }
    public func SetPixmap(which: Int, pixmap: QPixmap_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPixmap", which as Any, pixmap as Any]) }
    public func SetSideWidget(widget: QWidget_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSideWidget", widget as Any]) }
    public func SetStartId(id: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetStartId", id as Any]) }
    public func SetSubTitleFormat(format: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSubTitleFormat", format as Any]) }
    public func SetTitleFormat(format: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTitleFormat", format as Any]) }
    public func SetWizardStyle(style: Int) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetWizardStyle", style as Any]) }
    public func SideWidget() -> QWidget { callLocalFunction(l: ["", Pointer(), ___className, "SideWidget"]) as! QWidget }
    public func StartId() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "StartId"]) as! Float) }
    public func SubTitleFormat() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "SubTitleFormat"]) as! Float) }
    public func TestOption(option: Int) -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "TestOption", option as Any]) as! Bool }
    public func TitleFormat() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "TitleFormat"]) as! Float) }
    public func ConnectValidateCurrentPage(f: @escaping () -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectValidateCurrentPage", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectValidateCurrentPage() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectValidateCurrentPage"]) }
    public func ValidateCurrentPage() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "ValidateCurrentPage"]) as! Bool }
    public func ValidateCurrentPageDefault() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "ValidateCurrentPageDefault"]) as! Bool }
    public func VisitedPages() -> [Int] { callLocalFunction(l: ["", Pointer(), ___className, "VisitedPages"]) as! [Int] }
    public func WizardStyle() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "WizardStyle"]) as! Float) }
    public func ConnectDestroyQWizard(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQWizard", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQWizard() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQWizard"]) }
    public func DestroyQWizard() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQWizard"]) }
    public func DestroyQWizardDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQWizardDefault"]) }
}

public func NewQWizardFromPointer(ptr: String) -> QWizard { let r = QWizard(); r.initFrom(p: ptr, n: "widgets.QWizard"); return r }
public func NewQWizard(parent: QWidget_ITF? = nil, flags: Int) -> QWizard { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQWizard", "", parent as Any, flags as Any]) as! QWizard }
public protocol QWizardPage_ITF: QWidget_ITF {
    func QWizardPage_PTR() -> QWizardPage
}

public class QWizardPage: QWidget, QWizardPage_ITF {
    public func QWizardPage_PTR() -> QWizardPage { callLocalFunction(l: ["", Pointer(), ___className, "QWizardPage_PTR"]) as! QWizardPage }
    public func ButtonText(which: Int) -> String { callLocalFunction(l: ["", Pointer(), ___className, "ButtonText", which as Any]) as! String }
    public func ConnectCleanupPage(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCleanupPage", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectCleanupPage() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCleanupPage"]) }
    public func CleanupPage() { _ = callLocalFunction(l: ["", Pointer(), ___className, "CleanupPage"]) }
    public func CleanupPageDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "CleanupPageDefault"]) }
    public func ConnectCompleteChanged(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectCompleteChanged", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectCompleteChanged() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectCompleteChanged"]) }
    public func CompleteChanged() { _ = callLocalFunction(l: ["", Pointer(), ___className, "CompleteChanged"]) }
    public func Field(name: String) -> QVariant { callLocalFunction(l: ["", Pointer(), ___className, "Field", name as Any]) as! QVariant }
    public func ConnectInitializePage(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectInitializePage", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectInitializePage() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectInitializePage"]) }
    public func InitializePage() { _ = callLocalFunction(l: ["", Pointer(), ___className, "InitializePage"]) }
    public func InitializePageDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "InitializePageDefault"]) }
    public func IsCommitPage() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsCommitPage"]) as! Bool }
    public func ConnectIsComplete(f: @escaping () -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectIsComplete", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectIsComplete() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectIsComplete"]) }
    public func IsComplete() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsComplete"]) as! Bool }
    public func IsCompleteDefault() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsCompleteDefault"]) as! Bool }
    public func IsFinalPage() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "IsFinalPage"]) as! Bool }
    public func ConnectNextId(f: @escaping () -> Int) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectNextId", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectNextId() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectNextId"]) }
    public func NextId() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "NextId"]) as! Float) }
    public func NextIdDefault() -> Int { Int(callLocalFunction(l: ["", Pointer(), ___className, "NextIdDefault"]) as! Float) }
    public func Pixmap(which: Int) -> QPixmap { callLocalFunction(l: ["", Pointer(), ___className, "Pixmap", which as Any]) as! QPixmap }
    public func RegisterField(name: String, widget: QWidget_ITF? = nil, property: String, changedSignal: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "RegisterField", name as Any, widget as Any, property as Any, changedSignal as Any]) }
    public func SetButtonText(which: Int, text: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetButtonText", which as Any, text as Any]) }
    public func SetCommitPage(commitPage: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetCommitPage", commitPage as Any]) }
    public func SetField(name: String, value: QVariant_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetField", name as Any, value as Any]) }
    public func SetFinalPage(finalPage: Bool) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetFinalPage", finalPage as Any]) }
    public func SetPixmap(which: Int, pixmap: QPixmap_ITF? = nil) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetPixmap", which as Any, pixmap as Any]) }
    public func SetSubTitle(subTitle: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetSubTitle", subTitle as Any]) }
    public func SetTitle(title: String) { _ = callLocalFunction(l: ["", Pointer(), ___className, "SetTitle", title as Any]) }
    public func SubTitle() -> String { callLocalFunction(l: ["", Pointer(), ___className, "SubTitle"]) as! String }
    public func Title() -> String { callLocalFunction(l: ["", Pointer(), ___className, "Title"]) as! String }
    public func ConnectValidatePage(f: @escaping () -> Bool) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectValidatePage", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectValidatePage() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectValidatePage"]) }
    public func ValidatePage() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "ValidatePage"]) as! Bool }
    public func ValidatePageDefault() -> Bool { callLocalFunction(l: ["", Pointer(), ___className, "ValidatePageDefault"]) as! Bool }
    public func Wizard() -> QWizard { callLocalFunction(l: ["", Pointer(), ___className, "Wizard"]) as! QWizard }
    public func ConnectDestroyQWizardPage(f: @escaping () -> Void) { _ = callLocalAndRegisterRemoteFunction(l: ["", Pointer(), ___className, "ConnectDestroyQWizardPage", "___REMOTE_CALLBACK___"], f: { (_: [Any]) -> Any in f() } as Any) }
    public func DisconnectDestroyQWizardPage() { _ = callLocalAndDeregisterRemoteFunction(l: ["", Pointer(), ___className, "DisconnectDestroyQWizardPage"]) }
    public func DestroyQWizardPage() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQWizardPage"]) }
    public func DestroyQWizardPageDefault() { _ = callLocalFunction(l: ["", Pointer(), ___className, "DestroyQWizardPageDefault"]) }
}

public func NewQWizardPageFromPointer(ptr: String) -> QWizardPage { let r = QWizardPage(); r.initFrom(p: ptr, n: "widgets.QWizardPage"); return r }
public func NewQWizardPage(parent: QWidget_ITF? = nil) -> QWizardPage { Widgets.initModule(); return callLocalFunction(l: ["", "", "widgets.NewQWizardPage", "", parent as Any]) as! QWizardPage }
